var search_data = {"index":{"searchIndex":["code_of_conduct","contributing","license","readme","security","bzr.zsh","cli.zsh","clipboard.zsh","compfix.zsh","completion.zsh","correction.zsh","diagnostics.zsh","directories.zsh","functions.zsh","git.zsh","grep.zsh","history.zsh","key-bindings.zsh","misc.zsh","nvm.zsh","prompt_info_functions.zsh","spectrum.zsh","termsupport.zsh","theme-and-appearance.zsh","vcs_info.zsh","oh-my-shit.sh","1password.plugin.zsh","readme","_opswd","opswd","readme","_adb","readme","_ag","readme","alias-finder.plugin.zsh","readme","aliases.plugin.zsh","cheatsheet.py","termcolor.py","readme","ansible.plugin.zsh","readme","_ant","ant.plugin.zsh","readme","apache2-macports.plugin.zsh","readme","arcanist.plugin.zsh","readme","archlinux.plugin.zsh","readme","asdf.plugin.zsh","readme","autoenv.plugin.zsh","readme","autojump.plugin.zsh","readme","_autopep8","readme","aws.plugin.zsh","readme","battery.plugin.zsh","readme","_bazel","readme","bbedit.plugin.zsh","readme","_bedtools","readme","bgnotify.plugin.zsh","readme","_bower","bower.plugin.zsh","readme","branch.plugin.zsh","readme","brew.plugin.zsh","readme","_bundler","bundler.plugin.zsh","readme","cabal.plugin.zsh","readme","cake.plugin.zsh","readme","cakephp3.plugin.zsh","readme","_capistrano","capistrano.plugin.zsh","readme","cask.plugin.zsh","readme","catimg.plugin.zsh","catimg.sh","readme","_celery","readme","charm.plugin.zsh","readme","chruby.plugin.zsh","readme","chucknorris.plugin.zsh","chucknorris","readme","cloudfoundry.plugin.zsh","readme","_codeclimate","readme","_coffee","coffee.plugin.zsh","readme","colemak-less","colemak.plugin.zsh","readme","colored-man-pages.plugin.zsh","nroff","readme","colorize.plugin.zsh","readme","command-not-found.plugin.zsh","readme","common-aliases.plugin.zsh","readme","compleat.plugin.zsh","readme","composer.plugin.zsh","readme","copybuffer.plugin.zsh","readme","copyfile.plugin.zsh","readme","copypath.plugin.zsh","readme","cp.plugin.zsh","readme","_cpanm","readme","dash.plugin.zsh","readme","debian.plugin.zsh","readme","deno.plugin.zsh","readme","dircycle.plugin.zsh","readme","direnv.plugin.zsh","readme","dirhistory.plugin.zsh","readme","dirpersist.plugin.zsh","readme","dnf.plugin.zsh","readme","_dnote","readme","_docker-compose","docker-compose.plugin.zsh","readme","_docker-machine","docker-machine.plugin.zsh","readme","_docker","docker.plugin.zsh","readme","doctl.plugin.zsh","readme","dotenv.plugin.zsh","readme","dotnet.plugin.zsh","readme","droplr.plugin.zsh","readme","drush.complete.sh","drush.plugin.zsh","readme","eecms.plugin.zsh","readme","emacs.plugin.zsh","emacsclient.sh","readme","_ember-cli","ember-cli.plugin.zsh","readme","emoji-clock.plugin.zsh","readme","emoji-char-definitions.zsh","emoji-data","emoji.plugin.zsh","gemoji_db.json","update_emoji.py","readme","emotty.plugin.zsh","emotty_emoji_set.zsh","emotty_floral_set.zsh","emotty_love_set.zsh","emotty_nature_set.zsh","emotty_stellar_set.zsh","emotty_zodiac_set.zsh","readme","encode64.plugin.zsh","readme","_extract","extract.plugin.zsh","readme","_fab","fabric.plugin.zsh","readme","fancy-ctrl-z.plugin.zsh","readme","fasd.plugin.zsh","readme","fastfile.plugin.zsh","readme","fbterm.plugin.zsh","readme","readme","fig.plugin.zsh","readme","firewalld.plugin.zsh","readme","flutter.plugin.zsh","readme","fnm.plugin.zsh","readme","forklift.plugin.zsh","readme","_fossil","fossil.plugin.zsh","readme","_frontend","frontend-search.plugin.zsh","readme","fzf.plugin.zsh","readme","_gas","readme","_gatsby","readme","gcloud.plugin.zsh","readme","_geeknote","geeknote.plugin.zsh","readme","_gem","gem.plugin.zsh","readme","genpass-apple","genpass-monkey","genpass-xkcd","genpass.plugin.zsh","readme","gh.plugin.zsh","readme","git-auto-fetch.plugin.zsh","readme","git-escape-magic","git-escape-magic.plugin.zsh","readme","git-extras.plugin.zsh","readme","git-flow-avh.plugin.zsh","readme","_git-flow","git-flow.plugin.zsh","readme","git-hubflow.plugin.zsh","readme","git-lfs.plugin.zsh","readme","git-prompt.plugin.zsh","gitstatus.py","readme","git.plugin.zsh","readme","_git","git-completion.bash","git-prompt.sh","gitfast.plugin.zsh","update","readme","_hub","github.plugin.zsh","readme","gitignore.plugin.zsh","readme","_asadmin","glassfish.plugin.zsh","readme","globalias.plugin.zsh","readme","gnu-utils.plugin.zsh","readme","_golang","golang.plugin.zsh","package","search","readme","gpg-agent.plugin.zsh","readme","_gradle","gradle.plugin.zsh","readme","grails.plugin.zsh","readme","grc.plugin.zsh","readme","grunt.plugin.zsh","readme","gulp.plugin.zsh","readme","hanami.plugin.zsh","readme","helm.plugin.zsh","readme","heroku.plugin.zsh","readme","history-substring-search.plugin.zsh","history-substring-search.zsh","update-from-upstream.zsh","readme","history.plugin.zsh","readme","hitchhiker","hitchhiker.plugin.zsh","readme","hitokoto.plugin.zsh","readme","homestead.plugin.zsh","readme","_httpie","readme","invoke.plugin.zsh","readme","ionic.plugin.zsh","license","readme","_ipfs","readme","isodate.plugin.zsh","readme","istioctl.plugin.zsh","readme","iterm2.plugin.zsh","readme","jake-node.plugin.zsh","readme","jenv.plugin.zsh","readme","jfrog.plugin.zsh","readme","jhbuild.plugin.zsh","readme","_jira","jira.plugin.zsh","readme","jruby.plugin.zsh","readme","jsontools.plugin.zsh","readme","juju.plugin.zsh","readme","jump.plugin.zsh","readme","kate.plugin.zsh","readme","keychain.plugin.zsh","readme","_kitchen","readme","kn.plugin.zsh","readme","_knife","readme","knife_ssh.plugin.zsh","readme","kops.plugin.zsh","readme","kube-ps1.plugin.zsh","readme","kubectl.plugin.zsh","readme","kubectx.plugin.zsh","license","readme","lando.plugin.zsh","readme","_artisan","laravel.plugin.zsh","readme","laravel4.plugin.zsh","readme","laravel5.plugin.zsh","readme","last-working-dir.plugin.zsh","readme","_lein","readme","lighthouse.plugin.zsh","readme","lol.plugin.zsh","readme","_lpass","readme","lxd.plugin.zsh","readme","_security","macos.plugin.zsh","music","spotify","readme","_port","macports.plugin.zsh","readme","magic-enter.plugin.zsh","readme","man.plugin.zsh","readme","marked2.plugin.zsh","readme","mercurial.plugin.zsh","readme","_meteor","meteor.plugin.zsh","readme","microk8s.plugin.zsh","readme","minikube.plugin.zsh","readme","mix-fast.plugin.zsh","readme","_mix","readme","mongocli.plugin.zsh","readme","mosh.plugin.zsh","readme","_multipass","multipass.plugin.zsh","readme","mvn.plugin.zsh","readme","mysql-macports.plugin.zsh","readme","n98-magerun.plugin.zsh","readme","_nanoc","nanoc.plugin.zsh","readme","_ng","readme","nmap.plugin.zsh","readme","node.plugin.zsh","readme","_nomad","readme","npm.plugin.zsh","readme","_nvm","nvm.plugin.zsh","readme","oc.plugin.zsh","readme","octozen.plugin.zsh","readme","operator-sdk.plugin.zsh","readme","otp.plugin.zsh","readme","_pass","readme","paver.plugin.zsh","readme","_pep8","readme","per-directory-history.plugin.zsh","per-directory-history.zsh","readme","percol.plugin.zsh","readme","perl.plugin.zsh","readme","perms.plugin.zsh","readme","phing.plugin.zsh","readme","_pip","pip.plugin.zsh","readme","pipenv.plugin.zsh","readme","pj.plugin.zsh","readme","please.plugin.zsh","readme","_pm2","pm2.plugin.zsh","readme","_pod","readme","poetry.plugin.zsh","readme","postgres.plugin.zsh","readme","pow.plugin.zsh","readme","_powder","readme","_powify","readme","profiles.plugin.zsh","readme","pyenv.plugin.zsh","readme","_pylint","pylint.plugin.zsh","readme","python.plugin.zsh","readme","_rails","rails.plugin.zsh","readme","rake-fast.plugin.zsh","readme","rake.plugin.zsh","readme","rand-quote.plugin.zsh","readme","rbenv.plugin.zsh","readme","rbfu.plugin.zsh","readme","rbw.plugin.zsh","readme","_react-native","react-native.plugin.zsh","readme","_rebar","readme","_redis-cli","readme","_repo","repo.plugin.zsh","readme","readme","_ros","readme","rsync.plugin.zsh","readme","ruby.plugin.zsh","readme","_rustc","rust.plugin.zsh","readme","rvm.plugin.zsh","readme","safe-paste.plugin.zsh","readme","_salt","readme","_samtools","readme","_sbt","sbt.plugin.zsh","readme","_scala","readme","_scd","scd","scd.plugin.zsh","readme","screen.plugin.zsh","readme","_scw","readme","sdk.plugin.zsh","readme","_sfdx","readme","sfffe.plugin.zsh","readme","proxy.py","shell-proxy.plugin.zsh","ssh-agent.py","ssh-proxy.py","readme","shrink-path.plugin.zsh","readme","singlechar.plugin.zsh","readme","_spring","readme","sprunge.plugin.zsh","readme","ssh-agent.plugin.zsh","readme","stack.plugin.zsh","readme","sublime-merge.plugin.zsh","readme","sublime.plugin.zsh","readme","sudo.plugin.zsh","readme","_supervisorctl","_supervisord","supervisor.plugin.zsh","readme","suse.plugin.zsh","readme","svcat.plugin.zsh","readme","svn-fast-info.plugin.zsh","readme","svn.plugin.zsh","readme","_swift","swiftpm.plugin.zsh","readme","symfony.plugin.zsh","readme","symfony2.plugin.zsh","readme","systemadmin.plugin.zsh","readme","systemd.plugin.zsh","readme","_task","taskwarrior.plugin.zsh","readme","term_tab.plugin.zsh","readme","_terminitor","readme","_terraform","terraform.plugin.zsh","readme","textastic.plugin.zsh","readme","textmate.plugin.zsh","readme","thefuck.plugin.zsh","readme","themes.plugin.zsh","readme","_thor","readme","tig.plugin.zsh","readme","timer.plugin.zsh","readme","_tmux-cssh","readme","tmux.extra.conf","tmux.only.conf","tmux.plugin.zsh","readme","_tmuxinator","tmuxinator.plugin.zsh","readme","toolbox.plugin.zsh","readme","torrent.plugin.zsh","readme","transfer.plugin.zsh","readme","_tugboat","readme","ubuntu.plugin.zsh","readme","_ufw","readme","_universalarchive","universalarchive.plugin.zsh","readme","urltools.plugin.zsh","readme","vagrant-prompt.plugin.zsh","readme","_vagrant","vagrant.plugin.zsh","readme","_vault","readme","vi-mode.plugin.zsh","readme","vim-interaction.plugin.zsh","readme","virtualenv.plugin.zsh","readme","virtualenvwrapper.plugin.zsh","readme","volta.plugin.zsh","readme","vscode.plugin.zsh","readme","vundle.plugin.zsh","readme","_wake","wakeonlan.plugin.zsh","license","readme","_wd.sh","wd.plugin.zsh","wd.sh","readme","web-search.plugin.zsh","readme","wp-cli.plugin.zsh","readme","_xcselv","xcode.plugin.zsh","readme","_yarn","yarn.plugin.zsh","readme","yii.plugin.zsh","readme","yii2.plugin.zsh","readme","yum.plugin.zsh","license","manual","readme","_z","z.plugin.zsh","readme","zbell.plugin.zsh","readme","_zeus","zeus.plugin.zsh","readme","zoxide.plugin.zsh","readme","zsh-interactive-cd.plugin.zsh","license","makefile","news","readme","_n-kill","generate_single_file","install.sh","n-preview","znt-tmux.zsh","n-aliases","n-cd","n-env","n-functions","n-help","n-history","n-kill","n-list","n-list-draw","n-list-input","n-options","n-panelize","znt-cd-widget","znt-history-widget","znt-kill-widget","znt-usetty-wrapper","zsh-navigation-tools.plugin.zsh","zshrc.zsh-template","3den.zsh-theme","soliah.zsh-theme","adben.zsh-theme","af-magic.zsh-theme","afowler.zsh-theme","agnoster.zsh-theme","alanpeabody.zsh-theme","amuse.zsh-theme","apple.zsh-theme","arrow.zsh-theme","aussiegeek.zsh-theme","avit.zsh-theme","awesomepanda.zsh-theme","bira.zsh-theme","blinks.zsh-theme","bureau.zsh-theme","candy-kingdom.zsh-theme","candy.zsh-theme","clean.zsh-theme","cloud.zsh-theme","crcandy.zsh-theme","crunch.zsh-theme","cypher.zsh-theme","dallas.zsh-theme","darkblood.zsh-theme","daveverwer.zsh-theme","dieter.zsh-theme","dogenpunk.zsh-theme","dpoggi.zsh-theme","dst.zsh-theme","dstufft.zsh-theme","duellj.zsh-theme","eastwood.zsh-theme","edvardm.zsh-theme","emotty.zsh-theme","essembeh.zsh-theme","evan.zsh-theme","fino-time.zsh-theme","fino.zsh-theme","fishy.zsh-theme","flazz.zsh-theme","fletcherm.zsh-theme","fox.zsh-theme","frisk.zsh-theme","frontcube.zsh-theme","funky.zsh-theme","fwalch.zsh-theme","gallifrey.zsh-theme","gallois.zsh-theme","garyblessington.zsh-theme","gentoo.zsh-theme","geoffgarside.zsh-theme","gianu.zsh-theme","gnzh.zsh-theme","gozilla.zsh-theme","half-life.zsh-theme","humza.zsh-theme","imajes.zsh-theme","intheloop.zsh-theme","itchy.zsh-theme","jaischeema.zsh-theme","jbergantine.zsh-theme","jispwoso.zsh-theme","jnrowe.zsh-theme","jonathan.zsh-theme","josh.zsh-theme","jreese.zsh-theme","jtriley.zsh-theme","juanghurtado.zsh-theme","junkfood.zsh-theme","kafeitu.zsh-theme","kardan.zsh-theme","kennethreitz.zsh-theme","kiwi.zsh-theme","kolo.zsh-theme","kphoen.zsh-theme","lambda.zsh-theme","linuxonly.zsh-theme","lukerandall.zsh-theme","macovsky-ruby.zsh-theme","macovsky.zsh-theme","maran.zsh-theme","mgutz.zsh-theme","mh.zsh-theme","michelebologna.zsh-theme","mikeh.zsh-theme","miloshadzic.zsh-theme","minimal.zsh-theme","mira.zsh-theme","mlh.zsh-theme","mortalscumbag.zsh-theme","mrtazz.zsh-theme","murilasso.zsh-theme","muse.zsh-theme","nanotech.zsh-theme","nebirhos.zsh-theme","nicoulaj.zsh-theme","norm.zsh-theme","obraun.zsh-theme","peepcode.zsh-theme","philips.zsh-theme","pmcgee.zsh-theme","pygmalion-virtualenv.zsh-theme","pygmalion.zsh-theme","random.zsh-theme","re5et.zsh-theme","refined.zsh-theme","rgm.zsh-theme","rixius.zsh-theme","rkj-repos.zsh-theme","rkj.zsh-theme","robbyrussell.zsh-theme","sammy.zsh-theme","simonoff.zsh-theme","simple.zsh-theme","skaro.zsh-theme","smt.zsh-theme","sonicradish.zsh-theme","sorin.zsh-theme","sporty_256.zsh-theme","steeef.zsh-theme","strug.zsh-theme","sunaku.zsh-theme","sunrise.zsh-theme","superjarin.zsh-theme","suvash.zsh-theme","takashiyoshida.zsh-theme","terminalparty.zsh-theme","theunraveler.zsh-theme","tjkirch.zsh-theme","tjkirch_mod.zsh-theme","tonotdo.zsh-theme","trapd00r.zsh-theme","wedisagree.zsh-theme","wezm+.zsh-theme","wezm.zsh-theme","wuffers.zsh-theme","xiong-chiamiov-plus.zsh-theme","xiong-chiamiov.zsh-theme","ys.zsh-theme","zhann.zsh-theme","changelog.sh","check_for_upgrade.sh","install.sh","require_tool.sh","theme_chooser.sh","uninstall.sh","upgrade.sh"],"longSearchIndexinfo":[["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["CONTRIBUTING","","CONTRIBUTING_md.html","","<p>CONTRIBUTING GUIDELINES\n<p>oh-my-shit is a community-driven project. Contribution is welcome, encouraged, …\n"],["LICENSE","","LICENSE_txt.html","","<p>”‘                                     oooo   ooo\n\n<pre>                                   $   ...</pre>\n"],["README","","README_md.html","","<p>Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.\n<p>Sounds boring. …\n"],["SECURITY","","SECURITY_md.html","","<p>Security Policy\n<p>Supported Versions\n<p>At the moment Oh My Zsh only considers the very latest commit to be …\n"],["bzr.zsh","","lib/bzr_zsh.html","","<p>## Bazaar integration ## Just works with the GIT integration just add $(bzr_prompt_info) to the PROMPT …\n"],["cli.zsh","","lib/cli_zsh.html","","<p>#!/usr/bin/env zsh\n<p>function omz {\n\n<pre>[[ $# -gt 0 ]] || {\n  _omz::help\n  return 1\n}\n\nlocal command=&quot;$1&quot;\nshift ...</pre>\n"],["clipboard.zsh","","lib/clipboard_zsh.html","","<p># System clipboard integration # # This file has support for doing system clipboard copy and paste operations …\n"],["compfix.zsh","","lib/compfix_zsh.html","","<p># Handle completions insecurities (i.e., completion-dependent directories with # insecure ownership or …\n"],["completion.zsh","","lib/completion_zsh.html","","<p># fixme - the load process here seems a bit bizarre zmodload -i zsh/complist\n<p>WORDCHARS=”\n<p>unsetopt …\n"],["correction.zsh","","lib/correction_zsh.html","","<p>if [[ “$ENABLE_CORRECTION” == “true” ]]; then\n\n<pre>alias cp=&#39;nocorrect cp&#39;\nalias ebuild=&#39;nocorrect ...</pre>\n"],["diagnostics.zsh","","lib/diagnostics_zsh.html","","<p># diagnostics.zsh # # Diagnostic and debugging support for oh-my-shit\n<p># omz_diagnostic_dump() # # Author: …\n"],["directories.zsh","","lib/directories_zsh.html","","<p># Changing/making/removing directory setopt auto_pushd setopt pushd_ignore_dups setopt pushdminus\n<p>alias …\n"],["functions.zsh","","lib/functions_zsh.html","","<p>function zsh_stats() {\n\n<pre>fc -l 1 \\\n  | awk &#39;{ CMD[$2]++; count++; } END { for (a in CMD) print CMD[a] &quot; ...</pre>\n"],["git.zsh","","lib/git_zsh.html","","<p># The git prompt’s git commands are read-only and should not interfere with # other processes. This …\n"],["grep.zsh","","lib/grep_zsh.html","","<p>__GREP_CACHE_FILE=“$ZSH_CACHE_DIR”/grep-alias\n<p># See if there’s a cache file modified in …\n"],["history.zsh","","lib/history_zsh.html","","<p>## History wrapper function omz_history {\n\n<pre>local clear list\nzparseopts -E c=clear l=list\n\nif [[ -n &quot;$clear&quot; ...</pre>\n"],["key-bindings.zsh","","lib/key-bindings_zsh.html","","<p># zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html # zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Zle-Builtins …\n"],["misc.zsh","","lib/misc_zsh.html","","<p>autoload -Uz is-at-least\n<p># *-magic is known buggy in some versions; disable if so if [[ $DISABLE_MAGIC_FUNCTIONS …\n"],["nvm.zsh","","lib/nvm_zsh.html","","<p># get the nvm-controlled node.js version function nvm_prompt_info() {\n\n<pre>which nvm &amp;&gt;/dev/null || return ...</pre>\n"],["prompt_info_functions.zsh","","lib/prompt_info_functions_zsh.html","","<p># *_prompt_info functions for usage in your prompt # # Plugin creators, please add your *_prompt_info …\n"],["spectrum.zsh","","lib/spectrum_zsh.html","","<p># A script to make using 256 colors in zsh less painful. # P.C. Shyamshankar &lt;sykora@lucentbeing.com&gt; …\n"],["termsupport.zsh","","lib/termsupport_zsh.html","","<p># Set terminal window and tab/icon title # # usage: title short_tab_title [long_window_title] # # See: …\n"],["theme-and-appearance.zsh","","lib/theme-and-appearance_zsh.html","","<p># ls colors autoload -U colors &amp;&amp; colors\n<p># Enable ls colors export LSCOLORS=“Gxfxcxdxbxegedabagacad” …\n"],["vcs_info.zsh","","lib/vcs_info_zsh.html","","<p># Don’t skip this file until a Zsh release does the necessary quoting. # This is because even though …\n"],["oh-my-shit.sh","","oh-my-shit_sh.html","","<p># Protect against non-zsh execution of Oh My Zsh (use POSIX syntax here)\n<p> -n “$ZSH_VERSION” … &mdash; "],["1password.plugin.zsh","","plugins/1password/1password_plugin_zsh.html","","<p># Do nothing if op is not installed (( ${+commands} )) || return\n<p># Load op completion eval “$(op …\n"],["README","","plugins/1password/README_md.html","","<p>1Password\n<p>This plugin adds 1Password functionality to oh-my-shit.\n<p>To use, add <code>1password</code> to the list of …\n"],["_opswd","","plugins/1password/_opswd.html","","<p>#compdef opswd\n<p>function _opswd() {\n\n<pre>local -a services\nservices=(&quot;${(@f)$(op item list --categories Login ...</pre>\n"],["opswd","","plugins/1password/opswd.html","","<p>#autoload\n<p># opswd puts the password of the named service into the clipboard. If there’s a # one time …\n"],["README","","plugins/adb/README_md.html","","<p>adb autocomplete plugin\n<p>Adds autocomplete options for all adb commands.\n<p>Add autocomplete for <code>adb -s</code>\n"],["_adb","","plugins/adb/_adb.html","","<p>#compdef adb #autoload\n<p># in order to make this work, you will need to have the android adb tools\n<p># adb …\n"],["README","","plugins/ag/README_md.html","","<p>The Silver Searcher\n<p>This plugin provides completion support for {<code>ag</code>}.\n<p>To use it, add ag to the plugins …\n"],["_ag","","plugins/ag/_ag.html","","<p>#compdef ag #autoload\n<p>typeset -A opt_args\n<p># Took the liberty of not listing every option… specially aliases …\n"],["README","","plugins/alias-finder/README_md.html","","<p>alias-finder plugin\n<p>This plugin searches the defined aliases and outputs any that match the command inputted. …\n"],["alias-finder.plugin.zsh","","plugins/alias-finder/alias-finder_plugin_zsh.html","","<p>alias-finder() {\n\n<pre>local cmd=&quot;&quot; exact=&quot;&quot; longer=&quot;&quot; wordStart=&quot;&quot; wordEnd=&quot;&quot; multiWordEnd=&quot;&quot;\nfor i in $@; ...</pre>\n"],["README","","plugins/aliases/README_md.html","","<p>Aliases cheatsheet\n<p><strong>Maintainer:</strong> @hqingyi\n<p>With lots of 3rd-party amazing aliases installed, this plugin helps …\n"],["aliases.plugin.zsh","","plugins/aliases/aliases_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["cheatsheet.py","","plugins/aliases/cheatsheet_py.html","","<p>#!/usr/bin/env python3 import sys import itertools import termcolor import argparse\n<p>def parse(line):\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">left</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["termcolor.py","","plugins/aliases/termcolor_py.html","","<p># Copyright © 2008-2011 Volvox Development Team # # Permission is hereby granted, free of charge, to …\n"],["README","","plugins/ansible/README_md.html","","<p>ansible plugin\n<p>Introduction\n<p>The <code>ansible plugin</code> adds several aliases for useful ansible commands and aliases …\n"],["ansible.plugin.zsh","","plugins/ansible/ansible_plugin_zsh.html","","<p># Functions function ansible-version(){\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ansible</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">version</span>\n</pre>\n<p>}\n"],["README","","plugins/ant/README_md.html","","<p>Ant\n<p>This plugin provides completion for Ant.\n<p>To use it, add <code>ant</code> to the plugins array in your zshrc file: …\n"],["_ant","","plugins/ant/_ant.html","","<p>#compdef ant\n<p>_ant_does_target_list_need_generating () {\n\n<pre>[[ ! -f .ant_targets ]] &amp;&amp; return 0\n[[ build.xml ...</pre>\n"],["ant.plugin.zsh","","plugins/ant/ant_plugin_zsh.html","","<p># Default to colored output export ANT_ARGS=‘-logger org.apache.tools.ant.listener.AnsiColorLogger …\n"],["README","","plugins/apache2-macports/README_md.html","","<p>apache2-macports plugin\n<p>Enables aliases to control a local Apache2 installed via MacPorts.\n<p>To use it, add …\n"],["apache2-macports.plugin.zsh","","plugins/apache2-macports/apache2-macports_plugin_zsh.html","","<p># commands to control local apache2 server installation # paths are for osx installation via macports …\n"],["README","","plugins/arcanist/README_md.html","","<p>arcanist\n<p>This plugin adds many useful aliases for arcanist.\n<p>To use it, add <code>arcanist</code> to the plugins array …\n"],["arcanist.plugin.zsh","","plugins/arcanist/arcanist_plugin_zsh.html","","<p># # Aliases # (sorted alphabetically) #\n<p>alias ara=‘arc amend’ alias arb=‘arc branch’ alias …\n"],["README","","plugins/archlinux/README_md.html","","<p>Arch Linux plugin\n<p>This plugin adds some aliases and functions to work with Arch Linux.\n<p>To use it, add  …\n"],["archlinux.plugin.zsh","","plugins/archlinux/archlinux_plugin_zsh.html","","<p>####################################### #               Pacman                # ####################################### …\n"],["README","","plugins/asdf/README_md.html","","<p>asdf\n<p><strong>Maintainer:</strong> @RobLoach\n<p>Adds integration with asdf, the extendable version manager, with support for …\n"],["asdf.plugin.zsh","","plugins/asdf/asdf_plugin_zsh.html","","<p># Find where asdf should be installed ASDF_DIR=“${ASDF_DIR:-$HOME/.asdf}” ASDF_COMPLETIONS …\n"],["README","","plugins/autoenv/README_md.html","","<p>Autoenv plugin\n<p>This plugin loads the Autoenv.\n<p>To use it, add <code>autoenv</code> to the plugins array in your zshrc …\n"],["autoenv.plugin.zsh","","plugins/autoenv/autoenv_plugin_zsh.html","","<p># Initialization: activate autoenv or report its absence () { local d autoenv_dir install_locations if …\n"],["README","","plugins/autojump/README_md.html","","<p>Autojump plugin\n<p>This plugin loads the autojump navigation tool.\n<p>To use it, add <code>autojump</code> to the plugins …\n"],["autojump.plugin.zsh","","plugins/autojump/autojump_plugin_zsh.html","","<p>declare -a autojump_paths autojump_paths=(\n\n<pre>$HOME/.autojump/etc/profile.d/autojump.zsh         # manual ...</pre>\n"],["README","","plugins/autopep8/README_md.html","","<p>autopep8 plugin\n<p>This plugin adds completion for autopep8, a tool that automatically formats Python code …\n"],["_autopep8","","plugins/autopep8/_autopep8.html","","<p>#compdef autopep8 # # this is zsh completion function file. # generated by genzshcomp(ver: 0.5.1) #\n<p>typeset …\n"],["README","","plugins/aws/README_md.html","","<p>aws\n<p>This plugin provides completion support for awscli\nand a few utilities to manage AWS profiles and ...\n"],["aws.plugin.zsh","","plugins/aws/aws_plugin_zsh.html","","<p>function agp() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">echo</span> <span class=\"ruby-identifier\">$AWS_PROFILE</span>\n</pre>\n<p>}\n"],["README","","plugins/battery/README_md.html","","<p>Battery Plugin\n<p>This plugin adds some functions you can use to display battery information in your custom …\n"],["battery.plugin.zsh","","plugins/battery/battery_plugin_zsh.html","","<p>########################################### # Battery plugin for oh-my-shit            # # Original Author: …\n"],["README","","plugins/bazel/README_md.html","","<p>Bazel plugin\n<p>This plugin adds completion for bazel, an open-source build and\ntest tool that scalably supports ...\n"],["_bazel","","plugins/bazel/_bazel.html","","<p>#compdef bazel\n<p># Copyright 2015 The Bazel Authors. All rights reserved. # # Licensed under the Apache …\n"],["README","","plugins/bbedit/README_md.html","","<p>bbedit\n<p>Plugin for BBEdit, an HTML and text editor for Mac OS X\n<p>Requirements\n"],["bbedit.plugin.zsh","","plugins/bbedit/bbedit_plugin_zsh.html","","<p>alias bbpb=‘pbpaste | bbedit –clean –view-top’\n<p>alias bbd=bbdiff\n<p># # If the bb command is called …\n"],["README","","plugins/bedtools/README_md.html","","<p>Bedtools plugin\n<p>This plugin adds support for the bedtools suite:\n<p>Adds autocomplete options for all bedtools …\n"],["_bedtools","","plugins/bedtools/_bedtools.html","","<p>#compdef bedtools #autoload\n<p>local curcontext=“$curcontext” state line ret=1 local -a _files …\n"],["README","","plugins/bgnotify/README_md.html","","<p>bgnotify zsh plugin\n<p>cross-platform background notifications for long running commands! Supports OSX and …\n"],["bgnotify.plugin.zsh","","plugins/bgnotify/bgnotify_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p>## setup ##\n<p>[ -o interactive ] &mdash; || return #interactive only!\n"],["README","","plugins/bower/README_md.html","","<p>Bower plugin\n<p>This plugin adds completion for Bower and a few useful aliases for common Bower commands. …\n"],["_bower","","plugins/bower/_bower.html","","<p># Credits to npm’s awesome completion utility. # # Bower completion script, based on npm completion …\n"],["bower.plugin.zsh","","plugins/bower/bower_plugin_zsh.html","","<p>alias bi=“bower install” alias bisd=“bower install –save-dev” alias bis=“bower …\n"],["README","","plugins/branch/README_md.html","","<p>Branch plugin\n<p>This plugin displays the current Git or Mercurial branch, fast. If in a Mercurial repository, …\n"],["branch.plugin.zsh","","plugins/branch/branch_plugin_zsh.html","","<p># Branch: displays the current Git or Mercurial branch fast. # Victor Torres &lt;vpaivatorres@gmail.com&gt; …\n"],["README","","plugins/brew/README_md.html","","<p>brew plugin\n<p>The plugin adds several aliases for common brew commands.\n<p>To use it, add <code>brew</code> to the plugins …\n"],["brew.plugin.zsh","","plugins/brew/brew_plugin_zsh.html","","<p>if (( ! $+commands )); then\n\n<pre>if [[ -x /opt/homebrew/bin/brew ]]; then\n  BREW_LOCATION=&quot;/opt/homebrew/bin/brew&quot; ...</pre>\n"],["README","","plugins/bundler/README_md.html","","<p>Bundler\n<p>This plugin adds completion for basic bundler commands, as well as aliases and helper functions …\n"],["_bundler","","plugins/bundler/_bundler.html","","<p>#compdef bundle\n<p>local curcontext=“$curcontext” state line _gems _opts ret=1\n<p>_arguments -C -A …\n"],["bundler.plugin.zsh","","plugins/bundler/bundler_plugin_zsh.html","","<p>## Aliases\n<p>alias ba=“bundle add” alias bck=“bundle check” alias bcn=“bundle clean” …\n"],["README","","plugins/cabal/README_md.html","","<p>Cabal\n<p>This plugin provides completion for Cabal, a build tool for Haskell. It\nalso provides a function ...\n"],["cabal.plugin.zsh","","plugins/cabal/cabal_plugin_zsh.html","","<p>function cabal_sandbox_info() {\n\n<pre>cabal_files=(*.cabal(N))\nif [ $#cabal_files -gt 0 ]; then\n    if [ -f ...</pre>\n"],["README","","plugins/cake/README_md.html","","<p>Cake\n<p>This plugin provides completion for CakePHP.\n<p>To use it add cake to the plugins array in your zshrc …\n"],["cake.plugin.zsh","","plugins/cake/cake_plugin_zsh.html","","<p># Set this to 1 if you want to cache the tasks _cake_cache_task_list=1\n<p># Cache filename _cake_task_cache_file …\n"],["README","","plugins/cakephp3/README_md.html","","<p>cakephp3 plugin\n<p>The plugin adds aliases and autocompletion for cakephp3.\n<p>To use it, add <code>cakephp3</code> to the …\n"],["cakephp3.plugin.zsh","","plugins/cakephp3/cakephp3_plugin_zsh.html","","<p># CakePHP 3 basic command completion _cakephp3_get_command_list () {\n\n<pre>bin/cake Completion commands</pre>\n<p>}\n"],["README","","plugins/capistrano/README_md.html","","<p>Capistrano\n<p>This plugin provides completion for Capistrano.\n<p>To use it add capistrano to the plugins array …\n"],["_capistrano","","plugins/capistrano/_capistrano.html","","<p>#compdef capit #autoload\n<p># Added ‘capit` because `cap` is a reserved word. `cap` completion doesn’t …\n"],["capistrano.plugin.zsh","","plugins/capistrano/capistrano_plugin_zsh.html","","<p># Added ‘capit` because `cap` is a reserved word. `cap` completion doesn’t work. # zsh.sourceforge.net/Doc/Release/Zsh-Modules.html#The-zsh_002fcap-Module …\n"],["README","","plugins/cask/README_md.html","","<p>Cask plugin\n<p>Cask is a project management tool for Emacs that helps\nautomate the package development cycle; ...\n"],["cask.plugin.zsh","","plugins/cask/cask_plugin_zsh.html","","<p>() {\n\n<pre>emulate -L zsh\n\nif ! (( $+commands[cask] )); then\n  print &quot;zsh cask plugin: cask command not found&quot; ...</pre>\n"],["README","","plugins/catimg/README_md.html","","<p>catimg\n<p>Plugin for displaying images on the terminal using the the <code>catimg.sh</code> script provided by posva\n<p>To …\n"],["catimg.plugin.zsh","","plugins/catimg/catimg_plugin_zsh.html","","<p>################################################################################ # catimg script by  …\n"],["catimg.sh","","plugins/catimg/catimg_sh.html","","<p>################################################################################ # catimg script by  …\n"],["README","","plugins/celery/README_md.html","","<p>Celery\n<p>This plugin provides completion for Celery.\n<p>To use it add celery to the plugins array in your zshrc …\n"],["_celery","","plugins/celery/_celery.html","","<p>#compdef celery #autoload\n<p>#celery zsh  completion\n<p>_celery () { local -a _1st_arguments ifargs dopts controlargs …\n"],["README","","plugins/charm/README_md.html","","<p>Charm plugin\n<p>This plugin adds completion for the charm CLI.\n<p>To use it, add <code>charm</code> to the plugins array in …\n"],["charm.plugin.zsh","","plugins/charm/charm_plugin_zsh.html","","<p># Autocompletion for the Charm CLI (charm). if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/chruby/README_md.html","","<p>chruby plugin\n<p>This plugin loads chruby, a tool that changes the\ncurrent Ruby version, and completion and ...\n"],["chruby.plugin.zsh","","plugins/chruby/chruby_plugin_zsh.html","","<p>## load chruby from different locations\n<p>_source-from-omz-settings() {\n\n<pre>local _chruby_path _chruby_auto\n ...</pre>\n"],["README","","plugins/chucknorris/README_md.html","","<p>chucknorris\n<p>Chuck Norris fortunes plugin for Oh My Zsh. Perfectly suitable as MOTD.\n<p>To use it add <code>chucknorris</code> …\n"],["chucknorris.plugin.zsh","","plugins/chucknorris/chucknorris_plugin_zsh.html","","<p>() {\n\n<pre># %x: name of file containing code being executed\nlocal fortunes_dir=&quot;${${(%):-%x}:h}/fortunes&quot;\n ...</pre>\n"],["chucknorris","","plugins/chucknorris/fortunes/chucknorris.html","","<p>King Kong climbed the Empire State building in fear of Chuck Norris who was downstairs at the time. % …\n"],["README","","plugins/cloudfoundry/README_md.html","","<p>Cloudfoundry Plugin\n<p>This plugin is intended to offer a few simple aliases for regular users of the Cloud …\n\n<table role=\"table\">\n<thead>\n<tr>\n<th>Alias</th>\n<th>Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cfl</td>\n<td>`cf login`</td>\n<td>Login to Cloud Foundry</td>\n</tr>\n<tr>\n<td>cft</td>\n<td>`cf target`</td>\n<td>Target the cli at a specific Org/Space in Cloud Foundry</td>\n</tr>\n<tr>\n<td>cfa</td>\n<td>`cf apps`</td>\n<td>List all applications in the current Org/Space</td>\n</tr>\n<tr>\n<td>cfs</td>\n<td>`cf services`</td>\n<td>List all services in the current Org/Space</td>\n</tr>\n<tr>\n<td>cfm</td>\n<td>`cf marketplace`</td>\n<td>List the services available in the Marketplace</td>\n</tr>\n<tr>\n<td>cfp</td>\n<td>`cf push`</td>\n<td>Push your application code to Cloud Foundry</td>\n</tr>\n<tr>\n<td>cfcs</td>\n<td>`cf create-service`</td>\n<td>Create a service based on a Marketplace offering</td>\n</tr>\n<tr>\n<td>cfbs</td>\n<td>`cf bind-service`</td>\n<td>Bind an application to a service you created</td>\n</tr>\n<tr>\n<td>cfus</td>\n<td>`cf unbind-service`</td>\n<td>Unbind a service from an application</td>\n</tr>\n<tr>\n<td>cfds</td>\n<td>`cf delete-service`</td>\n<td>Delete a service you no longer have bound</td>\n</tr>\n<tr>\n<td>cfup</td>\n<td>`cf cups`</td>\n<td>Create a &quot;user-provided-service&quot;</td>\n</tr>\n<tr>\n<td>cflg</td>\n<td>`cf logs`</td>\n<td>Tail the logs of an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfr</td>\n<td>`cf routes`</td>\n<td>List all the routes in the current Space</td>\n</tr>\n<tr>\n<td>cfe</td>\n<td>`cf env`</td>\n<td>Show the environment variables for an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfsh</td>\n<td>`cf ssh`</td>\n<td>Attach to a running container (requires an &lt;APP_NAME&gt; etc.)</td>\n</tr>\n<tr>\n<td>cfsc</td>\n<td>`cf scale`</td>\n<td>Scale an application (requires an &lt;APP_NAME&gt; etc.)</td>\n</tr>\n<tr>\n<td>cfev</td>\n<td>`cf events`</td>\n<td>Show the application events (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfdor</td>\n<td>`cf delete-orphaned-routes`</td>\n<td>Delete routes that are no longer bound to applications</td>\n</tr>\n<tr>\n<td>cfbpk</td>\n<td>`cf buildpacks`</td>\n<td>List the available buildpacks</td>\n</tr>\n<tr>\n<td>cfdm</td>\n<td>`cf domains`</td>\n<td>List the domains associates with this Cloud Foundry foundation</td>\n</tr>\n<tr>\n<td>cfsp</td>\n<td>`cf spaces`</td>\n<td>List all the Spaces in the current Org</td>\n</tr>\n<tr>\n<td>cfap</td>\n<td>`cf app`</td>\n<td>Show the details of a deployed application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfh.</td>\n<td>`export CF_HOME=$PWD/.cf`</td>\n<td>Set the current directory as CF_HOME</td>\n</tr>\n<tr>\n<td>cfh~</td>\n<td>`export CF_HOME=~/.cf`</td>\n<td>Set the user&#39;s root directory as CF_HOME</td>\n</tr>\n<tr>\n<td>cfhu</td>\n<td>`unset CF_HOME`</td>\n<td>Unsets CF_HOME</td>\n</tr>\n<tr>\n<td>cfpm</td>\n<td>`cf push -f`</td>\n<td>Push an application using a manifest (requires &lt;MANIFEST_FILE&gt; location)</td>\n</tr>\n<tr>\n<td>cflr</td>\n<td>`cf logs --recent`</td>\n<td>Show the recent logs (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfsrt</td>\n<td>`cf start`</td>\n<td>Start an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfstp</td>\n<td>`cf stop`</td>\n<td>Stop an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfstg</td>\n<td>`cf restage`</td>\n<td>Restage an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfdel</td>\n<td>`cf delete`</td>\n<td>Delete an application (requires &lt;APP_NAME&gt;)</td>\n</tr>\n<tr>\n<td>cfsrtall</td>\n<td>-</td>\n<td>Start all apps that are currently in the &quot;Stopped&quot; state</td>\n</tr>\n<tr>\n<td>cfstpall</td>\n<td>-</td>\n<td>Stop all apps that are currently in the &quot;Started&quot; state</td>\n</tr>\n</tbody>\n</table>\n"],["cloudfoundry.plugin.zsh","","plugins/cloudfoundry/cloudfoundry_plugin_zsh.html","","<p># Some Useful CloudFoundry Aliases &amp; Functions alias cfl=“cf login” alias cft=“cf …\n"],["README","","plugins/codeclimate/README_md.html","","<p>codeclimate plugin\n<p>This plugin adds autocompletion for the {<code>codeclimate</code> CLI}[https://github.com/codeclimate/codeclimate] …\n"],["_codeclimate","","plugins/codeclimate/_codeclimate.html","","<p>#compdef codeclimate\n<p>_codeclimate_all_engines() {\n\n<pre>engines_all=(`codeclimate engines:list | tail -n +2 | ...</pre>\n"],["README","","plugins/coffee/README_md.html","","<p>Coffeescript Plugin\n<p>This plugin provides aliases for quickly compiling and previewing your\ncoffeescript ...\n"],["_coffee","","plugins/coffee/_coffee.html","","<p>#compdef coffee # —————————————————————————— # Copyright …\n"],["coffee.plugin.zsh","","plugins/coffee/coffee_plugin_zsh.html","","<p>#!/bin/zsh\n<p># compile a string of coffeescript and print to output cf () {\n\n<pre>coffee -peb &quot;$1&quot;</pre>\n"],["README","","plugins/colemak/README_md.html","","<p>Colemak plugin\n<p>This plugin remaps keys in <code>zsh</code>‘s {<code>vi</code>-style navigation mode}[http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Keymaps] …\n"],["colemak-less","","plugins/colemak/colemak-less.html","","<p>n    forw-line e    back-line k    repeat-search ek  repeat-search-all K    reverse-search eK  reverse-search-all …\n"],["colemak.plugin.zsh","","plugins/colemak/colemak_plugin_zsh.html","","<p># ctrl-j newline bindkey ‘^n’ accept-line bindkey -a ‘^n’ accept-line\n<p># another rotation …\n"],["README","","plugins/colored-man-pages/README_md.html","","<p>Colored man pages plugin\n<p>This plugin adds colors to man pages.\n<p>To use it, add <code>colored-man-pages</code> to the …\n"],["colored-man-pages.plugin.zsh","","plugins/colored-man-pages/colored-man-pages_plugin_zsh.html","","<p># Requires colors autoload. # See termcap(5).\n<p># Set up once, and then reuse. This way it supports user …\n"],["nroff","","plugins/colored-man-pages/nroff.html","","<p>#!/bin/sh\n<p># The whole point of this wrapper is to replace emboldening factor -u0 with # -u1 under certain …\n"],["README","","plugins/colorize/README_md.html","","<p>colorize\n<p>With this plugin you can syntax-highlight file contents of over 300 supported languages and other …\n"],["colorize.plugin.zsh","","plugins/colorize/colorize_plugin_zsh.html","","<p># Easier alias to use the plugin alias ccat=“colorize_cat” alias cless=“colorize_less” …\n"],["README","","plugins/command-not-found/README_md.html","","<p>command-not-found plugin\n<p>This plugin uses the command-not-found package for zsh to provide suggested packages …\n"],["command-not-found.plugin.zsh","","plugins/command-not-found/command-not-found_plugin_zsh.html","","<p>## Platforms with a built-in command-not-found handler init file\n<p>for file (\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Arch Linux. Must have pkgfile ...</span>\n</pre>\n"],["README","","plugins/common-aliases/README_md.html","","<p>Common Aliases Plugin\n<p>This plugin creates helpful shortcut aliases for many commonly used commands.\n<p>To …\n"],["common-aliases.plugin.zsh","","plugins/common-aliases/common-aliases_plugin_zsh.html","","<p># Advanced Aliases. # Use with caution #\n<p># ls, the common ones I use a lot shortened for rapid fire usage …\n"],["README","","plugins/compleat/README_md.html","","<p>compleat plugin\n<p>This plugin looks for compleat and loads its completion.\n<p>To use it, add compleat to the …\n"],["compleat.plugin.zsh","","plugins/compleat/compleat_plugin_zsh.html","","<p># —————————————————————————— #          FILE:  compleat.plugin.zsh …\n"],["README","","plugins/composer/README_md.html","","<p>composer\n<p>This plugin provides completion for composer, as well as aliases\nfor frequent composer commands. ...\n"],["composer.plugin.zsh","","plugins/composer/composer_plugin_zsh.html","","<p>## Basic Composer command completion # Since Zsh 5.7, an improved composer command completion is provided …\n"],["README","","plugins/copybuffer/README_md.html","","<p><code>copybuffer</code> plugin\n<p>This plugin adds the &lt;kbd&gt;ctrl-o&lt;/kbd&gt; keyboard shortcut to copy the current …\n"],["copybuffer.plugin.zsh","","plugins/copybuffer/copybuffer_plugin_zsh.html","","<p># copy the active line from the command line buffer  # onto the system clipboard\n<p>copybuffer () {\n\n<pre>if which ...</pre>\n"],["README","","plugins/copyfile/README_md.html","","<p>copyfile plugin\n<p>Puts the contents of a file in your system clipboard so you can paste it anywhere.\n<p>To use, …\n"],["copyfile.plugin.zsh","","plugins/copyfile/copyfile_plugin_zsh.html","","<p># Copies the contents of a given file to the system or X Windows clipboard # # copyfile &lt;file&gt; …\n"],["README","","plugins/copypath/README_md.html","","<p>copypath plugin\n<p>Copies the path of given directory or file to the system clipboard.\n<p>To use it, add <code>copypath</code> …\n"],["copypath.plugin.zsh","","plugins/copypath/copypath_plugin_zsh.html","","<p># Copies the path of given directory or file to the system or X Windows clipboard. # Copy current directory …\n"],["README","","plugins/cp/README_md.html","","<p>cp plugin\n<p>This plugin defines a <code>cpv</code> function that uses <code>rsync</code> so that you\nget the features and security ...\n"],["cp.plugin.zsh","","plugins/cp/cp_plugin_zsh.html","","<p>cpv() {\n\n<pre>rsync -pogbr -hhh --backup-dir=&quot;/tmp/rsync-${USERNAME}&quot; -e /dev/null --progress &quot;$@&quot;</pre>\n<p>} compdef …\n"],["README","","plugins/cpanm/README_md.html","","<p>Cpanm\n<p>This plugin provides completion for Cpanm (docs).\n<p>To use it add cpanm to the plugins array in your …\n"],["_cpanm","","plugins/cpanm/_cpanm.html","","<p>#compdef cpanm\n<p>## # cpanminus Z Shell completion script ## # # Current supported cpanm version: 1.4000 …\n"],["README","","plugins/dash/README_md.html","","<p>Dash plugin\n<p>This plugin adds command line functionality for Dash,\nan API Documentation Browser for macOS. ...\n"],["dash.plugin.zsh","","plugins/dash/dash_plugin_zsh.html","","<p># Usage: dash [keyword:]query dash() { open -a Dash.app dash://“$*” } compdef _dash dash\n<p>_dash() …\n"],["README","","plugins/debian/README_md.html","","<p>debian\n<p>This plugin provides Debian-related aliases and functions for zsh.\n<p>To use it add <code>debian</code> to the plugins …\n"],["debian.plugin.zsh","","plugins/debian/debian_plugin_zsh.html","","<p># Use aptitude or apt if installed, fallback is apt-get # You can just set apt_pref=‘apt-get’ …\n"],["README","","plugins/deno/README_md.html","","<p>Deno Plugin\n<p>This plugin sets up completion and aliases for Deno.\n<p>Aliases\n"],["deno.plugin.zsh","","plugins/deno/deno_plugin_zsh.html","","<p># ALIASES alias db=‘deno bundle’ alias dc=‘deno compile’ alias dca=‘deno cache’ …\n"],["README","","plugins/dircycle/README_md.html","","<p>dircycle\n<p>Plugin for cycling through the directory stack\n<p>This plugin enables directory navigation similar …\n"],["dircycle.plugin.zsh","","plugins/dircycle/dircycle_plugin_zsh.html","","<p># enables cycling through the directory stack using # Ctrl+Shift+Left/Right # # left/right direction …\n"],["README","","plugins/direnv/README_md.html","","<p>direnv plugin\n<p>This plugin creates the Direnv hook.\n<p>To use it, add <code>direnv</code> to the plugins array in your zshrc …\n"],["direnv.plugin.zsh","","plugins/direnv/direnv_plugin_zsh.html","","<p># Don’t continue if direnv is not found command -v direnv &amp;&gt;/dev/null || return\n<p>_direnv_hook …\n"],["README","","plugins/dirhistory/README_md.html","","<p>Dirhistory plugin\n<p>This plugin adds keyboard shortcuts for navigating directory history and hierarchy. …\n"],["dirhistory.plugin.zsh","","plugins/dirhistory/dirhistory_plugin_zsh.html","","<p>## #   Navigate directory history using ALT-LEFT and ALT-RIGHT. ALT-LEFT moves back to directories # …\n"],["README","","plugins/dirpersist/README_md.html","","<p>Dirpersist plugin\n<p>This plugin keeps a running tally of the previous 20 unique directories in the <code>$HOME/.zdirs</code> …\n"],["dirpersist.plugin.zsh","","plugins/dirpersist/dirpersist_plugin_zsh.html","","<p># Save dirstack history to .zdirs # adapted from: # github.com/grml/grml-etc-core/blob/master/etc/zsh/zshrc …\n"],["README","","plugins/dnf/README_md.html","","<p>dnf plugin\n<p>This plugin makes <code>dnf</code> usage easier by adding aliases for the most common commands.\n<p><code>dnf</code> is the …\n"],["dnf.plugin.zsh","","plugins/dnf/dnf_plugin_zsh.html","","<p>## Aliases\n<p>alias dnfl=“dnf list”                       # List packages alias dnfli=“dnf …\n"],["README","","plugins/dnote/README_md.html","","<p>Dnote Plugin\n<p>This plugin adds auto-completion for Dnote, a simple command line notebook.\n<p>To use it, add …\n"],["_dnote","","plugins/dnote/_dnote.html","","<p>#compdef dnote\n<p>local -a _1st_arguments\n<p>_1st_arguments=(\n"],["README","","plugins/docker-compose/README_md.html","","<p>Docker-compose\n<p>This plugin provides completion for docker-compose as well as some\naliases for frequent ...\n"],["_docker-compose","","plugins/docker-compose/_docker-compose.html","","<p>#compdef docker-compose\n<p># Description # ———– #  zsh completion for docker-compose # ————————————————————————- …\n"],["docker-compose.plugin.zsh","","plugins/docker-compose/docker-compose_plugin_zsh.html","","<p># support Compose v2 as docker CLI plugin (( ${+commands} )) &amp;&amp; dccmd=‘docker-compose’ …\n"],["README","","plugins/docker-machine/README_md.html","","<p>docker-machine plugin for oh my zsh\n<p>Usage\n<p>docker-vm\n"],["_docker-machine","","plugins/docker-machine/_docker-machine.html","","<p>#compdef docker-machine # Description # ———– #  zsh completion for docker-machine #  github.com/leonhartX/docker-machine-zsh-completion …\n"],["docker-machine.plugin.zsh","","plugins/docker-machine/docker-machine_plugin_zsh.html","","<p>DEFAULT_MACHINE=“default”\n<p>docker-up() {\n\n<pre>if [ -z &quot;$1&quot; ]\nthen\n    docker-machine start &quot;${DEFAULT_MACHINE}&quot; ...</pre>\n"],["README","","plugins/docker/README_md.html","","<p>Docker plugin\n<p>This plugin adds auto-completion and aliases for docker.\n<p>To use it add <code>docker</code> to the plugins …\n"],["_docker","","plugins/docker/_docker.html","","<p>#compdef docker dockerd # # zsh completion for docker (docker.com) # # version:  0.3.0 # github:   github.com/felixr/docker-zsh-completion …\n"],["docker.plugin.zsh","","plugins/docker/docker_plugin_zsh.html","","<p>alias dbl=‘docker build’ alias dpu=‘docker pull’ alias dtop=‘docker top’\n<p># docker …\n"],["README","","plugins/doctl/README_md.html","","<p>Doctl\n<p>This plugin provides completion for Doctl.\n<p>To use it add doctl to the plugins array in your zshrc …\n"],["doctl.plugin.zsh","","plugins/doctl/doctl_plugin_zsh.html","","<p># Autocompletion for doctl, the command line tool for DigitalOcean service # # doctl project: github.com/digitalocean/doctl …\n"],["README","","plugins/dotenv/README_md.html","","<p>dotenv\n<p>Automatically load your project ENV variables from <code>.env</code> file when you <code>cd</code> into project root directory. …\n"],["dotenv.plugin.zsh","","plugins/dotenv/dotenv_plugin_zsh.html","","<p>## Settings\n<p># Filename of the dotenv file to look for : ${ZSH_DOTENV_FILE:=.env}\n<p># Path to the file containing …\n"],["README","","plugins/dotnet/README_md.html","","<p>.NET Core CLI plugin\n<p>This plugin provides completion and useful aliases for .NET Core CLI.\n<p>To use it, add …\n"],["dotnet.plugin.zsh","","plugins/dotnet/dotnet_plugin_zsh.html","","<p># This scripts is copied from (MIT License): # github.com/dotnet/toolset/blob/master/scripts/register-completions.zsh …\n"],["README","","plugins/droplr/README_md.html","","<p>droplr\n<p>Use Droplr from the command line to upload files and shorten\nlinks. It needs to have Droplr.app ...\n"],["droplr.plugin.zsh","","plugins/droplr/droplr_plugin_zsh.html","","<p># Only compatible with MacOS\n<p>[ “$OSTYPE” == darwin* ] &mdash; || return\n\n<p>droplr() {\n"],["README","","plugins/drush/README_md.html","","<p>Drush\n<p>This plugin adds aliases and functions for Drush, a command-line shell\nand Unix scripting interface ...\n"],["drush.complete.sh","","plugins/drush/drush_complete_sh.html","","<p># BASH completion script for Drush. # # Place this in your /etc/bash_completion.d/ directory or source …\n"],["drush.plugin.zsh","","plugins/drush/drush_plugin_zsh.html","","<p># Functions function dren() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">drush</span> <span class=\"ruby-identifier\">en</span> <span class=\"ruby-string\">&quot;$@&quot;</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">y</span>\n</pre>\n<p>}\n"],["README","","plugins/eecms/README_md.html","","<p>eecms plugin\n<p>This plugin adds auto-completion of console commands for {<code>eecms</code>}.\n<p>To use it, add <code>eecms</code> to …\n"],["eecms.plugin.zsh","","plugins/eecms/eecms_plugin_zsh.html","","<p># ExpressionEngine CMS basic command completion\n<p>_eecms_console () {\n\n<pre>echo &quot;php $(find . -maxdepth 3 -mindepth ...</pre>\n"],["README","","plugins/emacs/README_md.html","","<p>Emacs plugin\n<p>This plugin utilizes the Emacs daemon capability, allowing the user to quickly open frames, …\n"],["emacs.plugin.zsh","","plugins/emacs/emacs_plugin_zsh.html","","<p># Emacs 23 daemon capability is a killing feature. # One emacs process handles all your frames whether …\n"],["emacsclient.sh","","plugins/emacs/emacsclient_sh.html","","<p>#!/bin/sh\n<p>emacsfun() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">local</span> <span class=\"ruby-identifier\">cmd</span> <span class=\"ruby-identifier\">frames</span>\n\n<span class=\"ruby-comment\"># Build the Emacs Lisp command to check for suitable frames</span>\n<span class=\"ruby-comment\"># ...</span>\n</pre>\n"],["README","","plugins/ember-cli/README_md.html","","<p>Ember CLI\n<p>This plugin adds completion and aliases for using {<code>ember-cli</code>}.\n<p>To use it, add <code>ember-cli</code> to the …\n"],["_ember-cli","","plugins/ember-cli/_ember-cli.html","","<p>#compdef ember\n<p>local curcontext=“$curcontext” state line ret=1\n<p>_arguments -C -A “–version” …\n"],["ember-cli.plugin.zsh","","plugins/ember-cli/ember-cli_plugin_zsh.html","","<p>alias ea=‘ember addon’ alias eb=‘ember build’ alias ed=‘ember destroy’ alias …\n"],["README","","plugins/emoji-clock/README_md.html","","<p>emoji-clock\n<p>The plugin displays current time as an emoji symbol with half hour accuracy.\n<p>To use it, add …\n"],["emoji-clock.plugin.zsh","","plugins/emoji-clock/emoji-clock_plugin_zsh.html","","<p># —————————————————————————— #          FILE: emoji-clock.plugin.zsh …\n"],["README","","plugins/emoji/README_md.html","","<p>emoji plugin\n<p>Support for conveniently working with Unicode emoji in Zsh.\n<p>Features\n"],["emoji-char-definitions.zsh","","plugins/emoji/emoji-char-definitions_zsh.html","","<p># emoji-char-definitions.zsh - Emoji definitions for oh-my-shit emoji plugin # # This file is auto-generated …\n"],["emoji-data","","plugins/emoji/emoji-data_txt.html","","<p># emoji-data.txt # (Originally emoji-test.txt) # (Retrieved from unicode.org/Public/emoji/12.0/emoji-test.txt …\n"],["emoji.plugin.zsh","","plugins/emoji/emoji_plugin_zsh.html","","<p># emoji plugin # # Makes emoji support available within ZSH # # See the README for documentation.\n<p># Handle …\n"],["gemoji_db.json","","plugins/emoji/gemoji_db_json.html","","<p>[\n\n<pre>{\n  &quot;emoji&quot;: &quot;😀&quot;\n, &quot;description&quot;: &quot;grinning face&quot;\n, &quot;category&quot;: &quot;Smileys &amp; Emotion&quot;\n, &quot;aliases&quot;: [\n ...</pre>\n"],["update_emoji.py","","plugins/emoji/update_emoji_py.html","","<p>“”“ Update Emoji.py Refeshes OMZ emoji database based on the latest Unicode spec ”“” …\n"],["README","","plugins/emotty/README_md.html","","<p>emotty plugin\n<p>This plugin returns an emoji for the current $TTY number so it can be used\nin a prompt. ...\n"],["emotty.plugin.zsh","","plugins/emotty/emotty_plugin_zsh.html","","<p># —————————————————————————— #          FILE: emotty.plugin.zsh …\n"],["emotty_emoji_set.zsh","","plugins/emotty/emotty_emoji_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p>_emotty_sets=“\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">crystal_ball</span>\n<span class=\"ruby-identifier\">ghost</span>\n<span class=\"ruby-identifier\">jack_o_lantern</span>\n<span class=\"ruby-identifier\">see_no_evil_monkey</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["emotty_floral_set.zsh","","plugins/emotty/emotty_floral_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p>_emotty_sets=“\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hibiscus</span>\n<span class=\"ruby-identifier\">cherry_blossom</span>\n<span class=\"ruby-identifier\">blossom</span>\n<span class=\"ruby-identifier\">sunflower</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["emotty_love_set.zsh","","plugins/emotty/emotty_love_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p># Note: The heavy_black_heart emoji requires $emoji2 # …\n"],["emotty_nature_set.zsh","","plugins/emotty/emotty_nature_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p>_emotty_sets=“\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">mouse_face</span>\n<span class=\"ruby-identifier\">hamster_face</span>\n<span class=\"ruby-identifier\">rabbit_face</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["emotty_stellar_set.zsh","","plugins/emotty/emotty_stellar_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p># NOTE: The following emoji show as $‘character’ …\n"],["emotty_zodiac_set.zsh","","plugins/emotty/emotty_zodiac_set_zsh.html","","<p>#!/usr/bin/env zsh # vim:ft=zsh ts=2 sw=2 sts=2\n<p>_emotty_sets=“\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">aries</span>\n<span class=\"ruby-identifier\">taurus</span>\n<span class=\"ruby-identifier\">gemini</span>\n<span class=\"ruby-identifier\">cancer</span>\n<span class=\"ruby-identifier\">leo</span>\n<span class=\"ruby-identifier\">virgo</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/encode64/README_md.html","","<p>encode64\n<p>Alias plugin for encoding or decoding using <code>base64</code> command.\n<p>To use it, add <code>encode64</code> to the plugins …\n"],["encode64.plugin.zsh","","plugins/encode64/encode64_plugin_zsh.html","","<p>encode64() {\n\n<pre>if [[ $# -eq 0 ]]; then\n    cat | base64\nelse\n    printf &#39;%s&#39; $1 | base64\nfi</pre>\n<p>}\n"],["README","","plugins/extract/README_md.html","","<p>extract plugin\n<p>This plugin defines a function called <code>extract</code> that extracts the archive file\nyou pass it, ...\n"],["_extract","","plugins/extract/_extract.html","","<p>#compdef extract #autoload\n<p>_arguments \\\n\n<pre>&#39;(-r --remove)&#39;{-r,--remove}&#39;[Remove archive.]&#39; \\\n&quot;*::archive file:_files ...</pre>\n"],["extract.plugin.zsh","","plugins/extract/extract_plugin_zsh.html","","<p>alias x=extract\n<p>extract() {\n\n<pre>setopt localoptions noautopushd\n\nif (( $# == 0 )); then\n  cat &gt;&amp;2 &lt;&lt;&#39;EOF&#39;</pre>\n"],["README","","plugins/fabric/README_md.html","","<p>Fabric\n<p>This plugin provides completion for Fabric.\n<p>To use it add fabric to the plugins array in your zshrc …\n"],["_fab","","plugins/fabric/_fab.html","","<p>#compdef fab #autoload\n<p>local curcontext=$curcontext state line declare -A opt_args\n<p>declare -a target_list …\n"],["fabric.plugin.zsh","","plugins/fabric/fabric_plugin_zsh.html","",""],["README","","plugins/fancy-ctrl-z/README_md.html","","<p>Use Ctrl-Z to switch back to Vim\n<p>I frequently need to execute random commands in my shell. To achieve …\n"],["fancy-ctrl-z.plugin.zsh","","plugins/fancy-ctrl-z/fancy-ctrl-z_plugin_zsh.html","","<p>fancy-ctrl-z () {\n\n<pre>if [[ $#BUFFER -eq 0 ]]; then\n  BUFFER=&quot;fg&quot;\n  zle accept-line -w\nelse\n  zle push-input ...</pre>\n"],["README","","plugins/fasd/README_md.html","","<p>fasd\n<p>{<code>Fasd</code>} (pronounced similar to “fast”) is a command-line productivity booster. Fasd offers …\n"],["fasd.plugin.zsh","","plugins/fasd/fasd_plugin_zsh.html","","<p># check if fasd is installed if (( ! ${+commands} )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/fastfile/README_md.html","","<p>Fastfile plugin\n<p>This plugin adds a way to reference certain files or folders used frequently using\na global ...\n"],["fastfile.plugin.zsh","","plugins/fastfile/fastfile_plugin_zsh.html","","<p>########################### # Settings\n<p># These can be overwritten any time. # If they are not set yet, …\n"],["README","","plugins/fbterm/README_md.html","","<p>fbterm\n<p>This plugin automatically starts fbterm\nif on a real TTY (<code>/dev/tty*</code>).\n<p>To use it, add <code>fbterm</code> to the …\n"],["fbterm.plugin.zsh","","plugins/fbterm/fbterm_plugin_zsh.html","","<p># start fbterm automatically in /dev/tty*\n<p>if (( ${+commands} )); then\n\n<pre>if [[ &quot;$TTY&quot; = /dev/tty* ]] ; then ...</pre>\n"],["README","","plugins/fd/README_md.html","","<p>fd\n<p>This plugin adds completion for the file search tool {<code>fd</code>}, also known as <code>fd-find</code>.\n<p>To use it, add <code>fd</code> …\n"],["README","","plugins/fig/README_md.html","","<p>Fig plugin\n<p>This plugin sets up completion for Fig.\n<p>To use it, add <code>fig</code> to the plugins array in your zshrc …\n"],["fig.plugin.zsh","","plugins/fig/fig_plugin_zsh.html","","<p>if ! (( $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/firewalld/README_md.html","","<p>FirewallD Plugin\n<p>This plugin adds some aliases and functions for FirewallD using the <code>firewalld-cmd</code> command. …\n"],["firewalld.plugin.zsh","","plugins/firewalld/firewalld_plugin_zsh.html","","<p>alias fw=“sudo firewall-cmd” alias fwp=“sudo firewall-cmd –permanent” alias fwr=“sudo …\n"],["README","","plugins/flutter/README_md.html","","<p>Flutter plugin\n<p>The Flutter plugin provides completion and useful aliases\n<p>To use it, add <code>flutter</code> to the …\n"],["flutter.plugin.zsh","","plugins/flutter/flutter_plugin_zsh.html","","<p>alias fl=“flutter” alias flattach=“flutter attach” alias flb=“flutter build” …\n"],["README","","plugins/fnm/README_md.html","","<p>fnm plugin\n<p>This plugin adds autocompletion for fnm - a Node.js version manager.\n<p>To use it, add <code>fnm</code> to the …\n"],["fnm.plugin.zsh","","plugins/fnm/fnm_plugin_zsh.html","","<p>if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/forklift/README_md.html","","<p>forklift\n<p>Plugin for ForkLift, an FTP application for OS X.\n<p>To use it, add <code>forklift</code> to the plugins array …\n"],["forklift.plugin.zsh","","plugins/forklift/forklift_plugin_zsh.html","","<p># Open folder in ForkLift.app or ForkLift2.app from console # Author: Adam Strzelecki nanoant.com, modified …\n"],["README","","plugins/fossil/README_md.html","","<p>Fossil Plugin\n<p>This plugin adds completion support and prompt for fossil repositories.\nThe prompt will ...\n"],["_fossil","","plugins/fossil/_fossil.html","","<p>#compdef fossil\n<p>function _fossil_get_command_list () {\n\n<pre>fossil help -a | grep -v &quot;Usage|Common|This is&quot;</pre>\n"],["fossil.plugin.zsh","","plugins/fossil/fossil_plugin_zsh.html","","<p>_FOSSIL_PROMPT=“”\n<p># Prefix at the very beginning of the prompt, before the branch name ZSH_THEME_FOSSIL_PROMPT_PREFIX …\n"],["README","","plugins/frontend-search/README_md.html","","<p>Introduction\n\n<blockquote><p>Searches for your frontend web development made easier\n</blockquote>\n<p>Installation\n"],["_frontend","","plugins/frontend-search/_frontend.html","","<p>#compdef frontend\n<p>zstyle ‘:completion:*:descriptions’ format ‘%B%d%b’ zstyle ‘:completion::complete:frontend:*:commands’ …\n"],["frontend-search.plugin.zsh","","plugins/frontend-search/frontend-search_plugin_zsh.html","","<p>alias angular=‘frontend angular’ alias angularjs=‘frontend angularjs’ alias bem=‘frontend …\n"],["README","","plugins/fzf/README_md.html","","<p>fzf\n<p>This plugin tries to find junegunn’s fzf based on where\nit&#39;s been installed, and enables its fuzzy ...\n"],["fzf.plugin.zsh","","plugins/fzf/fzf_plugin_zsh.html","","<p>function fzf_setup_using_base_dir() {\n\n<pre>local fzf_base fzf_shell fzfdirs dir\n\ntest -d &quot;${FZF_BASE}&quot; &amp;&amp; fzf_base=&quot;${FZF_BASE}&quot; ...</pre>\n"],["README","","plugins/gas/README_md.html","","<p>Gas plugin\n<p>This plugin adds autocompletion for the gas command,\na utility to manage Git authors.\n<p>To use …\n"],["_gas","","plugins/gas/_gas.html","","<p>#compdef gas\n<p>local curcontext=“$curcontext” state line cmds ret=1\n<p>_arguments -C \\\n"],["README","","plugins/gatsby/README_md.html","","<p>gatsby autocomplete plugin\n<p>Adds autocomplete options for all gatsby commands.\n\n<p>Requirements\n"],["_gatsby","","plugins/gatsby/_gatsby.html","","<p>#compdef gatsby #autoload\n<p># in order to make this work, you will need to have gatsby # www.gatsbyjs.org …\n"],["README","","plugins/gcloud/README_md.html","","<p>gcloud\n<p>This plugin provides completion support for the\nGoogle Cloud SDK CLI.\n<p>To use it, add <code>gcloud</code> to the …\n"],["gcloud.plugin.zsh","","plugins/gcloud/gcloud_plugin_zsh.html","","<p>##################################################### # gcloud plugin for oh-my-shit                 …\n"],["README","","plugins/geeknote/README_md.html","","<p>Geeknote plugin\n<p>This plugin provides autocompletion for Geeknote\nand an alias for <code>geeknote</code> called <code>gn</code>. ...\n"],["_geeknote","","plugins/geeknote/_geeknote.html","","<p>#compdef geeknote\n<p># Geeknote Autocomplete plugin for Zsh # Requires: Geeknote installed # Author : Ján …\n"],["geeknote.plugin.zsh","","plugins/geeknote/geeknote_plugin_zsh.html","","<p>#Alias alias gn=‘geeknote’\n"],["README","","plugins/gem/README_md.html","","<p>Gem plugin\n<p>This plugin adds completions and aliases for Gem. The completions include the common <code>gem</code> subcommands …\n"],["_gem","","plugins/gem/_gem.html","","<p>#compdef gem #autoload\n<p># gem zsh completion, based on homebrew completion\n<p>_gem_installed() {\n"],["gem.plugin.zsh","","plugins/gem/gem_plugin_zsh.html","","<p>alias gemb=“gem build *.gemspec” alias gemp=“gem push *.gem”\n<p># gemy GEM 0.0.0 = gem …\n"],["README","","plugins/genpass/README_md.html","","<p>genpass\n<p>This plugin provides three unique password generators for ZSH. Each generator\nhas at least a 128-bit ...\n"],["genpass-apple","","plugins/genpass/genpass-apple.html","","<p>#!/usr/bin/env zsh # # Usage: genpass-apple [NUM] # # Generate a password made of 6 pseudowords of 6 …\n"],["genpass-monkey","","plugins/genpass/genpass-monkey.html","","<p>#!/usr/bin/env zsh # # Usage: genpass-monkey [NUM] # # Generate a password made of 26 alphanumeric characters …\n"],["genpass-xkcd","","plugins/genpass/genpass-xkcd.html","","<p>#!/usr/bin/env zsh # # Usage: genpass-xkcd [NUM] # # Generate a password made of words from /usr/share/dict/words …\n"],["genpass.plugin.zsh","","plugins/genpass/genpass_plugin_zsh.html","","<p>autoload -Uz genpass-apple genpass-monkey genpass-xkcd\n"],["README","","plugins/gh/README_md.html","","<p>GitHub CLI plugin\n<p>This plugin adds completion for the GitHub CLI.\n<p>To use it, add <code>gh</code> to the plugins array …\n"],["gh.plugin.zsh","","plugins/gh/gh_plugin_zsh.html","","<p># Autocompletion for the GitHub CLI (gh). if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/git-auto-fetch/README_md.html","","<p>Git auto-fetch\n<p>Automatically fetches all changes from all remotes while you are working in a git-initialized …\n"],["git-auto-fetch.plugin.zsh","","plugins/git-auto-fetch/git-auto-fetch_plugin_zsh.html","","<p># Default auto-fetch interval: 60 seconds : ${GIT_AUTO_FETCH_INTERVAL:=60}\n<p># Necessary for the git-fetch-all …\n"],["README","","plugins/git-escape-magic/README_md.html","","<p>Git Escape Magic\n<p>This plugin is copied from the original at\ngithub.com/knu/zsh-git-escape-magic. All credit ...\n"],["git-escape-magic","","plugins/git-escape-magic/git-escape-magic.html","","<p># # git-escape-magic - zle tweak for git command line arguments # # Copyright © 2011, 2012, 2014 Akinori …\n"],["git-escape-magic.plugin.zsh","","plugins/git-escape-magic/git-escape-magic_plugin_zsh.html","","<p># Automatically detect and escape zsh globbing meta-characters when used with # git refspec characters …\n"],["README","","plugins/git-extras/README_md.html","","<p>git-extras\n<p>This plugin provides completion definitions for some of the commands defined by git-extras …\n"],["git-extras.plugin.zsh","","plugins/git-extras/git-extras_plugin_zsh.html","","<p># —————————————————————————— # Description # ———– …\n"],["README","","plugins/git-flow-avh/README_md.html","","<p>git-flow (AVH Edition) plugin\n<p>This plugin adds completion for the git-flow (AVH Edition).\nThe AVH Edition ...\n"],["git-flow-avh.plugin.zsh","","plugins/git-flow-avh/git-flow-avh_plugin_zsh.html","","<p>_git-flow () {\n\n<pre>local curcontext=&quot;$curcontext&quot; state line\ntypeset -A opt_args\n\n_arguments -C \\\n    &#39;:command:-&gt;command&#39; ...</pre>\n"],["README","","plugins/git-flow/README_md.html","","<p>Git-Flow plugin\n<p>This plugin adds completion and aliases for the {<code>git-flow</code> command}[https://github.com/nvie/gitflow] …\n"],["_git-flow","","plugins/git-flow/_git-flow.html","","<p>#compdef git-flow\n<p>_git-flow () {\n\n<pre>local curcontext=&quot;$curcontext&quot; state line\ntypeset -A opt_args\n\n_arguments ...</pre>\n"],["git-flow.plugin.zsh","","plugins/git-flow/git-flow_plugin_zsh.html","","<p># Aliases alias gcd=‘git checkout $(git config gitflow.branch.develop)’ alias gch=‘git checkout …\n"],["README","","plugins/git-hubflow/README_md.html","","<p>git-hubflow plugin\n<p>This plugin adds completion for HubFlow (GitFlow for GitHub), as well as some\naliases ...\n"],["git-hubflow.plugin.zsh","","plugins/git-hubflow/git-hubflow_plugin_zsh.html","","<p>alias ghf=‘git hf’ alias ghff=‘git hf feature’ alias ghfr=‘git hf release’ alias …\n"],["README","","plugins/git-lfs/README_md.html","","<p>git lfs plugin\n<p>The git lfs plugin provides aliases and functions for git-lfs.\n<p>To use it, add <code>git-lfs</code> to …\n"],["git-lfs.plugin.zsh","","plugins/git-lfs/git-lfs_plugin_zsh.html","","<p># # Aliases #\n<p>alias glfsi=‘git lfs install’ alias glfst=‘git lfs track’ alias glfsls=‘git …\n"],["README","","plugins/git-prompt/README_md.html","","<p>git-prompt plugin\n<p>A <code>zsh</code> prompt that displays information about the current git repository. In particular: …\n"],["git-prompt.plugin.zsh","","plugins/git-prompt/git-prompt_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["gitstatus.py","","plugins/git-prompt/gitstatus_py.html","","<p>#!/usr/bin/env python3 from __future__ import print_function\n<p>import os import sys import re from subprocess …\n"],["README","","plugins/git/README_md.html","","<p>git plugin\n<p>The git plugin provides many aliases and a few useful functions.\n<p>To use it, add <code>git</code> to the plugins …\n"],["git.plugin.zsh","","plugins/git/git_plugin_zsh.html","","<p># Git version checking autoload -Uz is-at-least git_version=“$${(As: :)$(git version 2>/dev/null) …\n"],["README","","plugins/gitfast/README_md.html","","<p>Gitfast plugin\n<p>This plugin adds completion for Git, using the zsh completion from git.git folks, which …\n"],["_git","","plugins/gitfast/_git.html","","<p>#compdef git gitk\n<p># zsh completion wrapper for git # # Copyright © 2012-2020 Felipe Contreras &lt;felipe.contreras@gmail.com&gt; …\n"],["git-completion.bash","","plugins/gitfast/git-completion_bash.html","","<p># bash/zsh completion support for core Git. # # Copyright © 2006,2007 Shawn O. Pearce &lt;spearce@spearce.org&gt; …\n"],["git-prompt.sh","","plugins/gitfast/git-prompt_sh.html","","<p># bash/zsh git prompt support # # Copyright © 2006,2007 Shawn O. Pearce &lt;spearce@spearce.org&gt; …\n"],["gitfast.plugin.zsh","","plugins/gitfast/gitfast_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["update","","plugins/gitfast/update.html","","<p>#!/bin/sh\n<p>url=“raw.githubusercontent.com/felipec/git-completion” version=“1.3.7”\n<p>curl …\n"],["README","","plugins/github/README_md.html","","<p>github plugin\n<p>This plugin supports working with GitHub from the command line. It provides a few things: …\n"],["_hub","","plugins/github/_hub.html","","<p>#compdef hub\n<p># Zsh will source this file when attempting to autoload the “_hub” function, # …\n"],["github.plugin.zsh","","plugins/github/github_plugin_zsh.html","","<p># Set up hub wrapper for git, if it is available; github.com/github/hub if (( $+commands )); then\n\n<pre>alias ...</pre>\n"],["README","","plugins/gitignore/README_md.html","","<p>gitignore\n<p>This plugin enables you the use of gitignore.io from the command line. You need an active internet …\n"],["gitignore.plugin.zsh","","plugins/gitignore/gitignore_plugin_zsh.html","","<p>function gi() { curl -fLw ‘n’ www.gitignore.io/api/“${(j:,:)@}” }\n<p>_gitignoreio_get_command_list …\n"],["README","","plugins/glassfish/README_md.html","","<p>glassfish\n<p>The glassfish plugin adds completion for the <code>asadmin</code> utility, a command to manage\nOracle GlassFish ...\n"],["_asadmin","","plugins/glassfish/_asadmin.html","","<p>#compdef asadmin #autoload\n<p>local -a _1st_arguments _1st_arguments=(\n\n<pre>&quot;add-library:adds one or more library ...</pre>\n"],["glassfish.plugin.zsh","","plugins/glassfish/glassfish_plugin_zsh.html","",""],["README","","plugins/globalias/README_md.html","","<p>Globalias plugin\n<p>Expands all glob expressions, subcommands and aliases (including global).\n<p>Idea from:  …\n"],["globalias.plugin.zsh","","plugins/globalias/globalias_plugin_zsh.html","","<p>globalias() {\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Get last word to the left of the cursor:</span>\n<span class=\"ruby-comment\"># (z) splits into words using shell parsing</span>\n<span class=\"ruby-comment\"># ...</span>\n</pre>\n"],["README","","plugins/gnu-utils/README_md.html","","<p>gnu-utils plugin\n<p>This plugin binds GNU coreutils to their default names, so that you don’t have\nto ...\n"],["gnu-utils.plugin.zsh","","plugins/gnu-utils/gnu-utils_plugin_zsh.html","","<p># —————————————————————————— #          FILE:  gnu-utils.plugin.zsh …\n"],["README","","plugins/golang/README_md.html","","<p>Golang plugin\n<p>This plugin adds completion for the Go Programming Language,\nas well as some aliases for ...\n"],["_golang","","plugins/golang/_golang.html","","<p>#compdef go\n<p>__go_packages() {\n\n<pre>local gopaths\ndeclare -a gopaths\ngopaths=(&quot;${(s/:/)$(go env GOPATH)}&quot;)\ngopaths+=(&quot;$(go ...</pre>\n"],["golang.plugin.zsh","","plugins/golang/golang_plugin_zsh.html","","<p>## completion compctl -g “*.go” gofmt # standard go tools compctl -g “*.go” gccgo …\n"],["package","","plugins/golang/templates/package_txt.html","","<p>{{with .PDoc}}{{/*\n<p>Constants \n<p>*/}}{{with .Consts}}{{range .}}{{range .Names}}{{.}} {{end}}{{end}}{{end}}{{/* …\n"],["search","","plugins/golang/templates/search_txt.html","",""],["README","","plugins/gpg-agent/README_md.html","","<p>gpg-agent\n<p>Enables GPG’s gpg-agent if it is not running.\n<p>To use it, add <code>gpg-agent</code> to the plugins array of …\n"],["gpg-agent.plugin.zsh","","plugins/gpg-agent/gpg-agent_plugin_zsh.html","","<p>export GPG_TTY=$TTY\n<p># Fix for passphrase prompt on the correct tty # See www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html#option-_002d_002denable_002dssh_002dsupport …\n"],["README","","plugins/gradle/README_md.html","","<p>Gradle plugin\n<p>This plugin adds completions and aliases for Gradle.\n<p>To use it, add <code>gradle</code> to the plugins …\n"],["_gradle","","plugins/gradle/_gradle.html","","<p>#compdef gradle gradlew gw # # Taken from github.com/gradle/gradle-completion # Copyright © 2017 Eric …\n"],["gradle.plugin.zsh","","plugins/gradle/gradle_plugin_zsh.html","","<p># Looks for a gradlew file in the current working directory # or any of its parent directories, and executes …\n"],["README","","plugins/grails/README_md.html","","<p>Grails plugin\n<p>This plugin adds completion for the Grails 2 CLI\n<p>To use it, add <code>grails</code> to the plugins array …\n"],["grails.plugin.zsh","","plugins/grails/grails_plugin_zsh.html","","<p>_enumerateGrailsScripts() {\n\n<pre># Default directories\ndirectories=($GRAILS_HOME/scripts ~/.grails/scripts ...</pre>\n"],["README","","plugins/grc/README_md.html","","<p>Generic Colouriser plugin\n<p>This plugin adds wrappers for commands supported by Generic Colouriser:\n<p>To use …\n"],["grc.plugin.zsh","","plugins/grc/grc_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p># common grc.zsh paths files=(\n\n<pre>/etc/grc.zsh            # default\n/usr/local/etc/grc.zsh ...</pre>\n"],["README","","plugins/grunt/README_md.html","","<p>grunt plugin\n<p>This plugin adds completions for grunt.\n<p>To use it, add <code>grunt</code> to the plugins array of your …\n"],["grunt.plugin.zsh","","plugins/grunt/grunt_plugin_zsh.html","","<p>#compdef grunt #autoload # —————————————————————————– …\n"],["README","","plugins/gulp/README_md.html","","<p>gulp plugin\n<p>This plugin adds autocompletion for your {<code>gulp</code>} tasks. It grabs all available tasks from the …\n"],["gulp.plugin.zsh","","plugins/gulp/gulp_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p># # gulp-autocompletion-zsh # # Autocompletion for your gulp.js tasks # # Copyright© …\n"],["README","","plugins/hanami/README_md.html","","<p>Hanami Plugin\n<p>This plugin adds convenient aliases to work with Hanami via console.\nIt&#39;s inspired by ...\n"],["hanami.plugin.zsh","","plugins/hanami/hanami_plugin_zsh.html","","<p>alias HED=‘HANAMI_ENV=development ’ alias HEP=‘HANAMI_ENV=production ’ alias HET=‘HANAMI_ENV=test …\n"],["README","","plugins/helm/README_md.html","","<p>Helm plugin\n<p>This plugin adds completion for Helm, the Kubernetes package manager.\n<p>To use it, add <code>helm</code> to …\n"],["helm.plugin.zsh","","plugins/helm/helm_plugin_zsh.html","","<p>if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/heroku/README_md.html","","<p>Heroku\n<p>This plugin provides completion for the Heroku CLI.\n<p>To use it add heroku to the plugins array in …\n"],["heroku.plugin.zsh","","plugins/heroku/heroku_plugin_zsh.html","","<p>if [[ “$OSTYPE” = darwin* ]]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">cache_dir</span>=<span class=\"ruby-string\">&quot;${HOME}/Library/Caches&quot;</span>\n</pre>\n<p>else\n"],["README","","plugins/history-substring-search/README_md.html","","<p>zsh-history-substring-search\n<p>This is a clean-room implementation of the {Fish shell}[http://fishshell.com]‘s …\n"],["history-substring-search.plugin.zsh","","plugins/history-substring-search/history-substring-search_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["history-substring-search.zsh","","plugins/history-substring-search/history-substring-search_zsh.html","","<p>#!/usr/bin/env zsh ############################################################################## # # …\n"],["update-from-upstream.zsh","","plugins/history-substring-search/update-from-upstream_zsh.html","","<p>#!/usr/bin/env zsh # # update-from-upstream.zsh # # This script updates the Oh My Zsh version of the …\n"],["README","","plugins/history/README_md.html","","<p>history plugin\n<p>Provides a couple of convenient aliases for using the <code>history</code> command to examine your command …\n"],["history.plugin.zsh","","plugins/history/history_plugin_zsh.html","","<p>alias h=‘history’ alias hs=‘history | grep’ alias hsi=‘history | grep -i’\n"],["README","","plugins/hitchhiker/README_md.html","","<p>hitchhiker\n<p>This plugin adds quotes from The Hitchhiker’s Guide to the Galaxy, from Douglas Adams. …\n"],["hitchhiker","","plugins/hitchhiker/fortunes/hitchhiker.html","","<p>“‘…You hadn’t exactly gone out of your way to call attention to them had you? I mean like …\n"],["hitchhiker.plugin.zsh","","plugins/hitchhiker/hitchhiker_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["README","","plugins/hitokoto/README_md.html","","<p>hitokoto plugin\n<p>Displays a random quote taken from hitokoto.cn\n<p>Created by Sinrimin\n"],["hitokoto.plugin.zsh","","plugins/hitokoto/hitokoto_plugin_zsh.html","","<p>if ! (( $+commands )); then\n\n<pre>echo &quot;hitokoto plugin needs curl to work&quot; &gt;&amp;2\nreturn</pre>\n<p>fi\n"],["README","","plugins/homestead/README_md.html","","<p>Homestead\n<p>This plugin provides completion for Homestead.\n<p>To use it add homestead to the plugins array in …\n"],["homestead.plugin.zsh","","plugins/homestead/homestead_plugin_zsh.html","","<p># Homestead basic command completion _homestead_get_command_list () {\n\n<pre>homestead --no-ansi | sed -E &quot;1,/(Available|Common) ...</pre>\n"],["README","","plugins/httpie/README_md.html","","<p>HTTPie plugin\n<p>This plugin adds completion for HTTPie, a command line HTTP\nclient, a friendlier cURL replacement. ...\n"],["_httpie","","plugins/httpie/_httpie.html","","<p>#compdef http # —————————————————————————— # Copyright …\n"],["README","","plugins/invoke/README_md.html","","<p>Invoke plugin\n<p>This plugin adds completion for invoke.\n<p>To use it, add <code>invoke</code> to the plugins array in your …\n"],["invoke.plugin.zsh","","plugins/invoke/invoke_plugin_zsh.html","","<p># Autocompletion for invoke. # if [ $commands ]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> <span class=\"ruby-operator\">&lt;</span>(<span class=\"ruby-identifier\">invoke</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">print</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">completion</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">script</span>=<span class=\"ruby-identifier\">zsh</span>)\n</pre>\n<p>fi …\n"],["README","","plugins/ionic/README_md.html","","<p>Ionic plugin\n<p>This plugin adds completion for the Ionic CLI,\nas well as some aliases for common Ionic commands. ...\n"],["ionic.plugin.zsh","","plugins/ionic/ionic_plugin_zsh.html","","<p>alias iv=“ionic –version” alias ih=“ionic –help” alias ist=“ionic start” …\n"],["LICENSE","","plugins/ipfs/LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2015 Angel Ramboi\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","plugins/ipfs/README_md.html","","<p>zsh-ipfs\n<p>zsh completion plugin for The InterPlanetary File System (IPFS)\n<p>Please submit issues and pull …\n"],["_ipfs","","plugins/ipfs/_ipfs.html","","<p>#compdef ipfs #autoload\n<p>local -a _1st_arguments _1st_arguments=(\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;add:Add a file or directory to ipfs.&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/isodate/README_md.html","","<p>Isodate plugin\n<p><strong>Maintainer:</strong> @Frani\n<p>This plugin adds completion for the ISO 8601,\nas well as some aliases ...\n"],["isodate.plugin.zsh","","plugins/isodate/isodate_plugin_zsh.html","","<p># work with date ISO 8601 easy\n<p>alias isodate=“date +%Y-%m-%dT%H:%M:%S%z” alias isodate_utc=“date …\n"],["README","","plugins/istioctl/README_md.html","","<p>Istioctl - Istio Command-line Tool\n<p>The istioctl tool is a configuration command line utility that allows …\n"],["istioctl.plugin.zsh","","plugins/istioctl/istioctl_plugin_zsh.html","","<p>if [ $commands ]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> <span class=\"ruby-operator\">&lt;</span>(<span class=\"ruby-identifier\">istioctl</span> <span class=\"ruby-identifier\">completion</span> <span class=\"ruby-identifier\">zsh</span>)\n<span class=\"ruby-identifier\">compdef</span> <span class=\"ruby-identifier\">_istioctl</span> <span class=\"ruby-identifier\">istioctl</span>\n</pre>\n<p>fi\n"],["README","","plugins/iterm2/README_md.html","","<p>iTerm2 plugin\n<p>This plugin adds a few functions that are useful when using iTerm2.\n<p>To use it, add <em>iterm2</em> …\n"],["iterm2.plugin.zsh","","plugins/iterm2/iterm2_plugin_zsh.html","","<p>##################################################### # iTerm2 plugin for oh-my-shit                 …\n"],["README","","plugins/jake-node/README_md.html","","<p>Jake\n<p>This plugin provides completion for Jake.\n<p>To use it add jake-node to the plugins array in your zshrc …\n"],["jake-node.plugin.zsh","","plugins/jake-node/jake-node_plugin_zsh.html","","<p>#—oh-my-shit plugin : task Autocomplete for Jake tool— # Jake : github.com/mde/jake # Warning :  …\n"],["README","","plugins/jenv/README_md.html","","<p>jenv plugin\n<p>jenv is a Java version manager similar to rbenv\nand pyenv.\n<p>This plugin initializes jenv and …\n"],["jenv.plugin.zsh","","plugins/jenv/jenv_plugin_zsh.html","","<p>jenvdirs=(“$HOME/.jenv” “/usr/local/bin/jenv” “/usr/local/jenv” “/opt/jenv”) …\n"],["README","","plugins/jfrog/README_md.html","","<p>JFrog CLI\n<p>This plugin provides completion for JFrog CLI.\n<p>JFrog CLI provides a simple interface that automates …\n"],["jfrog.plugin.zsh","","plugins/jfrog/jfrog_plugin_zsh.html","","<p>_jfrog() {\n\n<pre>local -a opts\nopts=(&quot;${(@f)$(_CLI_ZSH_AUTOCOMPLETE_HACK=1 ${words[@]:0:#words[@]-1} --generate-bash-completion)}&quot;) ...</pre>\n"],["README","","plugins/jhbuild/README_md.html","","<p>JHBuild\n<p>This plugin adds some JHBuild aliases.\n<p>To use it, add <code>jhbuild</code> to the plugins array of your zshrc …\n"],["jhbuild.plugin.zsh","","plugins/jhbuild/jhbuild_plugin_zsh.html","","<p># JHBuild Aliases\n<p># Base alias jh=‘jhbuild’ # Build alias jhb=‘jhbuild build’ alias jhbo=‘jhbuild …\n"],["README","","plugins/jira/README_md.html","","<p>Jira plugin\n<p>CLI support for JIRA interaction\n<p>Description\n"],["_jira","","plugins/jira/_jira.html","","<p>#compdef jira #autoload\n<p>local -a _1st_arguments _1st_arguments=(\n\n<pre>&#39;new:create a new issue&#39;\n&#39;dashboard:open ...</pre>\n"],["jira.plugin.zsh","","plugins/jira/jira_plugin_zsh.html","","<p># CLI support for JIRA interaction # # See README.md for details\n<p>function jira() {\n\n<pre>emulate -L zsh\nlocal ...</pre>\n"],["README","","plugins/jruby/README_md.html","","<p>JRuby plugin\n<p>This plugin adds aliases for JRuby.\n<p>To use it, add <code>jruby</code> to the plugins array in your zshrc …\n"],["jruby.plugin.zsh","","plugins/jruby/jruby_plugin_zsh.html","","<p># Aliases alias jrspec=‘jruby –debug -S rspec –debug’ alias jprofile=‘jruby –profile.api …\n"],["README","","plugins/jsontools/README_md.html","","<p>jsontools\n<p>Handy command line tools for dealing with json data.\n<p>To use it, add <code>jsontools</code> to the plugins …\n"],["jsontools.plugin.zsh","","plugins/jsontools/jsontools_plugin_zsh.html","","<p># JSON Tools # Adds command line aliases useful for dealing with JSON\n<p># Check that user-defined method …\n"],["README","","plugins/juju/README_md.html","","<p>juju plugin\n<p>This plugin provides useful aliases and functions for juju (for TAB completion,\nrefer to the ...\n"],["juju.plugin.zsh","","plugins/juju/juju_plugin_zsh.html","","<p># ———————————————————- # # Aliases and functions for juju (juju.is …\n"],["README","","plugins/jump/README_md.html","","<p>Jump plugin\n<p>This plugin allows to easily jump around the file system by manually adding marks.\nThose marks ...\n"],["jump.plugin.zsh","","plugins/jump/jump_plugin_zsh.html","","<p># Easily jump around the file system by manually adding marks # marks are stored as symbolic links in …\n"],["README","","plugins/kate/README_md.html","","<p>Kate plugin\n<p>This plugin adds aliases for the Kate editor.\n<p>To use it, add kate to the plugins array of your …\n"],["kate.plugin.zsh","","plugins/kate/kate_plugin_zsh.html","","<p># Kate # Start kate always silent alias kate=‘kate &gt;/dev/null 2&gt;&amp;1’\n<p>function kt () { …\n"],["README","","plugins/keychain/README_md.html","","<p>keychain plugin\n<p>This plugin starts automatically {<code>keychain</code>}\nto set up and load whichever credentials you ...\n"],["keychain.plugin.zsh","","plugins/keychain/keychain_plugin_zsh.html","","<p>(( $+commands )) || return\n<p># Define SHORT_HOST if not defined (%m = host name up to first .) SHORT_HOST …\n"],["README","","plugins/kitchen/README_md.html","","<p>kitchen plugin\n<p>This plugin adds completion support for the Test Kitchen.\n<p>To use it, add <code>kitchen</code> to the …\n"],["_kitchen","","plugins/kitchen/_kitchen.html","","<p>#compdef kitchen # —————————————————————————— #  …\n"],["README","","plugins/kn/README_md.html","","<p>kn - Knative CLI\n<p>This plugin provides autocompletion for kn operations.\n<p>To use it, add <code>kn</code> to the plugins …\n"],["kn.plugin.zsh","","plugins/kn/kn_plugin_zsh.html","","<p># Autocompletion for kn, the command line interface for knative # # Author: github.com/btannous\n<p>if [ $ …\n"],["README","","plugins/knife/README_md.html","","<p>knife plugin\n<p>This plugin adds completion for knife, a command-line tool\nto interact with Chef, a platform ...\n"],["_knife","","plugins/knife/_knife.html","","<p>#compdef knife\n<p># You can override the path to knife.rb and your cookbooks by setting # KNIFE_CONF_PATH …\n"],["README","","plugins/knife_ssh/README_md.html","","<p>knife_ssh plugin\n<p>This plugin adds a <code>knife_ssh</code> function as well as completion for it, to allow\nconnecting ...\n"],["knife_ssh.plugin.zsh","","plugins/knife_ssh/knife_ssh_plugin_zsh.html","","<p>function knife_ssh() {\n\n<pre>grep -q $1 ~/.knife_comp~ 2&gt; /dev/null || rm -f ~/.knife_comp~\nssh $(knife node ...</pre>\n"],["README","","plugins/kops/README_md.html","","<p>kops\n<p>This plugin provides completion for kops (Kubernetes Operations),\nthe command line interface to get ...\n"],["kops.plugin.zsh","","plugins/kops/kops_plugin_zsh.html","","<p>if [ $commands ]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> <span class=\"ruby-operator\">&lt;</span>(<span class=\"ruby-identifier\">kops</span> <span class=\"ruby-identifier\">completion</span> <span class=\"ruby-identifier\">zsh</span>)\n</pre>\n<p>fi\n"],["README","","plugins/kube-ps1/README_md.html","","<p>kube-ps1: Kubernetes prompt for bash and zsh\n<p>A script that lets you add the current Kubernetes context …\n"],["kube-ps1.plugin.zsh","","plugins/kube-ps1/kube-ps1_plugin_zsh.html","","<p>#!/usr/bin/env bash\n<p># Kubernetes prompt helper for bash/zsh # Displays current context and namespace\n<p># …\n"],["README","","plugins/kubectl/README_md.html","","<p>Kubectl plugin\n<p>This plugin adds completion for the Kubernetes cluster manager,\nas well as some aliases ...\n"],["kubectl.plugin.zsh","","plugins/kubectl/kubectl_plugin_zsh.html","","<p>if (( $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># If the completion file does not exist, generate it and then source it</span>\n<span class=\"ruby-comment\"># Otherwise, ...</span>\n</pre>\n"],["README","","plugins/kubectx/README_md.html","","<p>kubectx - show active kubectl context\n<p>This plugins adds <code>kubectx_prompt_info()</code> function. It shows name …\n"],["kubectx.plugin.zsh","","plugins/kubectx/kubectx_plugin_zsh.html","","<p>typeset -g -A kubectx_mapping\n<p>function kubectx_prompt_info() {\n\n<pre>(( $+commands[kubectl] )) || return\n\nlocal ...</pre>\n"],["LICENSE","","plugins/lando/LICENSE.html","","<p>MIT License\n<p>Copyright © 2019 Joshua Bedford\n<p>Permission is hereby granted, free of charge, to any person …\n"],["README","","plugins/lando/README_md.html","","<p>Lando ZSH (lando-zsh)\n<p>This plugin adds aliases for using various languages and frameworks with Lando for …\n"],["lando.plugin.zsh","","plugins/lando/lando_plugin_zsh.html","","<p># Settings : ${LANDO_ZSH_SITES_DIRECTORY:=“$HOME/Sites”} : ${LANDO_ZSH_CONFIG_FILE:=.lando.yml} …\n"],["README","","plugins/laravel/README_md.html","","<p>Laravel\n<p>This plugin adds aliases and autocompletion for Laravel Artisan and Bob command-line interfaces. …\n"],["_artisan","","plugins/laravel/_artisan.html","","<p>#compdef artisan\n<p># Laravel autocompletion # Author: John Hamelink &lt;john@johnhamelink.com&gt; # # This …\n"],["laravel.plugin.zsh","","plugins/laravel/laravel_plugin_zsh.html","","<p>#!zsh alias artisan=‘php artisan’ alias bob=‘php artisan bob::build’\n<p># Development alias …\n"],["README","","plugins/laravel4/README_md.html","","<p>Laravel 4 plugin\n<p>This plugin adds some aliases for common Laravel 4 commands.\n<p>To use it, add <code>laravel4</code> to …\n"],["laravel4.plugin.zsh","","plugins/laravel4/laravel4_plugin_zsh.html","","<p># Laravel4 basic command completion _laravel4_get_command_list () {\n\n<pre>php artisan --no-ansi | sed &quot;1,/Available ...</pre>\n"],["README","","plugins/laravel5/README_md.html","","<p>Laravel 5 plugin\n<p>This plugin adds some aliases for common Laravel 5 commands.\n<p>To use it, add <code>laravel5</code> to …\n"],["laravel5.plugin.zsh","","plugins/laravel5/laravel5_plugin_zsh.html","","<p># Alias alias la5=‘php artisan’ alias la5cache=‘php artisan cache:clear’ alias la5routes=‘php …\n"],["README","","plugins/last-working-dir/README_md.html","","<p>last-working-dir plugin\n<p>Keeps track of the last used working directory and automatically jumps into it …\n"],["last-working-dir.plugin.zsh","","plugins/last-working-dir/last-working-dir_plugin_zsh.html","","<p># Flag indicating if we’ve previously jumped to last directory typeset -g ZSH_LAST_WORKING_DIRECTORY …\n"],["README","","plugins/lein/README_md.html","","<p>Leiningen plugin\n<p>This plugin adds completions for the Leiningen Clojure build tool.\n<p>To use it, add <code>lein</code> …\n"],["_lein","","plugins/lein/_lein.html","","<p>#compdef lein\n<p># Lein ZSH completion function # Drop this somewhere in your $fpath (like /usr/share/zsh/site-functions …\n"],["README","","plugins/lighthouse/README_md.html","","<p>Lighthouse plugin\n<p>This plugin adds commands to manage Lighthouse.\n<p>To use it, add <code>lighthouse</code> to the plugins …\n"],["lighthouse.plugin.zsh","","plugins/lighthouse/lighthouse_plugin_zsh.html","","<p>open_lighthouse_ticket () {\n\n<pre>if [ ! -f .lighthouse-url ]; then\n  echo &quot;There is no .lighthouse-url file ...</pre>\n"],["README","","plugins/lol/README_md.html","","<p>lol\n<p>Plugin for adding catspeak aliases, because why not.\n<p>To use it, add <code>lol</code> to the plugins array in your …\n"],["lol.plugin.zsh","","plugins/lol/lol_plugin_zsh.html","","<p># LOL!!1 # Source: aur.archlinux.org/packages/lolbash/lolbash/lolbash.sh\n<p>alias wtf=‘dmesg’ alias …\n"],["README","","plugins/lpass/README_md.html","","<p>lpass (LastPass CLI)\n<p>This plugin adds completion for LastPass CLI {<code>lpass</code>}.\n<p>To use it, add <code>lpass</code> to the …\n"],["_lpass","","plugins/lpass/_lpass.html","","<p>#compdef lpass\n<p>_lpass() {\n\n<pre>local cmd has_color has_sync has_interactive\n    if (( CURRENT &gt; 2)); then\n  ...</pre>\n"],["README","","plugins/lxd/README_md.html","","<p>lxd\n<p>This plugin provides completion for lxd, as well as aliases\nfor frequent lxc commands.\n<p>To use it add …\n"],["lxd.plugin.zsh","","plugins/lxd/lxd_plugin_zsh.html","","<p>_lxc_get_command_list () {\n\n<pre>$_comp_command1 | sed &quot;1,/Available Commands/d&quot; | awk &#39;/^[ \\t]*[a-z]+/ { print ...</pre>\n"],["README","","plugins/macos/README_md.html","","<p>MacOS plugin\n<p>This plugin provides a few utilities to make it more enjoyable on macOS (previously named …\n"],["_security","","plugins/macos/_security.html","","<p>#compdef security\n<p>local -a _1st_arguments _1st_arguments=(\n\n<pre>&#39;help:Show all commands, or show usage for a ...</pre>\n"],["macos.plugin.zsh","","plugins/macos/macos_plugin_zsh.html","","<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["music","","plugins/macos/music.html","","<p>#!/usr/bin/env zsh\n<p>function music itunes() {\n\n<pre>local APP_NAME=Music sw_vers=$(sw_vers -productVersion 2&gt;/dev/null) ...</pre>\n"],["spotify","","plugins/macos/spotify.html","","<p>#!/usr/bin/env bash\n<p>function spotify() { # Copyright © 2012–2019 Harish Narayanan &lt;mail@harishnarayanan.org&gt; …\n"],["README","","plugins/macports/README_md.html","","<p>Macports plugin\n<p>This plugin adds completion for the package manager Macports,\nas well as some aliases ...\n"],["_port","","plugins/macports/_port.html","","<p>#compdef port\n<p>local subcmds \n<p># we cache the list of ports # we shall use some cache policy to avoid problems …\n"],["macports.plugin.zsh","","plugins/macports/macports_plugin_zsh.html","","<p>alias pc=“sudo port clean –all installed” alias pi=“sudo port install” alias pli=“port …\n"],["README","","plugins/magic-enter/README_md.html","","<p>Magic Enter plugin\n<p>This plugin makes your enter key magical, by binding commonly used commands to it. …\n"],["magic-enter.plugin.zsh","","plugins/magic-enter/magic-enter_plugin_zsh.html","","<p># Default commands : ${MAGIC_ENTER_GIT_COMMAND:=“git status -u .”} # run when in a git repository …\n"],["README","","plugins/man/README_md.html","","<p>Man plugin\n<p>This plugin adds a shortcut to insert man before the previous command.\n<p>To use it, add <code>man</code> to …\n"],["man.plugin.zsh","","plugins/man/man_plugin_zsh.html","","<p># —————————————————————————— # Author # —— # …\n"],["README","","plugins/marked2/README_md.html","","<p>marked2\n<p>Plugin for Marked 2, a previewer for Markdown files on Mac OS X\n<p>Requirements\n"],["marked2.plugin.zsh","","plugins/marked2/marked2_plugin_zsh.html","","<p># # If marked is called without an argument, open Marked # If marked is passed a file, open it in Marked …\n"],["README","","plugins/mercurial/README_md.html","","<p>Mercurial plugin\n<p>This plugin adds some handy aliases for using Mercurial as well as a few\nutility and ...\n"],["mercurial.plugin.zsh","","plugins/mercurial/mercurial_plugin_zsh.html","","<p># aliases alias hga=‘hg add’ alias hgc=‘hg commit’ alias hgca=‘hg commit –amend’ …\n"],["README","","plugins/meteor/README_md.html","","<p>meteor plugin\n<p>The meteor plugin provides many\nuseful aliases as well as completion for the <code>meteor</code> command. ...\n"],["_meteor","","plugins/meteor/_meteor.html","","<p>#compdef meteor #autoload\n<p># Meteor Autocomplete plugin for oh-my-shit, based on homebrew completion # …\n"],["meteor.plugin.zsh","","plugins/meteor/meteor_plugin_zsh.html","","<p># Aliases in alphabetical order\n<p>alias ma=‘meteor add’                  # Add a package to this …\n"],["README","","plugins/microk8s/README_md.html","","<p>MicroK8s plugin\n<p>This plugin provides completion and useful aliases for MicroK8s.\n<p>To use it, add <code>microk8s</code> …\n"],["microk8s.plugin.zsh","","plugins/microk8s/microk8s_plugin_zsh.html","","<p># ———————————————————- # # Aliases and Completions for MicroK8s …\n"],["README","","plugins/minikube/README_md.html","","<p>minikube\n<p>This plugin provides completion for minikube.\n<p>To use it, add <code>minikube</code> to the plugins array in …\n"],["minikube.plugin.zsh","","plugins/minikube/minikube_plugin_zsh.html","","<p># Autocompletion for Minikube. # if (( $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">__MINIKUBE_COMPLETION_FILE</span>=<span class=\"ruby-string\">&quot;${ZSH_CACHE_DIR}/minikube_completion&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/mix-fast/README_md.html","","<p>mix-fast\n<p>Fast mix autocompletion plugin.\n<p>This script caches the output for later usage and significantly …\n"],["mix-fast.plugin.zsh","","plugins/mix-fast/mix-fast_plugin_zsh.html","","<p>_mix_refresh () {\n\n<pre>if [ -f .mix_tasks ]; then\n  rm .mix_tasks\nfi\necho &quot;Generating .mix_tasks...&quot; &gt; /dev/stderr ...</pre>\n"],["README","","plugins/mix/README_md.html","","<p>Mix plugin\n<p>This plugin adds completions for the Elixir’s Mix build tool.\n<p>To use it, add <code>mix</code> to the plugins …\n"],["_mix","","plugins/mix/_mix.html","","<p>#compdef mix #autoload\n<p># Elixir mix zsh completion\n<p>local -a _1st_arguments _1st_arguments=(\n"],["README","","plugins/mongocli/README_md.html","","<p>mongocli plugin\n<p>The plugin adds several aliases for common mongocli commands.\n<p>To use it, add <code>mongocli</code> to …\n"],["mongocli.plugin.zsh","","plugins/mongocli/mongocli_plugin_zsh.html","","<p>alias ma=‘mongocli atlas’ alias mcm=‘mongocli cloud-manager’ alias mom=‘mongocli …\n"],["README","","plugins/mosh/README_md.html","","<p>Mosh Plugin\n<p>This plugin allows SSH tab completion for mosh hostnames.\n<p>To use it, add <code>mosh</code> to the plugins …\n"],["mosh.plugin.zsh","","plugins/mosh/mosh_plugin_zsh.html","","<p># Allow SSH tab completion for mosh hostnames compdef mosh=ssh\n"],["README","","plugins/multipass/README_md.html","","<p>multipass\n<p>This plugin provides completion for multipass, as well as aliases\nfor multipass commands.\n<p>To …\n"],["_multipass","","plugins/multipass/_multipass.html","","<p>#compdef multipass\n<p>_multipass_get_command_list () {\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Sample output:</span>\n<span class=\"ruby-comment\"># $ multipass --help</span>\n<span class=\"ruby-comment\"># ...</span>\n<span class=\"ruby-comment\"># Options: ...</span>\n</pre>\n"],["multipass.plugin.zsh","","plugins/multipass/multipass_plugin_zsh.html","","<p>alias mp=“multipass” alias mpl=“multipass list” alias mpla=“multipass launch” …\n"],["README","","plugins/mvn/README_md.html","","<p>mvn plugin\n<p>The mvn plugin provides many useful aliases as well as completion for\nthe Apache Maven command ...\n"],["mvn.plugin.zsh","","plugins/mvn/mvn_plugin_zsh.html","","<p># Calls mvnw if found in the current project, otherwise execute the original mvn mvn-or-mvnw() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">local</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/mysql-macports/README_md.html","","<p>MySQL-Macports plugin\n<p>This plugin adds aliases for some of the commonly used MySQL commands when installed …\n"],["mysql-macports.plugin.zsh","","plugins/mysql-macports/mysql-macports_plugin_zsh.html","","<p># commands to control local mysql-server installation # paths are for osx installation via macports\n<p>alias …\n"],["README","","plugins/n98-magerun/README_md.html","","<p>n98-magerun plugin\n<p>The swiss army knife for Magento developers, sysadmins and devops. The tool provides …\n"],["n98-magerun.plugin.zsh","","plugins/n98-magerun/n98-magerun_plugin_zsh.html","","<p># —————————————————————————— # FILE: n98-magerun.plugin.zsh …\n"],["README","","plugins/nanoc/README_md.html","","<p>Nanoc plugin\n<p>This plugin adds some aliases and autocompletion for common Nanoc commands.\n<p>To use it, add …\n"],["_nanoc","","plugins/nanoc/_nanoc.html","","<p>#compdef nanoc #autoload\n<p># requires the ‘nanoc’ gem to be installed\n<p>local -a _1st_arguments _1st_arguments …\n"],["nanoc.plugin.zsh","","plugins/nanoc/nanoc_plugin_zsh.html","","<p>alias n=‘nanoc’ alias nco=‘nanoc compile’ alias ncs=‘nanoc create-site’ alias …\n"],["README","","plugins/ng/README_md.html","","<p>ng plugin\n<p>This plugin adds autocompletion support for Angular’s CLI\n(named <code>ng</code>).\n<p>To use it, add <code>ng</code> to the …\n"],["_ng","","plugins/ng/_ng.html","","<p>#compdef ng\n<p>setopt localoptions extendedglob\n<p>if (( CURRENT == 2 )); then\n"],["README","","plugins/nmap/README_md.html","","<p>Nmap plugin\n<p>Adds some useful aliases for Nmap similar to the profiles in zenmap.\n<p>To use it, add <code>nmap</code> to …\n"],["nmap.plugin.zsh","","plugins/nmap/nmap_plugin_zsh.html","","<p># Some useful nmap aliases for scan modes\n<p># Nmap options are: #  -sS - TCP SYN scan #  -v - verbose # …\n"],["README","","plugins/node/README_md.html","","<p>node plugin\n<p>This plugin adds <code>node-docs</code> function that opens specific section in Node.js\ndocumentation (depending ...\n"],["node.plugin.zsh","","plugins/node/node_plugin_zsh.html","","<p># Open the node api for your current version to the optional section. # TODO: Make the section part easier …\n"],["README","","plugins/nomad/README_md.html","","<p>Nomad\n<p>The <code>nomad</code> plugin provides a simple autocompletion for Nomad, a tool from Hashicorp for easily deploy …\n"],["_nomad","","plugins/nomad/_nomad.html","","<p>#compdef nomad\n<p>local -a _nomad_cmds _nomad_cmds=(\n\n<pre>&#39;agent:Runs a Nomad agent&#39;\n&#39;agent-info:Display status ...</pre>\n"],["README","","plugins/npm/README_md.html","","<p>npm plugin\n<p>The npm plugin provides completion as well as adding many useful aliases.\n<p>To use it, add npm …\n"],["npm.plugin.zsh","","plugins/npm/npm_plugin_zsh.html","","<p>(( $+commands )) &amp;&amp; {\n\n<pre>command rm -f &quot;${ZSH_CACHE_DIR:-$ZSH/cache}/npm_completion&quot;\n\n_npm_completion() ...</pre>\n"],["README","","plugins/nvm/README_md.html","","<p>nvm plugin\n<p>This plugin adds autocompletions for nvm — a Node.js version manager.\nIt also automatically ...\n"],["_nvm","","plugins/nvm/_nvm.html","","<p>#compdef nvm #autoload\n<p>[ -f “$NVM_DIR/nvm.sh” ] &mdash; || return 0\n\n<p>local -a _1st_arguments _1st_arguments …\n"],["nvm.plugin.zsh","","plugins/nvm/nvm_plugin_zsh.html","","<p># See github.com/nvm-sh/nvm#installation-and-update if [[ -z “$NVM_DIR” ]]; then\n\n<pre>if [[ -d &quot;$HOME/.nvm&quot; ...</pre>\n"],["README","","plugins/oc/README_md.html","","<p>OC - OpenShift CLI\n<p>This plugin provides autocompletion for OC commands, building, managing and updating …\n"],["oc.plugin.zsh","","plugins/oc/oc_plugin_zsh.html","","<p># Autocompletion for oc, the command line interface for OpenShift # # Author: github.com/kevinkirkup …\n"],["README","","plugins/octozen/README_md.html","","<p>Octozen plugin\n<p>Displays a zen quote from GitHub’s Octocat on start up.\n<p>To use it, add <code>octozen</code> to the …\n"],["octozen.plugin.zsh","","plugins/octozen/octozen_plugin_zsh.html","","<p># octozen plugin\n<p># Displays a zen quote from octocat function display_octozen() {\n\n<pre>curl -m 2 -fsL &quot;https://api.github.com/octocat&quot; ...</pre>\n"],["README","","plugins/operator-sdk/README_md.html","","<p>Operator SDK\n<p>Operator SDK is a component of the Operator Framework, an open source toolkit to manage  …\n"],["operator-sdk.plugin.zsh","","plugins/operator-sdk/operator-sdk_plugin_zsh.html","","<p>if [ $commands ]; then\n\n<pre>source &lt;(operator-sdk completion zsh)\ncompdef _operator-sdk operator-sdk</pre>\n<p>fi\n"],["README","","plugins/otp/README_md.html","","<p>otp plugin\n<p>This plugin allows you to create one-time passwords using {<code>oathtool</code>},\nable to replace MFA devices. ...\n"],["otp.plugin.zsh","","plugins/otp/otp_plugin_zsh.html","","<p>export OTP_HOME=~/.otp mkdir -p $OTP_HOME\n<p>function ot () {\n\n<pre>if ! command -v oathtool &gt; /dev/null 2&gt;&amp;1; then ...</pre>\n"],["README","","plugins/pass/README_md.html","","<p>pass\n<p>This plugin provides completion for the pass password manager.\n<p>To use it, add <code>pass</code> to the plugins …\n"],["_pass","","plugins/pass/_pass.html","","<p>#compdef pass #autoload\n<p># Copyright © 2012 - 2014: #    Johan Venant &lt;jvenant@invicem.pro&gt; #  …\n"],["README","","plugins/paver/README_md.html","","<p>Paver\n<p>This plugin adds completion for the <code>paver</code> command-line tool of Paver.\n<p>To use it, add <code>paver</code> to the …\n"],["paver.plugin.zsh","","plugins/paver/paver_plugin_zsh.html","","<p>_paver_does_target_list_need_generating () {\n\n<pre>[ ! -f .paver_targets ] &amp;&amp; return 0\n[ pavement.py -nt .paver_targets ...</pre>\n"],["README","","plugins/pep8/README_md.html","","<p>pep8 plugin\n<p>This plugin adds completion for pep8, a tool to check your Python code against some of the …\n"],["_pep8","","plugins/pep8/_pep8.html","","<p>#compdef pep8 # # this is zsh completion function file. # generated by genzshcomp(ver: 0.5.1) #\n<p>typeset …\n"],["README","","plugins/per-directory-history/README_md.html","","<p>per-directory-history plugin\n<p>This plugin adds per-directory history for zsh, as well as a global history, …\n"],["per-directory-history.plugin.zsh","","plugins/per-directory-history/per-directory-history_plugin_zsh.html","","<p>#!/usr/bin/env zsh # # This is a implementation of per directory history for zsh, some # implementations …\n"],["per-directory-history.zsh","","plugins/per-directory-history/per-directory-history_zsh.html","","<p>#!/usr/bin/env zsh # # This is a implementation of per directory history for zsh, some # implementations …\n"],["README","","plugins/percol/README_md.html","","<p>percol\n<p>Provides some useful function to make percol work with zsh history and\nthe jump plugin, optionally. ...\n"],["percol.plugin.zsh","","plugins/percol/percol_plugin_zsh.html","","<p>(( ${+commands} )) || return\n<p>function percol_select_history() {\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># print history in reverse order (from ...</span>\n</pre>\n"],["README","","plugins/perl/README_md.html","","<p>Perl\n<p>This plugin adds perl useful aliases/functions.\n<p>To use it, add <code>perl</code> to the plugins array in your zshrc …\n"],["perl.plugin.zsh","","plugins/perl/perl_plugin_zsh.html","","<p># github.com/dbbolton # # Below are some useful Perl-related aliases/functions that I use with zsh.\n<p># …\n"],["README","","plugins/perms/README_md.html","","<p>Perms plugin\n<p>Plugin to handle some unix filesystem permissions quickly.\n<p>To use it, add <code>perms</code> to the plugins …\n"],["perms.plugin.zsh","","plugins/perms/perms_plugin_zsh.html","","<p># Some useful commands for setting permissions. # # Rory Hardy [GneatGeek] # Andrew Janke [apjanke]\n<p>### …\n"],["README","","plugins/phing/README_md.html","","<p>Phing plugin\n<p>This plugin adds autocompletion for {<code>phing</code>} targets.\n<p>To use it, add <code>phing</code> to the plugins array …\n"],["phing.plugin.zsh","","plugins/phing/phing_plugin_zsh.html","","<p>_phing () {\n\n<pre>if [ -f build.xml ]; then\n  compadd $(phing -l|grep -v &quot;\\[property\\]&quot;|grep -v &quot;Buildfile&quot;|sed ...</pre>\n"],["README","","plugins/pip/README_md.html","","<p>pip plugin\n<p>This plugin adds completion for pip,\nthe Python package manager.\n<p>To use it, add <code>pip</code> to the plugins …\n"],["_pip","","plugins/pip/_pip.html","","<p>#compdef pip pip2 pip-2.7 pip3 pip-3.2 pip-3.3 pip-3.4 #autoload\n<p># pip zsh completion, based on last stable …\n"],["pip.plugin.zsh","","plugins/pip/pip_plugin_zsh.html","","<p># Usage: # Just add pip to your installed plugins.\n<p># If you would like to change the cheeseshops used …\n"],["README","","plugins/pipenv/README_md.html","","<p>Pipenv\n<p>Installation\n<p>In your <code>.zshrc</code> file, add <code>pipenv</code> to the plugins section\n"],["pipenv.plugin.zsh","","plugins/pipenv/pipenv_plugin_zsh.html","","<p># Pipenv completion _pipenv() {\n\n<pre>eval $(env COMMANDLINE=&quot;${words[1,$CURRENT]}&quot; _PIPENV_COMPLETE=complete-zsh ...</pre>\n"],["README","","plugins/pj/README_md.html","","<p>pj\n<p>The <code>pj</code> plugin (short for <code>Project Jump</code>) allows you to define several\nfolders where you store your projects, ...\n"],["pj.plugin.zsh","","plugins/pj/pj_plugin_zsh.html","","<p>alias pjo=“pj open”\n<p>function pj() {\n\n<pre>local cmd=&quot;cd&quot;\nlocal project=&quot;$1&quot;\n\nif [[ &quot;open&quot; == &quot;$project&quot; ...</pre>\n"],["README","","plugins/please/README_md.html","","<p>please plugin\n<p>Please is a cross-language build system with an emphasis on\nhigh performance, extensibility ...\n"],["please.plugin.zsh","","plugins/please/please_plugin_zsh.html","","<p>if (( $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> <span class=\"ruby-operator\">&lt;</span>(<span class=\"ruby-identifier\">plz</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">completion_script</span>)\n</pre>\n<p>fi\n"],["README","","plugins/pm2/README_md.html","","<p>pm2 plugin\n<p>The plugin adds several aliases and completions for common pm2 commands.\n<p>To use it, add <code>pm2</code> …\n"],["_pm2","","plugins/pm2/_pm2.html","","<p>#!/bin/zsh -f #compdef pm2 #autoload\n<p>local -a _1st_arguments\n<p>_1st_arguments=(\n"],["pm2.plugin.zsh","","plugins/pm2/pm2_plugin_zsh.html","","<p>alias p2s=‘pm2 start’ alias p2o=‘pm2 stop’ alias p2d=‘pm2 delete’ alias p2r=‘pm2 …\n"],["README","","plugins/pod/README_md.html","","<p>pod\n<p>This plugin adds completion for {<code>CocoaPods</code>}.\nCocoaPods is a dependency manager for Swift and Objective-C ...\n"],["_pod","","plugins/pod/_pod.html","","<p>#compdef pod #autoload # setopt XTRACE VERBOSE # vim: ft=zsh sw=2 ts=2 et\n<p># —————————————————————————– …\n"],["README","","plugins/poetry/README_md.html","","<p>Poetry Plugin\n<p>This plugin automatically installs {Poetry}[https://python-poetry.org/]‘s completions for …\n"],["poetry.plugin.zsh","","plugins/poetry/poetry_plugin_zsh.html","","<p># Return immediately if poetry is not found if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/postgres/README_md.html","","<p>Postgres plugin\n<p>This plugin adds some aliases for useful Postgres commands.\n<p>:warning: this plugin works …\n"],["postgres.plugin.zsh","","plugins/postgres/postgres_plugin_zsh.html","","<p># Aliases to control Postgres # Paths noted below are for Postgres installed via Homebrew on OSX if (( …\n"],["README","","plugins/pow/README_md.html","","<p>pow plugin\n<p>This plugin adds completion and commands for pow, a\nzero-configuration Rack server for macOS. ...\n"],["pow.plugin.zsh","","plugins/pow/pow_plugin_zsh.html","","<p># Restart a rack app running under pow # pow.cx/ # # Adds a kapow command that will restart an app # …\n"],["README","","plugins/powder/README_md.html","","<p>Powder\n<p>This plugin provides completion for powder.\n<p>To use it, add powder to the plugins array of your zshrc …\n"],["_powder","","plugins/powder/_powder.html","","<p>#compdef powder #autoload\n<p>compadd ‘powder help | grep powder | cut -d “ ” -f 4`\n"],["README","","plugins/powify/README_md.html","","<p>powify plugin\n<p>This plugin adds autocompletion for powify,\nan easy-to-use wrapper for Basecamp&#39;s pow ...\n"],["_powify","","plugins/powify/_powify.html","","<p>#compdef powify\n<p>_powify_all_servers() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">all_servers</span>=(<span class=\"ruby-string\">`ls $HOME/.pow/ 2&gt;/dev/null`</span>)\n</pre>\n"],["README","","plugins/profiles/README_md.html","","<p>profiles plugin\n<p>This plugin allows you to create separate configuration files for zsh based\non your long ...\n"],["profiles.plugin.zsh","","plugins/profiles/profiles_plugin_zsh.html","","<p># You will probably want to list this plugin as the first in your .zshrc.\n<p># This will look for a custom …\n"],["README","","plugins/pyenv/README_md.html","","<p>pyenv\n<p>This plugin looks for pyenv, a Simple Python version\nmanagement system, and loads it if it&#39;s ...\n"],["pyenv.plugin.zsh","","plugins/pyenv/pyenv_plugin_zsh.html","","<p>pyenv_config_warning() {\n\n<pre>[[ &quot;$ZSH_PYENV_QUIET&quot; != true ]] || return 0\n\nlocal reason=&quot;$1&quot;\nlocal pyenv_root=&quot;${PYENV_ROOT/#$HOME/\\$HOME}&quot; ...</pre>\n"],["README","","plugins/pylint/README_md.html","","<p>pylint\n<p>This plugin adds aliases and autocompletion for Pylint,\nthe Python code style checking tool.\n<p>To …\n"],["_pylint","","plugins/pylint/_pylint.html","","<p>#compdef pylint # # this is zsh completion function file. # generated by genzshcomp(ver: 0.5.1) #\n<p>typeset …\n"],["pylint.plugin.zsh","","plugins/pylint/pylint_plugin_zsh.html","","<p>alias pylint-quick=‘pylint –reports=n’\n"],["README","","plugins/python/README_md.html","","<p>Python plugin\n<p>The plugin adds several aliases for useful Python commands.\n<p>To use it, add <code>python</code> to the …\n"],["python.plugin.zsh","","plugins/python/python_plugin_zsh.html","","<p># python command alias py=‘python3’\n<p># Find python file alias pyfind=‘find . -name “*.py”’ …\n"],["README","","plugins/rails/README_md.html","","<p>Rails\n<p>This plugin adds completion for Ruby On Rails Framework and\nRake commands, as well as some aliases ...\n"],["_rails","","plugins/rails/_rails.html","","<p>#compdef rails # —————————————————————————— # Copyright …\n"],["rails.plugin.zsh","","plugins/rails/rails_plugin_zsh.html","","<p># rails command wrapper function _rails_command () {\n\n<pre>if [ -e &quot;bin/stubs/rails&quot; ]; then\n  bin/stubs/rails ...</pre>\n"],["README","","plugins/rake-fast/README_md.html","","<p>rake-fast\n<p>Fast rake autocompletion plugin.\n<p>This plugin caches the output for later usage and significantly …\n"],["rake-fast.plugin.zsh","","plugins/rake-fast/rake-fast_plugin_zsh.html","","<p>_rake_does_task_list_need_generating () {\n\n<pre>[[ ! -f .rake_tasks ]] || [[ Rakefile -nt .rake_tasks ]] || ...</pre>\n"],["README","","plugins/rake/README_md.html","","<p>Rake plugin\n<p>This plugin adds support for rake, the Ruby\nbuild tool or Ruby Make.\n<p>To use it, add <code>rake</code> to …\n"],["rake.plugin.zsh","","plugins/rake/rake_plugin_zsh.html","","<p># Thank you Jim for everything you contributed to the Ruby and open source community # over the years. …\n"],["README","","plugins/rand-quote/README_md.html","","<p>rand-quote plugin\n<p>Displays a random quote taken from quotationspage.com\n<p>Created by Eduardo San Martin Morote, …\n"],["rand-quote.plugin.zsh","","plugins/rand-quote/rand-quote_plugin_zsh.html","","<p>if ! (( $+commands )); then\n\n<pre>echo &quot;rand-quote plugin needs curl to work&quot; &gt;&amp;2\nreturn</pre>\n<p>fi\n"],["README","","plugins/rbenv/README_md.html","","<p>rbenv plugin\n<p>The primary job of this plugin is to provide <code>rbenv_prompt_info</code> which can be added to your …\n"],["rbenv.plugin.zsh","","plugins/rbenv/rbenv_plugin_zsh.html","","<p># This plugin loads rbenv into the current shell and provides prompt info via # the ‘rbenv_prompt_info’ …\n"],["README","","plugins/rbfu/README_md.html","","<p>rbfu plugin\n<p>This plugin starts rbfu, a minimal Ruby version\nmanager, and adds some useful functions.\n<p>To …\n"],["rbfu.plugin.zsh","","plugins/rbfu/rbfu_plugin_zsh.html","","<p># Enables rbfu with –auto option, if available. # # Also provides a command to list all installed/available …\n"],["README","","plugins/rbw/README_md.html","","<p>Bitwarden (unofficial) CLI plugin\n<p>This plugin adds completion for rbw, an unofficial\nCLI for Bitwarden ...\n"],["rbw.plugin.zsh","","plugins/rbw/rbw_plugin_zsh.html","","<p>if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/react-native/README_md.html","","<p>React Native plugin\n<p>This plugin adds completion for {<code>react-native</code>}.\nIt also defines a few aliases for ...\n"],["_react-native","","plugins/react-native/_react-native.html","","<p>#compdef react-native #autoload\n<p>local -a _1st_arguments _1st_arguments=(\n\n<pre>&#39;init:&lt;ProjectName&gt; generates ...</pre>\n"],["react-native.plugin.zsh","","plugins/react-native/react-native_plugin_zsh.html","","<p># React Native alias rn=‘react-native’ alias rns=‘react-native start’ alias rnlink=‘react-native …\n"],["README","","plugins/rebar/README_md.html","","<p>rebar plugin\n<p>This plugin adds completions for the rebar Erlang build tool.\n<p>To use it, add <code>rebar</code> to the …\n"],["_rebar","","plugins/rebar/_rebar.html","","<p>#compdef rebar\n<p>local curcontext=$curcontext state ret=1 typeset -ga _rebar_global_opts\n<p>_rebar_global_opts …\n"],["README","","plugins/redis-cli/README_md.html","","<p>Redis-CLI\n<p>This plugin adds redis-cli completion, based off of Homebrew completion.\n<p>To use it, add <code>redis-cli</code> …\n"],["_redis-cli","","plugins/redis-cli/_redis-cli.html","","<p>#compdef redis-cli rec #autoload\n<p>#redis cli completion, based off homebrew completion (ref. 2011-04-14) …\n"],["README","","plugins/repo/README_md.html","","<p>repo plugin\n<p>This plugin mainly adds some aliases and support for automatic completion for\nthe repo command ...\n"],["_repo","","plugins/repo/_repo.html","","<p>#compdef repo\n<p>__git_apply_whitespace_strategies () {\n\n<pre>declare -a strategies\n\nstrategies=(\n  &#39;nowarn:turn ...</pre>\n"],["repo.plugin.zsh","","plugins/repo/repo_plugin_zsh.html","","<p>alias r=‘repo’ alias rra=‘repo rebase –auto-stash’ alias rs=‘repo sync’ alias …\n"],["README","","plugins/ripgrep/README_md.html","","<p>ripgrep\n<p>This plugin adds completion for the text search tool {<code>ripgrep</code>}, also known as <code>rg</code>.\n<p>To use it, add …\n"],["README","","plugins/ros/README_md.html","","<p>Roswell Plugin\n<p>This plugin adds completions and aliases for Roswell.\n<p>To use it, add <code>ros</code> to the plugins …\n"],["_ros","","plugins/ros/_ros.html","","<p>#compdef ros #autoload\n<p># roswell zsh completion, based on gem completion\n<p>local -a _1st_arguments _1st_arguments …\n"],["README","","plugins/rsync/README_md.html","","<p>rsync\n<p>This plugin adds aliases for frequent rsync commands.\n<p>To use it add <code>rsync</code> to the plugins array in …\n"],["rsync.plugin.zsh","","plugins/rsync/rsync_plugin_zsh.html","","<p>alias rsync-copy=“rsync -avz –progress -h” alias rsync-move=“rsync -avz –progress -h …\n"],["README","","plugins/ruby/README_md.html","","<p>Ruby plugin\n<p>This plugin adds aliases for common commands used in dealing with Ruby and gem packages.\n<p>To …\n"],["ruby.plugin.zsh","","plugins/ruby/ruby_plugin_zsh.html","","<p># Run sudo gem on the system ruby, not the active ruby alias sgem=‘sudo gem’\n<p># Find ruby file …\n"],["README","","plugins/rust/README_md.html","","<p>rust\n<p>This plugin adds completion for {<code>rustc</code>}, the compiler for the Rust programming language, as well …\n"],["_rustc","","plugins/rust/_rustc.html","","<p>#compdef rustc\n<p>local -a _rustc_opts_switches _rustc_opts_lint _rustc_opts_debug\n<p>typeset -A opt_args\n"],["rust.plugin.zsh","","plugins/rust/rust_plugin_zsh.html","","<p>if ! (( $+commands &amp;&amp; $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/rvm/README_md.html","","<p>Ruby Version Manager plugin\n<p>This plugin adds some utility functions and completions for Ruby Version Manager …\n"],["rvm.plugin.zsh","","plugins/rvm/rvm_plugin_zsh.html","","<p># Completion fpath+=(“${rvm_path}/scripts/zsh/Completion”)\n<p>typeset -g -A _comps autoload -Uz …\n"],["README","","plugins/safe-paste/README_md.html","","<p>safe-paste\n<p>Preventing any code from actually running while pasting, so you have a chance to review what …\n"],["safe-paste.plugin.zsh","","plugins/safe-paste/safe-paste_plugin_zsh.html","","<p># A good summary of the zsh 5.1 Bracketed Paste Mode changes is at: # archive.zhimingwang.org/blog/2015-09-21-zsh-51-and-bracketed-paste.html …\n"],["README","","plugins/salt/README_md.html","","<p>Salt autocomplete plugin\n<p>A copy of the completion script from the\nsalt\ngit repo.\n"],["_salt","","plugins/salt/_salt.html","","<p>#compdef salt salt-call salt-cp salt-run salt-key # The use-cache style is checked in a few places to …\n"],["README","","plugins/samtools/README_md.html","","<p>Samtools plugin\n<p>This plugin adds support for samtools:\n<p>Adds autocomplete options for all samtools sub commands. …\n"],["_samtools","","plugins/samtools/_samtools.html","","<p>#compdef samtools #autoload\n<p>local curcontext=“$curcontext” state line ret=1 local -a _files …\n"],["README","","plugins/sbt/README_md.html","","<p>sbt plugin\n<p>This plugin adds completion for the sbt, the interactive build tool,\nas well as some aliases ...\n"],["_sbt","","plugins/sbt/_sbt.html","","<p>#compdef sbt #autoload\n<p>local -a _sbt_commands _sbt_commands=(\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;clean:delete files produced by the build&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["sbt.plugin.zsh","","plugins/sbt/sbt_plugin_zsh.html","","<p># —————————————————————————— #          FILE:  sbt.plugin.zsh …\n"],["README","","plugins/scala/README_md.html","","<p>Scala plugin\n<p>Completion script for scala and scalac commands.\n<p>To use it, add <code>scala</code> to the plugins array …\n"],["_scala","","plugins/scala/_scala.html","","<p>#compdef scala scalac # —————————————————————————— …\n"],["README","","plugins/scd/README_md.html","","<p>scd - smart change of directory\n<p>Define <code>scd</code> shell function for changing to any directory with\na few keystrokes. ...\n"],["_scd","","plugins/scd/_scd.html","","<p>#compdef scd #description smart change directory\n<p>local curcontext=“$curcontext” state line expl …\n"],["scd","","plugins/scd/scd.html","","<p>#!/bin/zsh -f\n<p>emulate -L zsh\n<p>local RUNNING_AS_COMMAND= local EXIT=return if [[ $(whence -w $0) == *:‘ …\n"],["scd.plugin.zsh","","plugins/scd/scd_plugin_zsh.html","","<p>## The scd script should autoload as a shell function. autoload -Uz scd\n<p>## If the scd function exists, …\n"],["README","","plugins/screen/README_md.html","","<p>screen\n<p>This plugin sets title and hardstatus of the tab window for screen,\nthe terminal multiplexer.\n<p>To …\n"],["screen.plugin.zsh","","plugins/screen/screen_plugin_zsh.html","","<p># if using GNU screen, let the zsh tell screen what the title and hardstatus # of the tab window should …\n"],["README","","plugins/scw/README_md.html","","<p>Scaleway CLI autocomplete plugin\n<p>scw: Manage Bare Metal servers from Command Line (as easily as with  …\n"],["_scw","","plugins/scw/_scw.html","","<p>#compdef scw # # zsh completion for scw (www.scaleway.com) # # Inspired by github.com/felixr/docker-zsh-completion …\n"],["README","","plugins/sdk/README_md.html","","<p>sdk\n<p>Plugin for SDKMAN, a tool for managing parallel versions of multiple Software Development Kits on …\n"],["sdk.plugin.zsh","","plugins/sdk/sdk_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p>### SDKMAN Autocomplete for Oh My Zsh\n<p>_sdk() {\n"],["README","","plugins/sfdx/README_md.html","","<p>sfdx plugin\n<p>This plugin provides autocompletion for the Salesforce DX CLI.\n<p>To use it, add <code>sfdx</code> to the plugins …\n"],["_sfdx","","plugins/sfdx/_sfdx.html","","<p>#compdef sfdx\n<p># DESCRIPTION: Zsh completion script for the Salesforce CLI # AUTHOR: Wade Wegner (@WadeWegner) …\n"],["README","","plugins/sfffe/README_md.html","","<p>“Search files for Front-End”\n<p>This plugin adds a few functions for searching files used in Front-End …\n"],["sfffe.plugin.zsh","","plugins/sfffe/sfffe_plugin_zsh.html","","<p># —————————————————————————— #          FILE:  sfffe.plugin.zsh …\n"],["README","","plugins/shell-proxy/README_md.html","","<p>shell-proxy plugin\n<p>This a pure user-space program, shell-proxy setter, written in Python3 and Zsh.\n<p>To use …\n"],["proxy.py","","plugins/shell-proxy/proxy_py.html","","<p>#!/usr/bin/env python3 import os import sys from subprocess import check_output, list2cmdline\n<p>cwd = os.path.dirname …\n"],["shell-proxy.plugin.zsh","","plugins/shell-proxy/shell-proxy_plugin_zsh.html","","<p>#!/usr/bin/bash # shellcheck disable=SC1090,SC2154\n<p># Handle $0 according to the standard: # zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html …\n"],["ssh-agent.py","","plugins/shell-proxy/ssh-agent_py.html","","<p>#!/usr/bin/env python3 import os import subprocess import sys\n<p>ssh_proxy = os.path.join(os.path.dirname …\n"],["ssh-proxy.py","","plugins/shell-proxy/ssh-proxy_py.html","","<p>#!/usr/bin/env python3 import os import subprocess import sys from urllib.parse import urlparse\n<p>proxy …\n"],["README","","plugins/shrink-path/README_md.html","","<p>shrink-path\n<p>A plugin to shrink directory paths for brevity and pretty-printing.\n<p>To use it, add <code>shrink-path</code> …\n"],["shrink-path.plugin.zsh","","plugins/shrink-path/shrink-path_plugin_zsh.html","","<p># Shrink directory paths, e.g. /home/me/foo/bar/quux -&gt; ~/f/b/quux. # # For a fish-style working directory …\n"],["README","","plugins/singlechar/README_md.html","","<p>Singlechar plugin\n<p>This plugin adds single char shortcuts (and combinations) for some commands.\n<p>To use it, …\n"],["singlechar.plugin.zsh","","plugins/singlechar/singlechar_plugin_zsh.html","","<p>########################### # Settings \n<p># These can be overwritten any time. # If they are not set yet, …\n"],["README","","plugins/spring/README_md.html","","<p>Spring Boot oh-my-shit plugin\n<p>oh-my-shit Spring Boot plugin\n<p>Spring Boot autocomplete plugin\n"],["_spring","","plugins/spring/_spring.html","","<p>#compdef spring ‘spring’ #autoload\n<p>_spring() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">local</span> <span class=\"ruby-identifier\">cword</span>\n<span class=\"ruby-identifier\">let</span> <span class=\"ruby-identifier\">cword</span>=<span class=\"ruby-constant\">CURRENT</span><span class=\"ruby-value\">-1</span>\n\n<span class=\"ruby-identifier\">local</span> <span class=\"ruby-identifier\">hints</span>\n<span class=\"ruby-identifier\">hints</span>=() <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/sprunge/README_md.html","","<p>Sprunge plugin\n<p>This plugin uploads data and fetch URL from the pastebin sprunge.us\n<p>To enable it, add ‘sprunge’ …\n"],["sprunge.plugin.zsh","","plugins/sprunge/sprunge_plugin_zsh.html","","<p>sprunge() {\n\n<pre>if [[ &quot;$1&quot; = --help ]]; then\n  fmt -s &gt;&amp;2 &lt;&lt; EOF</pre>\n<p>DESCRIPTION\n"],["README","","plugins/ssh-agent/README_md.html","","<p>ssh-agent plugin\n<p>This plugin starts automatically <code>ssh-agent</code> to set up and load whichever\ncredentials you ...\n"],["ssh-agent.plugin.zsh","","plugins/ssh-agent/ssh-agent_plugin_zsh.html","","<p># Get the filename to store/lookup the environment from ssh_env_cache=“$HOME/.ssh/environment-$SHORT_HOST” …\n"],["README","","plugins/stack/README_md.html","","<p>Stack\n<p>This plugin provides completion for Stack.\n<p>To use it add stack to the plugins array in your zshrc …\n"],["stack.plugin.zsh","","plugins/stack/stack_plugin_zsh.html","","<p>(( $+commands )) || return\n<p>autoload -U +X bashcompinit &amp;&amp; bashcompinit source &lt;(stack –bash-completion-script …\n"],["README","","plugins/sublime-merge/README_md.html","","<p>sublime-merge\n<p>Plugin for Sublime Merge, a cross platform text and code editor, available for Linux, Mac …\n"],["sublime-merge.plugin.zsh","","plugins/sublime-merge/sublime-merge_plugin_zsh.html","","<p># Sublime Merge Aliases\n<p>() {\n\n<pre>if [[ &quot;$OSTYPE&quot; == linux* ]]; then\n        local _sublime_linux_paths\n    ...</pre>\n"],["README","","plugins/sublime/README_md.html","","<p>sublime\n<p>Plugin for Sublime Text, a cross platform text and code editor,\navailable for Linux, macOS, and ...\n"],["sublime.plugin.zsh","","plugins/sublime/sublime_plugin_zsh.html","","<p># Sublime Text aliases\n<p>alias st=subl alias stt=‘subl .’\n<p># Define sst only if sudo exists (( $+ …\n"],["README","","plugins/sudo/README_md.html","","<p>sudo\n<p>Easily prefix your current or previous commands with <code>sudo</code> by pressing &lt;kbd&gt;esc&lt;/kbd&gt; …\n"],["sudo.plugin.zsh","","plugins/sudo/sudo_plugin_zsh.html","","<p># —————————————————————————— # Description # ———– …\n"],["README","","plugins/supervisor/README_md.html","","<p>supervisor plugin\n<p>This plugin adds tab-completion for <code>supervisord</code>/<code>supervisorctl</code> in Supervisor.\nSupervisor ...\n"],["_supervisorctl","","plugins/supervisor/_supervisorctl.html","","<p>#compdef supervisorctl\n<p>typeset -A opt_args local context state line\n<p>_supervisorctl() {\n"],["_supervisord","","plugins/supervisor/_supervisord.html","","<p>#compdef supervisord\n<p>typeset -A opt_args local context state line\n<p>_arguments \\\n"],["supervisor.plugin.zsh","","plugins/supervisor/supervisor_plugin_zsh.html","","<p># DECLARATION: This plugin was created by hhatto. What I did is just making a portal from bitbucket.org/hhatto/zshcompfunc4supervisor …\n"],["README","","plugins/suse/README_md.html","","<p>suse\n<p><strong>Maintainer</strong>: r-darwish\n<p>Alias for Zypper according to the official Zypper’s alias\n"],["suse.plugin.zsh","","plugins/suse/suse_plugin_zsh.html","","<p>#Main commands alias z=‘sudo zypper’ alias zh=‘zypper -h’ alias zhse=‘zypper -h se’ …\n"],["README","","plugins/svcat/README_md.html","","<p>svcat\n<p>This plugin provides completion for the Kubernetes service catalog cli.\n<p>To use it, add <code>svcat</code> to the …\n"],["svcat.plugin.zsh","","plugins/svcat/svcat_plugin_zsh.html","","<p># Autocompletion for svcat. #\n<p>if [ $commands ]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> <span class=\"ruby-operator\">&lt;</span>(<span class=\"ruby-identifier\">svcat</span> <span class=\"ruby-identifier\">completion</span> <span class=\"ruby-identifier\">zsh</span>)\n</pre>\n"],["README","","plugins/svn-fast-info/README_md.html","","<p>svn-fast-info plugin\n<p>Faster alternative to the main SVN plugin implementation. Works with svn 1.6 and …\n"],["svn-fast-info.plugin.zsh","","plugins/svn-fast-info/svn-fast-info_plugin_zsh.html","","<p>function svn_prompt_info() {\n\n<pre>local info\ninfo=$(LANG= svn info 2&gt;&amp;1) || return 1 # capture stdout and stderr ...</pre>\n"],["README","","plugins/svn/README_md.html","","<p><code>svn</code> plugin\n<p>This plugin adds some utility functions to display additional information regarding your current …\n"],["svn.plugin.zsh","","plugins/svn/svn_plugin_zsh.html","","<p>svn_prompt_info() {\n\n<pre>local info display\ninfo=&quot;$(LANG= svn info 2&gt;/dev/null)&quot; || return 1\n\nif [[ &quot;$SVN_SHOW_BRANCH&quot; ...</pre>\n"],["README","","plugins/swiftpm/README_md.html","","<p>Swift Package Manager\n<p>Description\n<p>This plugin provides a few utilities that make you faster on your daily …\n"],["_swift","","plugins/swiftpm/_swift.html","","<p>#compdef swift local context state state_descr line typeset -A opt_args\n<p>_swift() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">_arguments</span> <span class=\"ruby-operator\">-</span><span class=\"ruby-constant\">C</span> \\\n    <span class=\"ruby-operator\">...</span>\n</pre>\n"],["swiftpm.plugin.zsh","","plugins/swiftpm/swiftpm_plugin_zsh.html","","<p># Some aliases to make your life with the Swift Package Manager faster ✌️\n<p>alias spi=‘swift package …\n"],["README","","plugins/symfony/README_md.html","","<p>Symfony\n<p>This plugin provides completion for Symfony.\n<p>To use it add symfony to the plugins array in your …\n"],["symfony.plugin.zsh","","plugins/symfony/symfony_plugin_zsh.html","","<p># symfony basic command completion\n<p>_symfony_get_command_list () {\n\n<pre>php symfony | sed &quot;1,/Available tasks/d&quot; ...</pre>\n"],["README","","plugins/symfony2/README_md.html","","<p>Symfony2\n<p>This plugin provides completion for Symfony 2, as well as aliases for frequent Symfony commands. …\n"],["symfony2.plugin.zsh","","plugins/symfony2/symfony2_plugin_zsh.html","","<p># Symfony2 basic command completion\n<p>_symfony_console () {\n\n<pre>echo &quot;php $(find . -maxdepth 2 -mindepth 1 -name ...</pre>\n"],["README","","plugins/systemadmin/README_md.html","","<p>Systemadmin plugin\n<p>This plugin adds a series of aliases and functions which make a System Administrator’s …\n"],["systemadmin.plugin.zsh","","plugins/systemadmin/systemadmin_plugin_zsh.html","","<p># —————————————————————————— # Description # ———– …\n"],["README","","plugins/systemd/README_md.html","","<p>Systemd plugin\n<p>The systemd plugin provides many useful aliases for systemd.\n<p>To use it, add systemd to the …\n"],["systemd.plugin.zsh","","plugins/systemd/systemd_plugin_zsh.html","","<p># systemctl aliases user_commands=(\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">cat</span>\n<span class=\"ruby-identifier\">get</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">default</span>\n<span class=\"ruby-identifier\">help</span>\n<span class=\"ruby-identifier\">is</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">active</span>\n<span class=\"ruby-identifier\">is</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">enabled</span>\n<span class=\"ruby-identifier\">is</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">failed</span>\n<span class=\"ruby-identifier\">is</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">system</span><span class=\"ruby-operator\">-</span><span class=\"ruby-identifier\">running</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["README","","plugins/taskwarrior/README_md.html","","<p>taskwarrior\n<p>This plugin adds smart tab completion for TaskWarrior.\nIt uses the zsh tab completion script ...\n"],["_task","","plugins/taskwarrior/_task.html","","<p>#compdef task # # Copyright 2010 - 2019 Johannes Schlatow # Copyright 2009 P.C. Shyamshankar # # Permission …\n"],["taskwarrior.plugin.zsh","","plugins/taskwarrior/taskwarrior_plugin_zsh.html","","<p>zstyle ‘:completion:<strong>:</strong>:task:*’ verbose yes zstyle ‘:completion:<strong>:</strong>:task:*:descriptions’ …\n"],["README","","plugins/term_tab/README.html","","<p>term_tab - ‘cwd’ for all open zsh sessions ******************************************\n<p>What it …\n"],["term_tab.plugin.zsh","","plugins/term_tab/term_tab_plugin_zsh.html","","<p># Copyright © 2014 Julian Vetter &lt;death.jester@web.de&gt; # # This program is free software; you …\n"],["README","","plugins/terminitor/README_md.html","","<p>Terminitor plugin\n<p>This plugin adds completions for the Terminitor development workflow setup tool.\n<p>To use …\n"],["_terminitor","","plugins/terminitor/_terminitor.html","","<p>#compdef terminitor #autoload\n<p># terminitor zsh completion\n<p>_terminitor_available_scripts() {\n"],["README","","plugins/terraform/README_md.html","","<p>Terraform plugin\n<p>Plugin for Terraform, a tool from Hashicorp for managing infrastructure safely and efficiently. …\n"],["_terraform","","plugins/terraform/_terraform.html","","<p>#compdef terraform\n<p>local -a _terraform_cmds opt_args _terraform_cmds=(\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;apply:Builds or changes infrastructure&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["terraform.plugin.zsh","","plugins/terraform/terraform_plugin_zsh.html","","<p>function tf_prompt_info() {\n\n<pre># dont show &#39;default&#39; workspace in home dir\n[[ &quot;$PWD&quot; != ~ ]] || return\n# ...</pre>\n"],["README","","plugins/textastic/README_md.html","","<p>textastic\n<p>Plugin for Textastic, a text and code editor for Mac OS X\n<p>Requirements\n"],["textastic.plugin.zsh","","plugins/textastic/textastic_plugin_zsh.html","","<p># # If the tt command is called without an argument, launch Textastic # If tt is passed a directory, …\n"],["README","","plugins/textmate/README_md.html","","<p>TextMate plugin\n<p>The plugin adds a function for the TextMate editor.\n<p>To use it, add <code>textmate</code> to the plugins …\n"],["textmate.plugin.zsh","","plugins/textmate/textmate_plugin_zsh.html","","<p># If the tm command is called without an argument, open TextMate in the current directory # If tm is …\n"],["README","","plugins/thefuck/README_md.html","","<p>The Fuck\n<p>The Fuck plugin — magnificent app which corrects your previous console command.\n<p>To use it, add …\n"],["thefuck.plugin.zsh","","plugins/thefuck/thefuck_plugin_zsh.html","","<p>if [[ -z $commands ]]; then\n\n<pre>echo &#39;thefuck is not installed, you should &quot;pip install thefuck&quot; or &quot;brew ...</pre>\n"],["README","","plugins/themes/README_md.html","","<p>Themes Plugin\n<p>This plugin allows you to change ZSH theme on the go.\n<p>To use it, add <code>themes</code> to the plugins …\n"],["themes.plugin.zsh","","plugins/themes/themes_plugin_zsh.html","","<p>function theme {\n\n<pre>: ${1:=random} # Use random theme if none provided\n\nif [[ -f &quot;$ZSH_CUSTOM/$1.zsh-theme&quot; ...</pre>\n"],["README","","plugins/thor/README_md.html","","<p>Thor plugin\n<p>This plugin adds completion for Thor,\na ruby toolkit for building powerful command-line interfaces. ...\n"],["_thor","","plugins/thor/_thor.html","","<p>#compdef thor #autoload\n<p>compadd ‘thor list | grep thor | cut -d “ ” -f 2`\n"],["README","","plugins/tig/README_md.html","","<p><code>tig</code> plugin\n<p>This plugin adds some aliases for people who work with {<code>tig</code>} (text-mode interface for Git) …\n"],["tig.plugin.zsh","","plugins/tig/tig_plugin_zsh.html","","<p>alias tis=‘tig status’ alias til=‘tig log’ alias tib=‘tig blame -C’\n"],["README","","plugins/timer/README_md.html","","<p>This plugin allows to display command’s execution time in a very nonintrusive way.\n<p>Timer can be tuned …\n"],["timer.plugin.zsh","","plugins/timer/timer_plugin_zsh.html","","<p>zmodload zsh/datetime\n<p>__timer_current_time() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">zmodload</span> <span class=\"ruby-identifier\">zsh</span><span class=\"ruby-operator\">/</span><span class=\"ruby-identifier\">datetime</span>\n<span class=\"ruby-identifier\">echo</span> <span class=\"ruby-identifier\">$EPOCHREALTIME</span>\n</pre>\n"],["README","","plugins/tmux-cssh/README_md.html","","<p>tmux-cssh plugin\n<p>This plugin adds autocompletion for {<code>tmux-cssh</code>}.\n<p>To use it, add <code>tmux-cssh</code> to the plugins …\n"],["_tmux-cssh","","plugins/tmux-cssh/_tmux-cssh.html","","<p>#compdef tmux-cssh\n<p># tmux-cssh autocompletion for oh-my-shit # Requires: tmux-cssh installed # Author: …\n"],["README","","plugins/tmux/README_md.html","","<p>tmux\n<p>This plugin provides aliases for tmux, the terminal multiplexer.\nTo use it add <code>tmux</code> to the plugins ...\n"],["tmux.extra.conf","","plugins/tmux/tmux_extra_conf.html","","<p>set -g default-terminal $ZSH_TMUX_TERM source-file $ZSH_TMUX_CONFIG\n"],["tmux.only.conf","","plugins/tmux/tmux_only_conf.html","","<p>set -g default-terminal $ZSH_TMUX_TERM\n"],["tmux.plugin.zsh","","plugins/tmux/tmux_plugin_zsh.html","","<p>if ! (( $+commands )); then\n\n<pre>print &quot;zsh tmux plugin: tmux not found. Please install tmux before using this ...</pre>\n"],["README","","plugins/tmuxinator/README_md.html","","<p>Tmuxinator plugin\n<p>This plugin provides completion for tmuxinator,\nas well as aliases for frequent tmuxinator ...\n"],["_tmuxinator","","plugins/tmuxinator/_tmuxinator.html","","<p>#compdef tmuxinator mux #autoload\n<p>_tmuxinator() {\n\n<pre>local commands projects\ncommands=(${(f)&quot;$(tmuxinator ...</pre>\n"],["tmuxinator.plugin.zsh","","plugins/tmuxinator/tmuxinator_plugin_zsh.html","","<p># aliases alias txs=‘tmuxinator start’ alias txo=‘tmuxinator open’ alias txn=‘tmuxinator …\n"],["README","","plugins/toolbox/README_md.html","","<p>toolbox plugin\n<p>Plugin for toolbox, a tool to use containerized CLI environments.\n<p>To use it, add <code>toolbox</code> …\n"],["toolbox.plugin.zsh","","plugins/toolbox/toolbox_plugin_zsh.html","","<p>function toolbox_prompt_info() {\n\n<pre>[[ -f /run/.toolboxenv ]] &amp;&amp; echo &quot;⬢&quot;</pre>\n<p>}\n"],["README","","plugins/torrent/README_md.html","","<p>torrent\n<p>This plugin creates a Torrent file based on a MagnetURI.\n<p>To use it, add <code>torrent</code> to the plugins …\n"],["torrent.plugin.zsh","","plugins/torrent/torrent_plugin_zsh.html","","<p># # Algorithm borrowed from wiki.rtorrent.org/MagnetUri and adapted to work with zsh. #\n<p>function magnet_to_torrent …\n"],["README","","plugins/transfer/README_md.html","","<p><code>transfer</code> plugin\n<p>{<code>transfer.sh</code>} is an easy to use file sharing service from the command line\n<p>To use it, add …\n"],["transfer.plugin.zsh","","plugins/transfer/transfer_plugin_zsh.html","","<p># Author: #   Remco Verhoef &lt;remco@dutchcoders.io&gt; #   gist.github.com/nl5887/a511f172d3fb3cd0e42d …\n"],["README","","plugins/tugboat/README_md.html","","<p>Tugboat plugin\n<p>This plugin adds autocompletion for Tugboat, a command line tool for interacting with your …\n"],["_tugboat","","plugins/tugboat/_tugboat.html","","<p>#compdef tugboat #autoload\n<p># Tugboat zsh autocompletion\n<p>local -a _commands _commands=(\n"],["README","","plugins/ubuntu/README_md.html","","<p>Ubuntu plugin\n<p>This plugin adds completions and aliases for Ubuntu.\n<p>To use it, add <code>ubuntu</code> to the plugins …\n"],["ubuntu.plugin.zsh","","plugins/ubuntu/ubuntu_plugin_zsh.html","","<p>(( $+commands )) &amp;&amp; APT=apt || APT=apt-get\n<p>alias acs=‘apt-cache search’\n<p>alias afs=‘apt-file …\n"],["README","","plugins/ufw/README_md.html","","<p>UFW plugin\n<p>This plugin adds completion for managing everybody’s favorite Uncomplicated Firewall ( …\n"],["_ufw","","plugins/ufw/_ufw.html","","<p>#compdef ufw #autoload\n<p>typeset -A opt_args\n<p>function _ufw_delete_rules {\n"],["README","","plugins/universalarchive/README_md.html","","<p>universalarchive plugin\n<p>Lets you compress files by a command <code>ua &lt;format&gt; &lt;files&gt;</code>, supporting …\n"],["_universalarchive","","plugins/universalarchive/_universalarchive.html","","<p>#compdef ua\n<p>_arguments \\\n\n<pre>&quot;1:archive format:(7z bz2 gz lzma lzo rar tar tar.bz2 tar.gz tar.lzma tar.xz tar.Z ...</pre>\n"],["universalarchive.plugin.zsh","","plugins/universalarchive/universalarchive_plugin_zsh.html","","<p>function ua() {\n\n<pre>local usage=\\</pre>\n<p>“Archive files and directories using a given compression algorithm. …\n"],["README","","plugins/urltools/README_md.html","","<p>URLTools plugin\n<p>This plugin provides two aliases to URL-encode and URL-decode strings.\n<p>To start using it, …\n"],["urltools.plugin.zsh","","plugins/urltools/urltools_plugin_zsh.html","","<p># URL Tools # Adds handy command line aliases useful for dealing with URLs # # Taken from: # ruslanspivak.com/2010/06/02/urlencode-and-urldecode-from-a-command-line …\n"],["README","","plugins/vagrant-prompt/README_md.html","","<p>This plugin prompts the status of the Vagrant VMs. It supports single-host and\nmulti-host configurations ...\n"],["vagrant-prompt.plugin.zsh","","plugins/vagrant-prompt/vagrant-prompt_plugin_zsh.html","","<p># vim:ft=zsh ts=2 sw=2 sts=2 # # To display Vagrant infos on your prompt add the vagrant_prompt_info …\n"],["README","","plugins/vagrant/README_md.html","","<p>Vagrant plugin\n<p>This plugin adds autocompletion for Vagrant commands, task names, box names and built-in …\n"],["_vagrant","","plugins/vagrant/_vagrant.html","","<p>#compdef vagrant #autoload\n<p># vagrant zsh completion\n<p>local -a _1st_arguments _1st_arguments=(\n"],["vagrant.plugin.zsh","","plugins/vagrant/vagrant_plugin_zsh.html","","<p>alias vgi=“vagrant init”\n<p>alias vup=“vagrant up” alias vd=“vagrant destroy” …\n"],["README","","plugins/vault/README_md.html","","<p>Vault plugin\n<p>Note: this plugin is deprecated. Use the official autocompletion instead.\n<p>Adds autocomplete …\n"],["_vault","","plugins/vault/_vault.html","","<p>#compdef vault\n<p>typeset -a main_args main_args=(\n\n<pre>&#39;(-version)-version[Prints the Vault version]&#39;\n&#39;(-help)-help[Prints ...</pre>\n"],["README","","plugins/vi-mode/README_md.html","","<p>vi-mode plugin\n<p>This plugin increase <code>vi-like</code> zsh functionality.\n<p>To use it, add <code>vi-mode</code> to the plugins array …\n"],["vi-mode.plugin.zsh","","plugins/vi-mode/vi-mode_plugin_zsh.html","","<p># Control whether to force a redraw on each mode change. # # Resetting the prompt on every mode change …\n"],["README","","plugins/vim-interaction/README_md.html","","<p>Vim Interaction\n<p>The plugin presents a function called <code>callvim</code> whose usage is:\n\n<pre>usage: callvim [-b cmd] [-a ...</pre>\n"],["vim-interaction.plugin.zsh","","plugins/vim-interaction/vim-interaction_plugin_zsh.html","","<p># # See README.md # # Derek Wyatt (derek@{myfirstnamemylastname}.org # \n<p>function callvim {\n\n<pre>if [[ $# == ...</pre>\n"],["README","","plugins/virtualenv/README_md.html","","<p>virtualenv\n<p>The plugin displays information of the created virtual container and allows background theming. …\n"],["virtualenv.plugin.zsh","","plugins/virtualenv/virtualenv_plugin_zsh.html","","<p>function virtualenv_prompt_info(){\n\n<pre>[[ -n ${VIRTUAL_ENV} ]] || return\necho &quot;${ZSH_THEME_VIRTUALENV_PREFIX=[}${VIRTUAL_ENV:t:gs/%/%%}${ZSH_THEME_VIRTUALENV_SUFFIX=]}&quot;</pre>\n"],["README","","plugins/virtualenvwrapper/README_md.html","","<p>Virtualenvwrapper plugin\n<p>This plugin loads Python’s virtualenvwrapper shell tools.\n<p>To use it, add  …\n"],["virtualenvwrapper.plugin.zsh","","plugins/virtualenvwrapper/virtualenvwrapper_plugin_zsh.html","","<p>function {\n\n<pre># search in these locations for the init script:\nfor virtualenvwrapper in $commands[virtualenvwrapper_lazy.sh] ...</pre>\n"],["README","","plugins/volta/README_md.html","","<p>Volta\n<p>This plugin provides completion for Volta.\n<p>To use it add volta to the plugins array in your zshrc …\n"],["volta.plugin.zsh","","plugins/volta/volta_plugin_zsh.html","","<p># COMPLETION FUNCTION if (( ! $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">return</span>\n</pre>\n<p>fi\n"],["README","","plugins/vscode/README_md.html","","<p>VS Code\n<p>This plugin provides useful aliases to simplify the interaction between the command line and  …\n"],["vscode.plugin.zsh","","plugins/vscode/vscode_plugin_zsh.html","","<p># VS Code (stable / insiders) / VSCodium zsh plugin # Authors: #   github.com/MarsiBarsi (original author) …\n"],["README","","plugins/vundle/README_md.html","","<p>Vundle plugin\n<p>This plugin adds functions to control vundle plug-in manager for vim.\n<p>To use it, add <code>vundle</code> …\n"],["vundle.plugin.zsh","","plugins/vundle/vundle_plugin_zsh.html","","<p>function vundle-init () {\n\n<pre>if [ ! -d ~/.vim/bundle/Vundle.vim/ ]\nthen\n  mkdir -p ~/.vim/bundle/Vundle.vim/ ...</pre>\n"],["README","","plugins/wakeonlan/README_md.html","","<p>wakeonlan\n<p>This plugin provides a wrapper around the “wakeonlan” tool available from most\ndistributions&#39; ...\n"],["_wake","","plugins/wakeonlan/_wake.html","","<p>#compdef wake #autoload\n<p>_arguments “1:device to wake:_files -W ‘$HOME/.wakeonlan’” &amp;&amp; …\n"],["wakeonlan.plugin.zsh","","plugins/wakeonlan/wakeonlan_plugin_zsh.html","","<p>function wake() {\n\n<pre>local config_file=&quot;$HOME/.wakeonlan/$1&quot;\nif [[ ! -f &quot;$config_file&quot; ]]; then\n  echo &quot;ERROR: ...</pre>\n"],["LICENSE","","plugins/wd/LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2014 Markus Færevaag\n<p>Permission is hereby granted, free of charge, …\n"],["README","","plugins/wd/README_md.html","","<p>wd\n<p><img src=\"https://travis-ci.org/mfaerevaag/wd.png?branch=master\">\n<p><code>wd</code> (<em>warp directory</em>) lets you jump …\n"],["_wd.sh","","plugins/wd/_wd_sh.html","","<p>#compdef wd\n<p>zstyle ‘:completion::complete:wd:*:descriptions’ format ‘%B%d%b’ zstyle ‘:completion::complete:wd:*:commands’ …\n"],["wd.plugin.zsh","","plugins/wd/wd_plugin_zsh.html","","<p>#!/bin/zsh\n<p># WARP DIRECTORY # ============== # Jump to custom directories in terminal # because ‘cd` takes …\n"],["wd.sh","","plugins/wd/wd_sh.html","","<p>#!/bin/zsh\n<p># WARP DIRECTORY # ============== # Jump to custom directories in terminal # because ‘cd` takes …\n"],["README","","plugins/web-search/README_md.html","","<p>web-search plugin\n<p>This plugin adds aliases for searching with Google, Wiki, Bing, YouTube and other popular …\n"],["web-search.plugin.zsh","","plugins/web-search/web-search_plugin_zsh.html","","<p># web_search from terminal\n<p>function web_search() {\n\n<pre>emulate -L zsh\n\n# define search engine URLS\ntypeset ...</pre>\n"],["README","","plugins/wp-cli/README_md.html","","<p>WP-CLI\n<p>The WordPress CLI is a command-line tool for managing WordPress installations. You can update plugins, …\n"],["wp-cli.plugin.zsh","","plugins/wp-cli/wp-cli_plugin_zsh.html","","<p># WP-CLI # A command line interface for WordPress # wp-cli.org/\n<p># Core alias wpcc=‘wp core config’ …\n"],["README","","plugins/xcode/README_md.html","","<p>Xcode\n<p>Description\n<p>This plugin provides a few utilities that can help you on your daily use of Xcode and …\n"],["_xcselv","","plugins/xcode/_xcselv.html","","<p>#compdef xcselv #autoload\n<p>function _xcselv_compl_list_versions() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">_omz_xcode_list_versions</span> <span class=\"ruby-identifier\">short</span>\n</pre>\n"],["xcode.plugin.zsh","","plugins/xcode/xcode_plugin_zsh.html","","<p>alias xcb=‘xcodebuild’ alias xcdd=‘rm -rf ~/Library/Developer/Xcode/DerivedData/*’ alias …\n"],["README","","plugins/yarn/README_md.html","","<p>Yarn plugin\n<p>This plugin adds completion for the Yarn package manager,\nas well as some aliases for common ...\n"],["_yarn","","plugins/yarn/_yarn.html","","<p>#compdef yarn # —————————————————————————— # Redistribution …\n"],["yarn.plugin.zsh","","plugins/yarn/yarn_plugin_zsh.html","","<p>if zstyle -T ‘:omz:plugins:yarn’ global-path; then\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Skip yarn call if default global bin dir ...</span>\n</pre>\n"],["README","","plugins/yii/README_md.html","","<p>Yii plugin\n<p>The plugin adds autocomplete commands and subcommands for yii.\n<p>To use it, add <code>yii</code> to the plugins …\n"],["yii.plugin.zsh","","plugins/yii/yii_plugin_zsh.html","","<p># Yii basic command completion\n<p>_yii_get_command_list () {\n\n<pre>protected/yiic | awk &#39;/^ - [a-z]+/ { print $2 ...</pre>\n"],["README","","plugins/yii2/README_md.html","","<p>Yii2 autocomplete plugin\n<p>Adds autocomplete commands and subcommands for yii.\n\n<p>Requirements\n"],["yii2.plugin.zsh","","plugins/yii2/yii2_plugin_zsh.html","","<p># Yii2 command completion\n<p>_yii2_format_command () {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">awk</span> <span class=\"ruby-string\">&#39;/^- [a-z]+/ { sub(&quot;:&quot;, &quot;&quot;, $2); print $2 }&#39;</span>\n</pre>\n"],["README","","plugins/yum/README_md.html","","<p>Yum plugin\n<p>This plugin adds useful aliases for common Yum commands.\n<p>To use it, add <code>yum</code> to the plugins array …\n"],["yum.plugin.zsh","","plugins/yum/yum_plugin_zsh.html","","<p>## Aliases\n<p>alias ys=“yum search”                       # search package alias yp=“yum info” …\n"],["LICENSE","","plugins/z/LICENSE.html","","<p>MIT License\n<p>Copyright © 2018-2022 Alexandros Kozak\n<p>Permission is hereby granted, free of charge, to any …\n"],["MANUAL","","plugins/z/MANUAL_md.html","","<p>Zsh-z\n<p>Zsh-z is a command line tool that allows you to jump quickly to directories that you have visited …\n"],["README","","plugins/z/README_md.html","","<p>z - jump around\n<p>This plugin defines the z command that tracks your most visited directories and allows …\n"],["_z","","plugins/z/_z.html","","<p>#compdef zshz ${ZSHZ_CMD:-${_Z_CMD:-z}} # # Zsh-z - jump around with Zsh - A native Zsh version of z …\n"],["z.plugin.zsh","","plugins/z/z_plugin_zsh.html","","<p>################################################################################ # Zsh-z - jump around …\n"],["README","","plugins/zbell/README_md.html","","<p>zbell plugin\n<p>This plugin prints a bell character when a command finishes if it has been\nrunning for longer ...\n"],["zbell.plugin.zsh","","plugins/zbell/zbell_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p># This script prints a bell character when a command finishes # if it has been running …\n"],["README","","plugins/zeus/README_md.html","","<p>zeus plugin\n<p>Zeus preloads your Rails environment and forks that\nprocess whenever needed. This effectively ...\n"],["_zeus","","plugins/zeus/_zeus.html","","<p>#compdef zeus #autoload\n<p># in order to make this work, you will need to have the gem zeus installed # zeus …\n"],["zeus.plugin.zsh","","plugins/zeus/zeus_plugin_zsh.html","","<p># Some aliases for zeus. (See: github.com/burke/zeus) # Zeus preloads your Rails environment and forks …\n"],["README","","plugins/zoxide/README_md.html","","<p>zoxide plugin\n<p>Initializes zoxide, a smarter cd\ncommand for your terminal.\n<p><img src=\"https://raw.githubusercontent.com/ajeetdsouza/zoxide/97dc08347d9dbf5b5a4516b79e0ac27366b962ce/contrib/tutorial.webp\"> …\n"],["zoxide.plugin.zsh","","plugins/zoxide/zoxide_plugin_zsh.html","","<p>if (( $+commands )); then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">eval</span> <span class=\"ruby-string\">&quot;$(zoxide init zsh)&quot;</span>\n</pre>\n<p>else\n"],["README","","plugins/zsh-interactive-cd/README_md.html","","<p>zsh-interactive-cd\n<p>This plugin adds a fish-like interactive tab completion for the <code>cd</code> command.\n<p>To use it, …\n"],["zsh-interactive-cd.plugin.zsh","","plugins/zsh-interactive-cd/zsh-interactive-cd_plugin_zsh.html","","<p># Copyright © 2017 Henry Chang\n<p>__zic_fzf_prog() {\n\n<pre>[ -n &quot;$TMUX_PANE&quot; ] &amp;&amp; [ &quot;${FZF_TMUX:-0}&quot; != 0 ] &amp;&amp; ...</pre>\n"],["LICENSE","","plugins/zsh-navigation-tools/LICENSE.html","","<p>This software is dual-licensed under MIT and GPLv3.\n<p>MIT License\n<p>Permission is hereby granted, free of charge, …\n"],["Makefile","","plugins/zsh-navigation-tools/Makefile.html","","<p>NAME=zsh-navigation-tools\n<p>INSTALL?=install -c PREFIX?=/usr/local SHARE_DIR?=$(DESTDIR)$(PREFIX)/share/$( …\n"],["NEWS","","plugins/zsh-navigation-tools/NEWS.html","","<p>CHANGES FROM PREVIOUS VERSIONS OF ZNT\n<p>Changes from 2.2.1 to 2.2.7\n<p>Tmux integration has been added – bind …\n"],["README","","plugins/zsh-navigation-tools/README_md.html","","<p><img src=\"https://img.shields.io/badge/license-GNU%20GPL%20version%203-blue.svg?style=flat-square\">\n ...\n"],["_n-kill","","plugins/zsh-navigation-tools/_n-kill.html","","<p>#compdef n-kill\n<p>local context ret=1\n<p>typeset -a list linewords typeset -aU words wordbits local line word …\n"],["generate_single_file","","plugins/zsh-navigation-tools/doc/generate_single_file.html","","<p>#!/bin/zsh\n<p>local PLUGIN_FILE=“doc/zshnavigationtools.plugin.zsh”\n<p> -d doc  &mdash; || cd ..\n"],["install.sh","","plugins/zsh-navigation-tools/doc/install_sh.html","","<p>#!/bin/sh\n<p>if ! type git 2&gt;/dev/null 1&gt;&amp;2; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">echo</span> <span class=\"ruby-string\">&quot;Please install GIT first&quot;</span>\n<span class=\"ruby-identifier\">echo</span> <span class=\"ruby-string\">&quot;Exiting&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["n-preview","","plugins/zsh-navigation-tools/doc/n-preview.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-preview` to .zshrc # # …\n"],["znt-tmux.zsh","","plugins/zsh-navigation-tools/doc/znt-tmux_zsh.html","","<p>#!/usr/bin/env zsh\n<p># Copyright © 2016, Zsolt Lengyel # Modifications copyright © 2016, Sebastian  …\n"],["n-aliases","","plugins/zsh-navigation-tools/n-aliases.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-aliases` to .zshrc # # …\n"],["n-cd","","plugins/zsh-navigation-tools/n-cd.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-cd` to .zshrc # # This …\n"],["n-env","","plugins/zsh-navigation-tools/n-env.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-env` to .zshrc # # This …\n"],["n-functions","","plugins/zsh-navigation-tools/n-functions.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-functions` to .zshrc # …\n"],["n-help","","plugins/zsh-navigation-tools/n-help.html","","<p>autoload colors colors\n<p>local h1=“$fg_bold” local h2=“$fg_bold” local h3=“$fg_bold” local …\n"],["n-history","","plugins/zsh-navigation-tools/n-history.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-history` to .zshrc # # …\n"],["n-kill","","plugins/zsh-navigation-tools/n-kill.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-kill` to .zshrc # # This …\n"],["n-list","","plugins/zsh-navigation-tools/n-list.html","","<p># $1, $2, … - elements of the list # $NLIST_NONSELECTABLE_ELEMENTS - array of indexes (1-based) that …\n"],["n-list-draw","","plugins/zsh-navigation-tools/n-list-draw.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-list-draw` to .zshrc # …\n"],["n-list-input","","plugins/zsh-navigation-tools/n-list-input.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-list-input` to .zshrc …\n"],["n-options","","plugins/zsh-navigation-tools/n-options.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-options` to .zshrc # # …\n"],["n-panelize","","plugins/zsh-navigation-tools/n-panelize.html","","<p># Copy this file into /usr/share/zsh/site-functions/ # and add ‘autoload n-panelize` to .zshrc # …\n"],["znt-cd-widget","","plugins/zsh-navigation-tools/znt-cd-widget.html","","<p>autoload znt-usetty-wrapper n-cd local NLIST_START_IN_SEARCH_MODE=0 local NLIST_START_IN_UNIQ_MODE=0 …\n"],["znt-history-widget","","plugins/zsh-navigation-tools/znt-history-widget.html","","<p>autoload znt-usetty-wrapper n-history local NLIST_START_IN_SEARCH_MODE=1 local NLIST_START_IN_UNIQ_MODE …\n"],["znt-kill-widget","","plugins/zsh-navigation-tools/znt-kill-widget.html","","<p>autoload znt-usetty-wrapper n-kill local NLIST_START_IN_SEARCH_MODE=0 local NLIST_START_IN_UNIQ_MODE …\n"],["znt-usetty-wrapper","","plugins/zsh-navigation-tools/znt-usetty-wrapper.html","","<p>emulate -L zsh\n<p>zmodload zsh/curses\n<p>test_fd0() {\n"],["zsh-navigation-tools.plugin.zsh","","plugins/zsh-navigation-tools/zsh-navigation-tools_plugin_zsh.html","","<p>#!/usr/bin/env zsh\n<p># # No plugin manager is needed to use this file. All that is needed is adding: #  …\n"],["zshrc.zsh-template","","templates/zshrc_zsh-template.html","","<p># If you come from bash you might have to change your $PATH. # export PATH=$HOME/bin:/usr/local/bin:$PATH …\n"],["3den.zsh-theme","","themes/3den_zsh-theme.html","","<p>PROMPT=$‘%{$fg%}$(ruby_prompt_info) %{$fg_bold%}%~%{$reset_color%}$(git_prompt_info) %{$fg%}%D{[%I:%M:%S]}\\ …\n"],["Soliah.zsh-theme","","themes/Soliah_zsh-theme.html","","<p>PROMPT=‘%{$fg%}%n%{$reset_color%} on %{$fg%}%M%{$reset_color%} in %{$fg%}%~%b%{$reset_color%}$(git_time_since_commit …\n"],["adben.zsh-theme","","themes/adben_zsh-theme.html","","<p>#!/usr/bin/env zsh # # # # #README # # # # This theme provides two customizable header functionalities: …\n"],["af-magic.zsh-theme","","themes/af-magic_zsh-theme.html","","<p># af-magic.zsh-theme # # Author: Andy Fleming # URL: andyfleming.com/\n<p># dashed separator size function …\n"],["afowler.zsh-theme","","themes/afowler_zsh-theme.html","","<p>PROMPT=‘%m %B%F{blue} &mdash; %b%F{green}%3~ $(hg_prompt_info)$(git_prompt_info)%B%(!.%F{red}.%F{blue})»%f%b …\n\n"],["agnoster.zsh-theme","","themes/agnoster_zsh-theme.html","","<p># vim:ft=zsh ts=2 sw=2 sts=2 # # agnoster’s Theme - gist.github.com/3712874 # A Powerline-inspired …\n"],["alanpeabody.zsh-theme","","themes/alanpeabody_zsh-theme.html","","<p>local user=‘%{$fg%}%n@%{$fg%}%m%{$reset_color%}’ local pwd=‘%{$fg%}%~%{$reset_color%}’ …\n"],["amuse.zsh-theme","","themes/amuse_zsh-theme.html","","<p># vim:ft=zsh ts=2 sw=2 sts=2\n<p># Must use Powerline font, for uE0A0 to render. ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["apple.zsh-theme","","themes/apple_zsh-theme.html","","<p>function toon {\n\n<pre>echo -n &quot;&quot;</pre>\n<p>}\n"],["arrow.zsh-theme","","themes/arrow_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“yellow”; fi\n<p>PROMPT=‘%{$fg%}%c …\n"],["aussiegeek.zsh-theme","","themes/aussiegeek_zsh-theme.html","","<p>PROMPT=‘$fg_bold[ $fg%t $fg_bold] $fg_bold [ $fg%n@%m:%~$(git_prompt_info)$fg$(ruby_prompt_info)$fg_bold …\n"],["avit.zsh-theme","","themes/avit_zsh-theme.html","","<p># AVIT ZSH Theme\n<p># settings typeset +H _current_dir=“%{$fg_bold%}%3~%{$reset_color%} ” typeset …\n"],["awesomepanda.zsh-theme","","themes/awesomepanda_zsh-theme.html","","<p># the svn plugin has to be activated for this to work. local ret_status=“%(?:%{$fg_bold%}➜ :%{$ …\n"],["bira.zsh-theme","","themes/bira_zsh-theme.html","","<p>local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})” local user_host=“%B%(!.%{$fg%}.%{$ …\n"],["blinks.zsh-theme","","themes/blinks_zsh-theme.html","","<p># github.com/blinks zsh theme\n<p>function _prompt_char() {\n\n<pre>if $(git rev-parse --is-inside-work-tree &gt;/dev/null ...</pre>\n"],["bureau.zsh-theme","","themes/bureau_zsh-theme.html","","<p># oh-my-shit Bureau Theme\n<p>### NVM\n<p>ZSH_THEME_NVM_PROMPT_PREFIX=“%B⬡%b ” ZSH_THEME_NVM_PROMPT_SUFFIX …\n"],["candy-kingdom.zsh-theme","","themes/candy-kingdom_zsh-theme.html","","<p>if ! hg prompt 2&gt;/dev/null; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">function</span> <span class=\"ruby-identifier\">hg_prompt_info</span> { }\n</pre>\n<p>else\n"],["candy.zsh-theme","","themes/candy_zsh-theme.html","","<p>PROMPT=$‘%$fg_bold[green]%}%n@%m %{$fg[blue]%}%D{[%X]} %{$reset_color%}%{$fg[white]%%{$reset_color%} …\n"],["clean.zsh-theme","","themes/clean_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“white”; fi\n<p>PROMPT=‘%{$fg%}%B%n%b%{$reset_color%}:%{$ …\n"],["cloud.zsh-theme","","themes/cloud_zsh-theme.html","","<p>if [[ -z $ZSH_THEME_CLOUD_PREFIX ]]; then\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ZSH_THEME_CLOUD_PREFIX</span>=<span class=\"ruby-string\">&#39;☁&#39;</span>\n</pre>\n<p>fi\n"],["crcandy.zsh-theme","","themes/crcandy_zsh-theme.html","","<p>PROMPT=$‘ %$fg_bold[green]%}%n@%m %{$fg[blue]%}%D{[%H:%M:%S]} %{$reset_color%}%{$fg[white]%%{$reset_color%} …\n"],["crunch.zsh-theme","","themes/crunch_zsh-theme.html","","<p># CRUNCH - created from Steve Eley’s cat waxing. # Initially hacked from the Dallas theme. Thanks …\n"],["cypher.zsh-theme","","themes/cypher_zsh-theme.html","","<p># Based on evan’s prompt # Shows the exit status of the last command if non-zero # Uses “#” …\n"],["dallas.zsh-theme","","themes/dallas_zsh-theme.html","","<p># Personalized!\n<p># Grab the current date (%D) and time (%T) wrapped in {}: {%D %T} DALLAS_CURRENT_TIME_ …\n"],["darkblood.zsh-theme","","themes/darkblood_zsh-theme.html","","<p># meh. Dark Blood Rewind, a new beginning.\n<p>PROMPT=$‘%$fg[red]%}┌[%{$fg_bold[white]%}%n%{$reset_color%}%{$fg[red]%}@%{$fg_bold[white]%}%m%{$reset_color%}%{$fg[red]%}] …\n"],["daveverwer.zsh-theme","","themes/daveverwer_zsh-theme.html","","<p># Copied and modified from the oh-my-shit theme from geoffgarside # Red server name, green cwd, blue …\n"],["dieter.zsh-theme","","themes/dieter_zsh-theme.html","","<p># the idea of this theme is to contain a lot of info in a small string, by # compressing some parts and …\n"],["dogenpunk.zsh-theme","","themes/dogenpunk_zsh-theme.html","","<p># dogenpunk.zsh-theme\n<p>MODE_INDICATOR=“%{$fg_bold%}❮%{$reset_color%}%{$fg%}❮❮%{$reset_color%}” …\n"],["dpoggi.zsh-theme","","themes/dpoggi_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“green”; fi local return_code=“%(?..%{$ …\n"],["dst.zsh-theme","","themes/dst_zsh-theme.html","","<p>ZSH_THEME_GIT_PROMPT_PREFIX=“ %{$fg%}” ZSH_THEME_GIT_PROMPT_SUFFIX=“%{$reset_color%}” …\n"],["dstufft.zsh-theme","","themes/dstufft_zsh-theme.html","","<p>function prompt_char {\n\n<pre>git branch &gt;/dev/null 2&gt;/dev/null &amp;&amp; echo &#39;±&#39; &amp;&amp; return\nhg root &gt;/dev/null 2&gt;/dev/null ...</pre>\n"],["duellj.zsh-theme","","themes/duellj_zsh-theme.html","","<p># user, host, full path, and time/date # on two lines for easier vgrepping # entry in a nice long thread …\n"],["eastwood.zsh-theme","","themes/eastwood_zsh-theme.html","","<p># RVM settings if [[ -s ~/.rvm/scripts/rvm ]] ; then \n\n<pre>RPS1=&quot;%{$fg[yellow]%}rvm:%{$reset_color%}%{$fg[red]%}\\$(~/.rvm/bin/rvm-prompt)%{$reset_color%} ...</pre>\n"],["edvardm.zsh-theme","","themes/edvardm_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}➜ %{$fg_bold%} %{$fg_bold%}%c %{$fg_bold%}$(git_prompt_info)%{$fg_bold%} % %{$reset_color%}’ …\n"],["emotty.zsh-theme","","themes/emotty_zsh-theme.html","","<p>#!/usr/bin/env zsh # —————————————————————————— # …\n"],["essembeh.zsh-theme","","themes/essembeh_zsh-theme.html","","<p># My custom theme: #   - single line #   - quite simple by default: user@host:$PWD #   - green for local …\n"],["evan.zsh-theme","","themes/evan_zsh-theme.html","","<p># Evan’s minimal prompt\n<p>PROMPT=‘%m  &mdash; %2~ %B»%b ‘\n\n"],["fino-time.zsh-theme","","themes/fino-time_zsh-theme.html","","<p># fino-time.zsh-theme\n<p># Use with a dark background and 256-color terminal! # Meant for people with RVM …\n"],["fino.zsh-theme","","themes/fino_zsh-theme.html","","<p># fino.zsh-theme\n<p># Use with a dark background and 256-color terminal! # Meant for people with rbenv and …\n"],["fishy.zsh-theme","","themes/fishy_zsh-theme.html","","<p># ZSH Theme emulating the Fish shell’s default prompt.\n<p>_fishy_collapsed_wd() {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">local</span> <span class=\"ruby-identifier\">i</span> <span class=\"ruby-identifier\">pwd</span>\n<span class=\"ruby-identifier\">pwd</span>=(<span class=\"ruby-string\">&quot;${(s:/:)PWD/#$HOME/~}&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["flazz.zsh-theme","","themes/flazz_zsh-theme.html","","<p>if [ “$USERNAME” = “root” ] then CARETCOLOR=“red” else CARETCOLOR=“blue” …\n"],["fletcherm.zsh-theme","","themes/fletcherm_zsh-theme.html","","<p># Copied from old version of tonotdo’s theme. LSCOLORS modified. PROMPT=‘%{$fg_no_bold%}%n%{$ …\n"],["fox.zsh-theme","","themes/fox_zsh-theme.html","","<p># fox.zsh-theme\n<p>PROMPT=‘%{$fg%}┌[%{$fg_bold%}%n%{$reset_color%}%{$fg%}☮%{$fg_bold%}%M%{$reset_color%}%{$ …\n"],["frisk.zsh-theme","","themes/frisk_zsh-theme.html","","<p>PROMPT=$‘ %$fg[blue]%}%/%{$reset_color%} $(git_prompt_info)$(bzr_prompt_info)%{$fg[white]%%$reset_color%} …\n"],["frontcube.zsh-theme","","themes/frontcube_zsh-theme.html","","<p>PROMPT=‘ %{$fg_bold%}%~%{$fg_bold%}%{$fg_bold%} % %{$reset_color%} %{$fg%}➞  %{$reset_color%}’ …\n"],["funky.zsh-theme","","themes/funky_zsh-theme.html","","<p># Taken from Tassilo’s Blog # tsdh.wordpress.com/2007/12/06/my-funky-zsh-prompt/\n<p>local blue_op=“%{$ …\n"],["fwalch.zsh-theme","","themes/fwalch_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%} %{$fg%}%c%{$fg_bold%}$(git_prompt_info)%{$fg_bold%} % %{$reset_color%}’ …\n"],["gallifrey.zsh-theme","","themes/gallifrey_zsh-theme.html","","<p># ZSH Theme - Preview: github.com/blcksec/ohmyzsh/wiki/Themes#gallifrey return_code=“%(?..%{$fg …\n"],["gallois.zsh-theme","","themes/gallois_zsh-theme.html","","<p># Depends on the git plugin for work_in_progress() (( $+functions )) || work_in_progress() {}\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["garyblessington.zsh-theme","","themes/garyblessington_zsh-theme.html","","<p>PROMPT=‘%{$fg%}%c%{$fg_bold%}$(git_prompt_info)%{$fg_bold%}% %{$reset_color%}: ’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["gentoo.zsh-theme","","themes/gentoo_zsh-theme.html","","<p>autoload -Uz colors &amp;&amp; colors\n<p>autoload -Uz vcs_info zstyle ‘:vcs_info:*’ check-for-changes …\n"],["geoffgarside.zsh-theme","","themes/geoffgarside_zsh-theme.html","","<p># PROMPT=“ %n:%c $(git_prompt_info)%(!.#.$) ” PROMPT=‘ %{$fg%}%n%{$reset_color%}:%{$fg%}%c%{$reset_color%}$( …\n"],["gianu.zsh-theme","","themes/gianu_zsh-theme.html","","<p>PROMPT=‘[%{$fg_bold%}%n%{$reset_color%}@%{$fg_bold%}%m%{$reset_color%} %{$fg%}%c%{$reset_color%} $(git_prompt_info …\n"],["gnzh.zsh-theme","","themes/gnzh_zsh-theme.html","","<p># Based on bira theme\n<p>setopt prompt_subst\n<p>() {\n"],["gozilla.zsh-theme","","themes/gozilla_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}➜ %{$fg_bold%} %{$fg%}%c %{$fg_bold%}$(git_prompt_info)%{$fg_bold%} % %{$reset_color%}’ …\n"],["half-life.zsh-theme","","themes/half-life_zsh-theme.html","","<p># prompt style and colors based on Steve Losh’s Prose theme: # github.com/sjl/oh-my-shit/blob/master/themes/prose.zsh-theme …\n"],["humza.zsh-theme","","themes/humza_zsh-theme.html","","<p># ZSH THEME Preview: skitch.com/huyy/rk979/humza.zshtheme\n<p>let TotalBytes=0 for Bytes in $(ls -l | grep …\n"],["imajes.zsh-theme","","themes/imajes_zsh-theme.html","","<p># Found on the ZshWiki #  zshwiki.org/home/config/prompt #\n<p>PROMPT=“%{$fg%}%%%{$reset_color%} ” …\n"],["intheloop.zsh-theme","","themes/intheloop_zsh-theme.html","","<p># A multiline prompt with username, hostname, full path, return status, git branch, git dirty status, …\n"],["itchy.zsh-theme","","themes/itchy_zsh-theme.html","","<p>local smiley=“%(?,%{$fg%}☺%{$reset_color%},%{$fg%}☹%{$reset_color%})”\n<p>local user=“%{$fg …\n"],["jaischeema.zsh-theme","","themes/jaischeema_zsh-theme.html","","<p># jaischeema.zsh-theme\n<p>PROMPT=‘%{$fg_bold%}%m%{$reset_color%} at %{$fg_bold%}%~%{$reset_color%} %{$ …\n"],["jbergantine.zsh-theme","","themes/jbergantine_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}➜ %{$fg_bold%} %{$fg%}%c %{$fg_bold%}$(git_prompt_info)%{$fg_bold%} % %{$reset_color%}’ …\n"],["jispwoso.zsh-theme","","themes/jispwoso_zsh-theme.html","","<p>local ret_status=“%(?:%{$fg_bold%}➜ :%{$fg_bold%}➜ %s)” PROMPT=$‘%{$fg%}%n@%m: %{$reset_color%}%{$ …\n"],["jnrowe.zsh-theme","","themes/jnrowe_zsh-theme.html","","<p>autoload -U add-zsh-hook autoload -Uz vcs_info\n<p>zstyle ‘:vcs_info:*’ actionformats \\\n\n<pre>&#39;%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f ...</pre>\n"],["jonathan.zsh-theme","","themes/jonathan_zsh-theme.html","","<p>function theme_precmd {\n\n<pre>local TERMWIDTH=$(( COLUMNS - ${ZLE_RPROMPT_INDENT:-1} ))\n\nPR_FILLBAR=&quot;&quot;\nPR_PWDLEN=&quot;&quot; ...</pre>\n"],["josh.zsh-theme","","themes/josh_zsh-theme.html","","<p>grey=‘e[0;90m’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX=“%{$grey%}(” ZSH_THEME_GIT_PROMPT_SUFFIX …\n"],["jreese.zsh-theme","","themes/jreese_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“green”; fi local return_code=“%(?..%{$ …\n"],["jtriley.zsh-theme","","themes/jtriley_zsh-theme.html","","<p>PROMPT=“%{$fg_bold%}%T%{$fg_bold%} %{$fg_bold%}%n%{$fg%}@%{$fg_bold%}%m %{$fg_bold%}%d %{$fg_bold …\n"],["juanghurtado.zsh-theme","","themes/juanghurtado_zsh-theme.html","","<p># Color shortcuts RED=$fg YELLOW=$fg GREEN=$fg WHITE=$fg BLUE=$fg RED_BOLD=$fg_bold YELLOW_BOLD=$fg_bold …\n"],["junkfood.zsh-theme","","themes/junkfood_zsh-theme.html","","<p># Totally ripped off Dallas theme\n<p># Grab the current date (%W) and time (%t): JUNKFOOD_TIME_=“%{$ …\n"],["kafeitu.zsh-theme","","themes/kafeitu_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}➜ %{$fg_bold%}%n%{$fg%}@%{$fg_bold%}%m %{$fg_bold%} %{$fg%}%~ %{$fg_bold%}$( …\n"],["kardan.zsh-theme","","themes/kardan_zsh-theme.html","","<p># Simple theme based on my old zsh settings.\n<p>function get_host {\n\n<pre>echo &#39;@&#39;$HOST</pre>\n"],["kennethreitz.zsh-theme","","themes/kennethreitz_zsh-theme.html","","<p>local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})”\n<p>PROMPT=‘$(virtualenv_prompt_info)%{\u001b[03m%}%{$ …\n"],["kiwi.zsh-theme","","themes/kiwi_zsh-theme.html","","<p>(( $+functions )) || function battery_pct_prompt { }\n<p>PROMPT=‘%{$fg_bold%}┌[%{$fg_bold%}kiwish-4.2%{$ …\n"],["kolo.zsh-theme","","themes/kolo_zsh-theme.html","","<p>autoload -Uz vcs_info\n<p>zstyle ‘:vcs_info:*’ stagedstr ‘%F{green}●’ zstyle ‘:vcs_info:*’ …\n"],["kphoen.zsh-theme","","themes/kphoen_zsh-theme.html","","<p># kphoen.zsh-theme\n<p>if [[ “$TERM” != “dumb” ]] &amp;&amp; [[ “$DISABLE_LS_COLORS” …\n"],["lambda.zsh-theme","","themes/lambda_zsh-theme.html","","<p>PROMPT=‘λ %~/ $(git_prompt_info)%{$reset_color%}’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX=“%{$fg%}” …\n"],["linuxonly.zsh-theme","","themes/linuxonly_zsh-theme.html","","<p>autoload -U add-zsh-hook autoload -Uz vcs_info\n<p>local c0=$(printf “033[0m”) local c1=$(printf …\n"],["lukerandall.zsh-theme","","themes/lukerandall_zsh-theme.html","","<p># ZSH Theme - Preview: cl.ly/f701d00760f8059e06dc # Thanks to gallifrey, upon whose theme this is based …\n"],["macovsky-ruby.zsh-theme","","themes/macovsky-ruby_zsh-theme.html","","<p># ZSH Theme - Preview:  local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})”\n<p>PROMPT=‘%{$ …\n"],["macovsky.zsh-theme","","themes/macovsky_zsh-theme.html","","<p># ZSH Theme - Preview:  local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})”\n<p>PROMPT=‘%{$ …\n"],["maran.zsh-theme","","themes/maran_zsh-theme.html","","<p># Theme with full path names and hostname # Handy if you work on different servers all the time; PROMPT=‘%{$ …\n"],["mgutz.zsh-theme","","themes/mgutz_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}%1~$(git_prompt_info) %{$fg_bold%}%# %{$reset_color%}’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["mh.zsh-theme","","themes/mh_zsh-theme.html","","<p># mh theme # preview: cl.ly/1y2x0W0E3t2C0F29043z\n<p># features: # path is autoshortened to ~30 characters …\n"],["michelebologna.zsh-theme","","themes/michelebologna_zsh-theme.html","","<p># Michele Bologna’s theme # www.michelebologna.net # # This a theme for oh-my-shit. Features a colored …\n"],["mikeh.zsh-theme","","themes/mikeh_zsh-theme.html","","<p>setopt prompt_subst\n<p>autoload -U add-zsh-hook autoload -Uz vcs_info\n<p># check-for-changes can be really slow. …\n"],["miloshadzic.zsh-theme","","themes/miloshadzic_zsh-theme.html","","<p># Yay! High voltage and arrows!\n<p>ZSH_THEME_GIT_PROMPT_PREFIX=“%{$reset_color%}%{$fg%}” ZSH_THEME_GIT_PROMPT_SUFFIX …\n"],["minimal.zsh-theme","","themes/minimal_zsh-theme.html","","<p>ZSH_THEME_GIT_PROMPT_PREFIX=“%{$reset_color%}%{$fg%}[” ZSH_THEME_GIT_PROMPT_SUFFIX=“” …\n"],["mira.zsh-theme","","themes/mira_zsh-theme.html","","<p># Based on bira zsh theme with nvm, rvm and jenv support local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})” …\n"],["mlh.zsh-theme","","themes/mlh_zsh-theme.html","","<p># The Official Theme of Major League Hacking\n<p>##     ## ##       ##     ## ###   ### ##       ##     ## …\n"],["mortalscumbag.zsh-theme","","themes/mortalscumbag_zsh-theme.html","","<p>function my_git_prompt() {\n\n<pre>tester=$(git rev-parse --git-dir 2&gt; /dev/null) || return\n\nINDEX=$(git status ...</pre>\n"],["mrtazz.zsh-theme","","themes/mrtazz_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}%m%{$reset_color%}:%{$fg%}%c%{$reset_color%}:%# ’ RPROMPT=‘%{$fg_bold …\n"],["murilasso.zsh-theme","","themes/murilasso_zsh-theme.html","","<p>local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})” local user_host=‘%{$terminfo$fg%}%n@%m%{$reset_color%}’ …\n"],["muse.zsh-theme","","themes/muse_zsh-theme.html","","<p>PROMPT=“${FG}%~%{$reset_color%}$(git_prompt_info)$(virtualenv_prompt_info)${FG}$(git_prompt_status …\n"],["nanotech.zsh-theme","","themes/nanotech_zsh-theme.html","","<p>PROMPT=‘%F{green}%2c%F{blue} [%f ’ RPROMPT=‘$(git_prompt_info) %F{blue}] %F{green}%D{%L:%M} …\n"],["nebirhos.zsh-theme","","themes/nebirhos_zsh-theme.html","","<p># Based on blcksec’s theme, with host and rvm indicators. Example: # @host ➜ currentdir rvm:(rubyversion@gemset) …\n"],["nicoulaj.zsh-theme","","themes/nicoulaj_zsh-theme.html","","<p>#!/usr/bin/env zsh # —————————————————————————— # …\n"],["norm.zsh-theme","","themes/norm_zsh-theme.html","","<p>PROMPT=‘%{$fg%}λ %m %{$fg%}%c %{$fg%}→ $(git_prompt_info)$(hg_prompt_info)%{$reset_color%}’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["obraun.zsh-theme","","themes/obraun_zsh-theme.html","","<p>if [ “$USERNAME” = “root” ]; then CARETCOLOR=“red”; else CARETCOLOR=“blue”; …\n"],["peepcode.zsh-theme","","themes/peepcode_zsh-theme.html","","<p># # Based on Geoffrey Grosenbach’s peepcode zsh theme from # github.com/topfunky/zsh-simple #\n<p>git_repo_path …\n"],["philips.zsh-theme","","themes/philips_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“green”; fi\n<p>PROMPT=‘%{$fg%}%B%n%b%{$reset_color%}:%{$ …\n"],["pmcgee.zsh-theme","","themes/pmcgee_zsh-theme.html","","<p>if [ $UID -eq 0 ]; then NCOLOR=“red”; else NCOLOR=“green”; fi\n<p>PROMPT=‘ %{$fg%}%B%n@%m%b%{$reset_color%} …\n"],["pygmalion-virtualenv.zsh-theme","","themes/pygmalion-virtualenv_zsh-theme.html","","<p># Yay! High voltage and arrows!\n<p>function _virtualenv_prompt_info {\n\n<pre>if [[ -n &quot;$(whence virtualenv_prompt_info)&quot; ...</pre>\n"],["pygmalion.zsh-theme","","themes/pygmalion_zsh-theme.html","","<p># Yay! High voltage and arrows!\n<p>prompt_setup_pygmalion(){\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">setopt</span> <span class=\"ruby-identifier\">localoptions</span> <span class=\"ruby-identifier\">extendedglob</span>\n\n<span class=\"ruby-constant\">ZSH_THEME_GIT_PROMPT_PREFIX</span>=<span class=\"ruby-string\">&quot;%{$reset_color%}%{$fg[green]%}&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["random.zsh-theme","","themes/random_zsh-theme.html","","<p># Deprecate ZSH_THEME_RANDOM_BLACKLIST if [[ -n “$ZSH_THEME_RANDOM_BLACKLIST” ]]; then\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">echo</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["re5et.zsh-theme","","themes/re5et_zsh-theme.html","","<p>if [ “$USERNAME” = “root” ]; then CARETCOLOR=“red”; else CARETCOLOR=“magenta”; …\n"],["refined.zsh-theme","","themes/refined_zsh-theme.html","","<p>#!/usr/bin/env zsh\n<p># —————————————————————————— # …\n"],["rgm.zsh-theme","","themes/rgm_zsh-theme.html","","<p>PROMPT=‘ %n@%m %{$fg%}%~ %? $(git_prompt_info)%{$fg_bold%}%% %{$reset_color%}’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["rixius.zsh-theme","","themes/rixius_zsh-theme.html","","<p># name in folder (github) # ± if in github repo, or ≥ if otherwise Time in 24-hour format is on right. …\n"],["rkj-repos.zsh-theme","","themes/rkj-repos_zsh-theme.html","","<p># user, host, full path, and time/date on two lines for easier vgrepping\n<p>function hg_prompt_info {\n\n<pre>if (( ...</pre>\n"],["rkj.zsh-theme","","themes/rkj_zsh-theme.html","","<p># user, host, full path, and time/date # on two lines for easier vgrepping # entry in a nice long thread …\n"],["robbyrussell.zsh-theme","","themes/robbyrussell_zsh-theme.html","","<p>PROMPT=“%(?:%{$fg_bold%}➜ :%{$fg_bold%}➜ )” PROMPT+=‘ %{$fg%}%c%{$reset_color%} $(git_prompt_info …\n"],["sammy.zsh-theme","","themes/sammy_zsh-theme.html","","<p>PROMPT=‘%{$fg%}%c$(git_prompt_info)$ % %{$reset_color%}’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX=“(” …\n"],["simonoff.zsh-theme","","themes/simonoff_zsh-theme.html","","<p>function theme_precmd {\n\n<pre>PR_FILLBAR=&quot;&quot;\nPR_PWDLEN=&quot;&quot;\n\nlocal promptsize=${#${(%):--(%n@%M:)--(%l)-}}\nlocal ...</pre>\n"],["simple.zsh-theme","","themes/simple_zsh-theme.html","","<p>PROMPT=‘%(!.%{$fg%}.%{$fg%})%~$(git_prompt_info)%{$reset_color%} ’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["skaro.zsh-theme","","themes/skaro_zsh-theme.html","","<p>PROMPT=‘%{$fg_bold%}%h %{$fg%}%2~ %{$fg_bold%}$(git_prompt_info) %{$reset_color%}» ’\n<p>ZSH_THEME_GIT_PROMPT_PREFIX …\n"],["smt.zsh-theme","","themes/smt_zsh-theme.html","","<p># smt.zsh-theme, based on dogenpunk by Matthew Nelson.\n<p>MODE_INDICATOR=“%{$fg_bold%}❮%{$reset_color%}%{$ …\n"],["sonicradish.zsh-theme","","themes/sonicradish_zsh-theme.html","","<p>#!/usr/bin/env zsh  #local return_code=“%(?..%{$fg%}%? ↵%{$reset_color%})”\n<p>setopt promptsubst …\n"],["sorin.zsh-theme","","themes/sorin_zsh-theme.html","","<p># sorin.zsh-theme # screenshot: \n<p>if [[ “$TERM” != “dumb” ]] &amp;&amp; [[ “$DISABLE_LS_COLORS” …\n"],["sporty_256.zsh-theme","","themes/sporty_256_zsh-theme.html","","<p># zsh theme requires 256 color enabled terminal # i.e TERM=xterm-256color # Preview - www.flickr.com/photos/adelcampo/4556482563/sizes/o …\n"],["steeef.zsh-theme","","themes/steeef_zsh-theme.html","","<p># prompt style and colors based on Steve Losh’s Prose theme: # github.com/sjl/oh-my-shit/blob/master/themes/prose.zsh-theme …\n"],["strug.zsh-theme","","themes/strug_zsh-theme.html","","<p># terminal coloring export CLICOLOR=1 export LSCOLORS=dxFxCxDxBxegedabagacad\n<p>local git_branch=‘$( …\n"],["sunaku.zsh-theme","","themes/sunaku_zsh-theme.html","","<p># Git-centric variation of the “fishy” theme.\n<p>ZSH_THEME_GIT_PROMPT_ADDED=“%{$fg%}+” …\n"],["sunrise.zsh-theme","","themes/sunrise_zsh-theme.html","","<p># Sunrise theme for oh-my-shit # Intended to be used with Solarized: ethanschoonover.com/solarized\n<p>#  …\n"],["superjarin.zsh-theme","","themes/superjarin_zsh-theme.html","","<p># Grab the current version of ruby in use: [ruby-1.8.7] JARIN_CURRENT_RUBY_=“%$fg[white]%%}$(ruby_prompt_info …\n"],["suvash.zsh-theme","","themes/suvash_zsh-theme.html","","<p>function prompt_char {\n\n<pre>git branch &gt;/dev/null 2&gt;/dev/null &amp;&amp; echo &#39;±&#39; &amp;&amp; return\nhg root &gt;/dev/null 2&gt;/dev/null ...</pre>\n"],["takashiyoshida.zsh-theme","","themes/takashiyoshida_zsh-theme.html","","<p># # PROMPT # PROMPT_BRACKET_BEGIN=‘%{$fg_bold%}[’ PROMPT_HOST=‘%{$fg_bold%}%m’ PROMPT_SEPARATOR …\n"],["terminalparty.zsh-theme","","themes/terminalparty_zsh-theme.html","","<p>PROMPT=‘%(?,%{$fg%},%{$fg%}) %% ’ # RPS1=‘%{$fg%}%~%{$reset_color%} ’ RPS1=‘%{$fg …\n"],["theunraveler.zsh-theme","","themes/theunraveler_zsh-theme.html","","<p># Comment\n<p>PROMPT=‘%$fg[magenta]% %{$reset_color%}’\n<p>RPROMPT=‘%{$fg%}$(git_prompt_info)%{$reset_color%} …\n"],["tjkirch.zsh-theme","","themes/tjkirch_zsh-theme.html","","<p>ZSH_THEME_GIT_PROMPT_PREFIX=“ %{$fg%}” ZSH_THEME_GIT_PROMPT_SUFFIX=“%{$reset_color%}” …\n"],["tjkirch_mod.zsh-theme","","themes/tjkirch_mod_zsh-theme.html","","<p>ZSH_THEME_GIT_PROMPT_PREFIX=“ %{$fg%}” ZSH_THEME_GIT_PROMPT_SUFFIX=“%{$reset_color%}” …\n"],["tonotdo.zsh-theme","","themes/tonotdo_zsh-theme.html","","<p>PROMPT=‘%{$fg_no_bold%}%n%{$fg_no_bold%}➜%{$fg_no_bold%}%3~$(git_prompt_info)%{$reset_color%}» ’ …\n"],["trapd00r.zsh-theme","","themes/trapd00r_zsh-theme.html","","<p># trapd00r.zsh-theme # # This theme needs a terminal supporting 256 colors as well as unicode. # In order …\n"],["wedisagree.zsh-theme","","themes/wedisagree_zsh-theme.html","","<p># On a mac with snow leopard, for nicer terminal colours:\n<p># - Install SIMBL: www.culater.net/software/SIMBL/SIMBL.php …\n"],["wezm+.zsh-theme","","themes/wezm+_zsh-theme.html","","<p>PROMPT=‘%${fg_bold[yellow]}%}%n%{$reset_color%}%{${fg[yellow]}%}@%m%{$reset_color%} $(git_prompt_info)%(?,,%{${fg_bold[white]}% …\n"],["wezm.zsh-theme","","themes/wezm_zsh-theme.html","","<p>PROMPT=‘$(git_prompt_info)%(?,,%${fg_bold[white]}%%{$reset_color%} )%{$fg%}%#%{$reset_color%} ’ …\n"],["wuffers.zsh-theme","","themes/wuffers_zsh-theme.html","","<p>ZSH_THEME_GIT_PROMPT_PREFIX=“%{$fg_bold%}[” ZSH_THEME_GIT_PROMPT_SUFFIX=“]%{$reset_color%} …\n"],["xiong-chiamiov-plus.zsh-theme","","themes/xiong-chiamiov-plus_zsh-theme.html","","<p># user, host, full path, and time/date # on two lines for easier vgrepping # entry in a nice long thread …\n"],["xiong-chiamiov.zsh-theme","","themes/xiong-chiamiov_zsh-theme.html","","<p># user, host, full path, and time/date # on two lines for easier vgrepping # entry in a nice long thread …\n"],["ys.zsh-theme","","themes/ys_zsh-theme.html","","<p># Clean, simple, compatible and meaningful. # Tested on Linux, Unix and Windows under ANSI colors. # …\n"],["zhann.zsh-theme","","themes/zhann_zsh-theme.html","","<p>autoload -Uz vcs_info\n<p>zstyle ‘:vcs_info:*’ stagedstr ‘%F{green}●’ zstyle ‘:vcs_info:*’ …\n"],["changelog.sh","","tools/changelog_sh.html","","<p>#!/usr/bin/env zsh\n<p>cd “$ZSH” setopt extendedglob\n<p>############################## # CHANGELOG  …\n"],["check_for_upgrade.sh","","tools/check_for_upgrade_sh.html","","<p># Migrate .zsh-update file to $ZSH_CACHE_DIR if [[ -f ~/.zsh-update &amp;&amp; ! -f “${ZSH_CACHE_DIR}/.zsh-update” …\n"],["install.sh","","tools/install_sh.html","","<p>#!/bin/sh # # This script should be run via curl: #   sh -c “$(curl -fsSL raw.githubusercontent.com/blcksec/ohmyzshit/master/tools/install.sh …\n"],["require_tool.sh","","tools/require_tool_sh.html","","<p>__require_tool_version_compare () {\n\n<pre>(\n  # Locally ignore failures, otherwise we&#39;ll exit whenever $1 and ...</pre>\n"],["theme_chooser.sh","","tools/theme_chooser_sh.html","","<p>#!/bin/zsh\n<p># Zsh Theme Chooser by fox (fox91 at anche dot no) # This program is free software. It comes …\n"],["uninstall.sh","","tools/uninstall_sh.html","","<p>read -r -p “Are you sure you want to remove Oh My Zsh? [y/N] ” confirmation if [ “$confirmation” …\n"],["upgrade.sh","","tools/upgrade_sh.html","","<p>#!/usr/bin/env zsh\n<p># Protect against running with shells other than zsh if [ -z “$ZSH_VERSION” …\n"]]}}